{
  "api/EasyRpc.Abstractions.Headers.CacheControlAttribute.html": {
    "href": "api/EasyRpc.Abstractions.Headers.CacheControlAttribute.html",
    "title": "Class CacheControlAttribute | EasyRpc documentation website",
    "keywords": "Class CacheControlAttribute Attribute for setting cache control response header Inheritance Object Attribute ResponseHeaderAttribute CacheControlAttribute NoCacheAttribute Inherited Members ResponseHeaderAttribute.Name ResponseHeaderAttribute.Value Attribute.Equals(Object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, Boolean) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, Boolean) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, Boolean) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, Boolean) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, Boolean) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, Boolean) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, Boolean) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, Boolean) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, Boolean) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Boolean) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, Boolean) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, Boolean) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, Boolean) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, Boolean) Attribute.Match(Object) Attribute.TypeId Object.Equals(Object, Object) Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : EasyRpc.Abstractions.Headers Assembly : EasyRpc.Abstractions.dll Syntax public class CacheControlAttribute : ResponseHeaderAttribute Constructors | Improve this Doc View Source CacheControlAttribute(String) Default constructor Declaration public CacheControlAttribute(string value) Parameters Type Name Description String value"
  },
  "api/EasyRpc.Abstractions.Headers.html": {
    "href": "api/EasyRpc.Abstractions.Headers.html",
    "title": "Namespace EasyRpc.Abstractions.Headers | EasyRpc documentation website",
    "keywords": "Namespace EasyRpc.Abstractions.Headers Classes CacheControlAttribute Attribute for setting cache control response header NoCacheAttribute Sets the cache control header to be no-cache ResponseHeaderAttribute Sets a response header value"
  },
  "api/EasyRpc.Abstractions.Headers.NoCacheAttribute.html": {
    "href": "api/EasyRpc.Abstractions.Headers.NoCacheAttribute.html",
    "title": "Class NoCacheAttribute | EasyRpc documentation website",
    "keywords": "Class NoCacheAttribute Sets the cache control header to be no-cache Inheritance Object Attribute ResponseHeaderAttribute CacheControlAttribute NoCacheAttribute Inherited Members ResponseHeaderAttribute.Name ResponseHeaderAttribute.Value Attribute.Equals(Object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, Boolean) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, Boolean) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, Boolean) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, Boolean) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, Boolean) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, Boolean) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, Boolean) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, Boolean) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, Boolean) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Boolean) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, Boolean) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, Boolean) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, Boolean) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, Boolean) Attribute.Match(Object) Attribute.TypeId Object.Equals(Object, Object) Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : EasyRpc.Abstractions.Headers Assembly : EasyRpc.Abstractions.dll Syntax public class NoCacheAttribute : CacheControlAttribute Constructors | Improve this Doc View Source NoCacheAttribute() Default constructor Declaration public NoCacheAttribute()"
  },
  "api/EasyRpc.Abstractions.Headers.ResponseHeaderAttribute.html": {
    "href": "api/EasyRpc.Abstractions.Headers.ResponseHeaderAttribute.html",
    "title": "Class ResponseHeaderAttribute | EasyRpc documentation website",
    "keywords": "Class ResponseHeaderAttribute Sets a response header value Inheritance Object Attribute ResponseHeaderAttribute CacheControlAttribute Inherited Members Attribute.Equals(Object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, Boolean) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, Boolean) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, Boolean) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, Boolean) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, Boolean) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, Boolean) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, Boolean) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, Boolean) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, Boolean) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Boolean) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, Boolean) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, Boolean) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, Boolean) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, Boolean) Attribute.Match(Object) Attribute.TypeId Object.Equals(Object, Object) Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : EasyRpc.Abstractions.Headers Assembly : EasyRpc.Abstractions.dll Syntax public class ResponseHeaderAttribute : Attribute Constructors | Improve this Doc View Source ResponseHeaderAttribute(String, String) Default constructor Declaration public ResponseHeaderAttribute(string name, string value) Parameters Type Name Description String name String value Properties | Improve this Doc View Source Name Header name (i.e. Cache-Control, etc) Declaration public string Name { get; } Property Value Type Description String | Improve this Doc View Source Value Value for header Declaration public string Value { get; } Property Value Type Description String"
  },
  "api/EasyRpc.Abstractions.Path.BasePathAttribute.html": {
    "href": "api/EasyRpc.Abstractions.Path.BasePathAttribute.html",
    "title": "Class BasePathAttribute | EasyRpc documentation website",
    "keywords": "Class BasePathAttribute Interface for describing a base path attribute Inheritance Object Attribute BasePathAttribute Implements IBasePathAttribute Inherited Members Attribute.Equals(Object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, Boolean) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, Boolean) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, Boolean) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, Boolean) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, Boolean) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, Boolean) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, Boolean) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, Boolean) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, Boolean) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Boolean) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, Boolean) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, Boolean) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, Boolean) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, Boolean) Attribute.Match(Object) Attribute.TypeId Object.Equals(Object, Object) Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : EasyRpc.Abstractions.Path Assembly : EasyRpc.Abstractions.dll Syntax public class BasePathAttribute : Attribute, IBasePathAttribute Constructors | Improve this Doc View Source BasePathAttribute(String) Default constructor Declaration public BasePathAttribute(string basePath) Parameters Type Name Description String basePath Properties | Improve this Doc View Source BasePath Base path Declaration public string BasePath { get; } Property Value Type Description String Implements IBasePathAttribute"
  },
  "api/EasyRpc.Abstractions.Path.DeleteMethodAttribute.html": {
    "href": "api/EasyRpc.Abstractions.Path.DeleteMethodAttribute.html",
    "title": "Class DeleteMethodAttribute | EasyRpc documentation website",
    "keywords": "Class DeleteMethodAttribute Expose method as DELETE Inheritance Object Attribute DeleteMethodAttribute Implements IPathAttribute Inherited Members Attribute.Equals(Object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, Boolean) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, Boolean) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, Boolean) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, Boolean) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, Boolean) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, Boolean) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, Boolean) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, Boolean) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, Boolean) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Boolean) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, Boolean) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, Boolean) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, Boolean) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, Boolean) Attribute.Match(Object) Attribute.TypeId Object.Equals(Object, Object) Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : EasyRpc.Abstractions.Path Assembly : EasyRpc.Abstractions.dll Syntax public class DeleteMethodAttribute : Attribute, IPathAttribute Constructors | Improve this Doc View Source DeleteMethodAttribute(String) Default constructor Declaration public DeleteMethodAttribute(string path = null) Parameters Type Name Description String path Properties | Improve this Doc View Source HasBody Does the request have a body Declaration public bool HasBody { get; } Property Value Type Description Boolean | Improve this Doc View Source Method HTTP method Declaration public string Method { get; } Property Value Type Description String | Improve this Doc View Source Path Path Declaration public string Path { get; } Property Value Type Description String | Improve this Doc View Source Success HTTP success status code Declaration public HttpStatusCode Success { get; set; } Property Value Type Description HttpStatusCode Explicit Interface Implementations | Improve this Doc View Source IPathAttribute.SuccessCodeValue HTTP success code Declaration int IPathAttribute.SuccessCodeValue { get; } Returns Type Description Int32 Implements IPathAttribute"
  },
  "api/EasyRpc.Abstractions.Path.ExposeDefaultMethod.html": {
    "href": "api/EasyRpc.Abstractions.Path.ExposeDefaultMethod.html",
    "title": "Enum ExposeDefaultMethod | EasyRpc documentation website",
    "keywords": "Enum ExposeDefaultMethod Http method to use when exposing methods Namespace : EasyRpc.Abstractions.Path Assembly : EasyRpc.Abstractions.dll Syntax public enum ExposeDefaultMethod Fields Name Description GetOnly Get Only methods PostAndGet Post when there are parameters, Get when no parameters PostAndGetInt Post when more than int parameters, Get when no parameters and int PostOnly Always use post when no method configured through Attribute or Fluent"
  },
  "api/EasyRpc.Abstractions.Path.GetMethodAttribute.html": {
    "href": "api/EasyRpc.Abstractions.Path.GetMethodAttribute.html",
    "title": "Class GetMethodAttribute | EasyRpc documentation website",
    "keywords": "Class GetMethodAttribute Expose method as GET Inheritance Object Attribute GetMethodAttribute Implements IPathAttribute Inherited Members Attribute.Equals(Object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, Boolean) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, Boolean) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, Boolean) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, Boolean) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, Boolean) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, Boolean) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, Boolean) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, Boolean) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, Boolean) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Boolean) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, Boolean) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, Boolean) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, Boolean) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, Boolean) Attribute.Match(Object) Attribute.TypeId Object.Equals(Object, Object) Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : EasyRpc.Abstractions.Path Assembly : EasyRpc.Abstractions.dll Syntax public class GetMethodAttribute : Attribute, IPathAttribute Constructors | Improve this Doc View Source GetMethodAttribute(String) Default constructor Declaration public GetMethodAttribute(string path = null) Parameters Type Name Description String path Properties | Improve this Doc View Source HasBody Does the request have a body Declaration public bool HasBody { get; } Property Value Type Description Boolean | Improve this Doc View Source Method HTTP method Declaration public string Method { get; } Property Value Type Description String | Improve this Doc View Source Path Path Declaration public string Path { get; } Property Value Type Description String | Improve this Doc View Source Success HTTP success status code Declaration public HttpStatusCode Success { get; set; } Property Value Type Description HttpStatusCode Explicit Interface Implementations | Improve this Doc View Source IPathAttribute.SuccessCodeValue HTTP success code Declaration int IPathAttribute.SuccessCodeValue { get; } Returns Type Description Int32 Implements IPathAttribute"
  },
  "api/EasyRpc.Abstractions.Path.HeadMethodAttribute.html": {
    "href": "api/EasyRpc.Abstractions.Path.HeadMethodAttribute.html",
    "title": "Class HeadMethodAttribute | EasyRpc documentation website",
    "keywords": "Class HeadMethodAttribute HEAD method Inheritance Object Attribute HeadMethodAttribute Implements IPathAttribute Inherited Members Attribute.Equals(Object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, Boolean) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, Boolean) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, Boolean) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, Boolean) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, Boolean) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, Boolean) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, Boolean) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, Boolean) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, Boolean) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Boolean) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, Boolean) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, Boolean) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, Boolean) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, Boolean) Attribute.Match(Object) Attribute.TypeId Object.Equals(Object, Object) Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : EasyRpc.Abstractions.Path Assembly : EasyRpc.Abstractions.dll Syntax public class HeadMethodAttribute : Attribute, IPathAttribute Constructors | Improve this Doc View Source HeadMethodAttribute(String) Default constructor Declaration public HeadMethodAttribute(string path = null) Parameters Type Name Description String path Properties | Improve this Doc View Source HasBody Does the request have a body Declaration public bool HasBody { get; } Property Value Type Description Boolean | Improve this Doc View Source Method HTTP method Declaration public string Method { get; } Property Value Type Description String | Improve this Doc View Source Path Path Declaration public string Path { get; } Property Value Type Description String | Improve this Doc View Source Success HTTP success status code Declaration public HttpStatusCode Success { get; set; } Property Value Type Description HttpStatusCode Explicit Interface Implementations | Improve this Doc View Source IPathAttribute.SuccessCodeValue HTTP success code Declaration int IPathAttribute.SuccessCodeValue { get; } Returns Type Description Int32 Implements IPathAttribute"
  },
  "api/EasyRpc.Abstractions.Path.html": {
    "href": "api/EasyRpc.Abstractions.Path.html",
    "title": "Namespace EasyRpc.Abstractions.Path | EasyRpc documentation website",
    "keywords": "Namespace EasyRpc.Abstractions.Path Classes BasePathAttribute Interface for describing a base path attribute DeleteMethodAttribute Expose method as DELETE GetMethodAttribute Expose method as GET HeadMethodAttribute HEAD method HttpMethodAttribute Expose HTTP Method IgnoreMethodAttribute Ignore a method export OptionsMethodAttribute OPTIONS Method PatchMethodAttribute Patch HTTP method PostMethodAttribute Expose method as POST PutMethodAttribute PUT method Interfaces IBasePathAttribute Interface for describing a base path attribute IPathAttribute Attribute interface used to expose a method Enums ExposeDefaultMethod Http method to use when exposing methods"
  },
  "api/EasyRpc.Abstractions.Path.HttpMethodAttribute.html": {
    "href": "api/EasyRpc.Abstractions.Path.HttpMethodAttribute.html",
    "title": "Class HttpMethodAttribute | EasyRpc documentation website",
    "keywords": "Class HttpMethodAttribute Expose HTTP Method Inheritance Object Attribute HttpMethodAttribute Implements IPathAttribute Inherited Members Attribute.Equals(Object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, Boolean) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, Boolean) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, Boolean) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, Boolean) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, Boolean) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, Boolean) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, Boolean) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, Boolean) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, Boolean) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Boolean) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, Boolean) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, Boolean) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, Boolean) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, Boolean) Attribute.Match(Object) Attribute.TypeId Object.Equals(Object, Object) Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : EasyRpc.Abstractions.Path Assembly : EasyRpc.Abstractions.dll Syntax public class HttpMethodAttribute : Attribute, IPathAttribute Constructors | Improve this Doc View Source HttpMethodAttribute(String, String) Default constructor Declaration public HttpMethodAttribute(string method, string path = null) Parameters Type Name Description String method String path Properties | Improve this Doc View Source HasBody Does the request have a body Declaration public bool HasBody { get; set; } Property Value Type Description Boolean | Improve this Doc View Source Method HTTP method Declaration public string Method { get; } Property Value Type Description String | Improve this Doc View Source Path Path Declaration public string Path { get; } Property Value Type Description String | Improve this Doc View Source SuccessCodeValue HTTP success code Declaration public int SuccessCodeValue { get; set; } Property Value Type Description Int32 Implements IPathAttribute"
  },
  "api/EasyRpc.Abstractions.Path.IBasePathAttribute.html": {
    "href": "api/EasyRpc.Abstractions.Path.IBasePathAttribute.html",
    "title": "Interface IBasePathAttribute | EasyRpc documentation website",
    "keywords": "Interface IBasePathAttribute Interface for describing a base path attribute Namespace : EasyRpc.Abstractions.Path Assembly : EasyRpc.Abstractions.dll Syntax public interface IBasePathAttribute Properties | Improve this Doc View Source BasePath Base path Declaration string BasePath { get; } Property Value Type Description String"
  },
  "api/EasyRpc.Abstractions.Path.IgnoreMethodAttribute.html": {
    "href": "api/EasyRpc.Abstractions.Path.IgnoreMethodAttribute.html",
    "title": "Class IgnoreMethodAttribute | EasyRpc documentation website",
    "keywords": "Class IgnoreMethodAttribute Ignore a method export Inheritance Object Attribute IgnoreMethodAttribute Inherited Members Attribute.Equals(Object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, Boolean) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, Boolean) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, Boolean) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, Boolean) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, Boolean) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, Boolean) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, Boolean) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, Boolean) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, Boolean) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Boolean) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, Boolean) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, Boolean) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, Boolean) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, Boolean) Attribute.Match(Object) Attribute.TypeId Object.Equals(Object, Object) Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : EasyRpc.Abstractions.Path Assembly : EasyRpc.Abstractions.dll Syntax public class IgnoreMethodAttribute : Attribute"
  },
  "api/EasyRpc.Abstractions.Path.IPathAttribute.html": {
    "href": "api/EasyRpc.Abstractions.Path.IPathAttribute.html",
    "title": "Interface IPathAttribute | EasyRpc documentation website",
    "keywords": "Interface IPathAttribute Attribute interface used to expose a method Namespace : EasyRpc.Abstractions.Path Assembly : EasyRpc.Abstractions.dll Syntax public interface IPathAttribute Properties | Improve this Doc View Source HasBody Does the request have a body Declaration bool HasBody { get; } Property Value Type Description Boolean | Improve this Doc View Source Method HTTP method Declaration string Method { get; } Property Value Type Description String | Improve this Doc View Source Path Path Declaration string Path { get; } Property Value Type Description String | Improve this Doc View Source SuccessCodeValue HTTP success code Declaration int SuccessCodeValue { get; } Property Value Type Description Int32"
  },
  "api/EasyRpc.Abstractions.Path.OptionsMethodAttribute.html": {
    "href": "api/EasyRpc.Abstractions.Path.OptionsMethodAttribute.html",
    "title": "Class OptionsMethodAttribute | EasyRpc documentation website",
    "keywords": "Class OptionsMethodAttribute OPTIONS Method Inheritance Object Attribute OptionsMethodAttribute Implements IPathAttribute Inherited Members Attribute.Equals(Object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, Boolean) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, Boolean) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, Boolean) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, Boolean) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, Boolean) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, Boolean) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, Boolean) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, Boolean) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, Boolean) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Boolean) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, Boolean) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, Boolean) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, Boolean) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, Boolean) Attribute.Match(Object) Attribute.TypeId Object.Equals(Object, Object) Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : EasyRpc.Abstractions.Path Assembly : EasyRpc.Abstractions.dll Syntax public class OptionsMethodAttribute : Attribute, IPathAttribute Constructors | Improve this Doc View Source OptionsMethodAttribute(String) Default constructor Declaration public OptionsMethodAttribute(string path = null) Parameters Type Name Description String path Properties | Improve this Doc View Source HasBody Does the request have a body Declaration public bool HasBody { get; } Property Value Type Description Boolean | Improve this Doc View Source Method HTTP method Declaration public string Method { get; } Property Value Type Description String | Improve this Doc View Source Path Path Declaration public string Path { get; } Property Value Type Description String | Improve this Doc View Source Success HTTP success status code Declaration public HttpStatusCode Success { get; set; } Property Value Type Description HttpStatusCode Explicit Interface Implementations | Improve this Doc View Source IPathAttribute.SuccessCodeValue HTTP success code Declaration int IPathAttribute.SuccessCodeValue { get; } Returns Type Description Int32 Implements IPathAttribute"
  },
  "api/EasyRpc.Abstractions.Path.PatchMethodAttribute.html": {
    "href": "api/EasyRpc.Abstractions.Path.PatchMethodAttribute.html",
    "title": "Class PatchMethodAttribute | EasyRpc documentation website",
    "keywords": "Class PatchMethodAttribute Patch HTTP method Inheritance Object Attribute PatchMethodAttribute Implements IPathAttribute Inherited Members Attribute.Equals(Object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, Boolean) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, Boolean) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, Boolean) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, Boolean) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, Boolean) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, Boolean) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, Boolean) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, Boolean) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, Boolean) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Boolean) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, Boolean) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, Boolean) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, Boolean) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, Boolean) Attribute.Match(Object) Attribute.TypeId Object.Equals(Object, Object) Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : EasyRpc.Abstractions.Path Assembly : EasyRpc.Abstractions.dll Syntax public class PatchMethodAttribute : Attribute, IPathAttribute Constructors | Improve this Doc View Source PatchMethodAttribute(String) Default constructor Declaration public PatchMethodAttribute(string path = null) Parameters Type Name Description String path Properties | Improve this Doc View Source HasBody Does the request have a body Declaration public bool HasBody { get; } Property Value Type Description Boolean | Improve this Doc View Source Method HTTP method Declaration public string Method { get; } Property Value Type Description String | Improve this Doc View Source Path Path Declaration public string Path { get; } Property Value Type Description String | Improve this Doc View Source Success HTTP success status code Declaration public HttpStatusCode Success { get; set; } Property Value Type Description HttpStatusCode Explicit Interface Implementations | Improve this Doc View Source IPathAttribute.SuccessCodeValue HTTP success code Declaration int IPathAttribute.SuccessCodeValue { get; } Returns Type Description Int32 Implements IPathAttribute"
  },
  "api/EasyRpc.Abstractions.Path.PostMethodAttribute.html": {
    "href": "api/EasyRpc.Abstractions.Path.PostMethodAttribute.html",
    "title": "Class PostMethodAttribute | EasyRpc documentation website",
    "keywords": "Class PostMethodAttribute Expose method as POST Inheritance Object Attribute PostMethodAttribute Implements IPathAttribute Inherited Members Attribute.Equals(Object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, Boolean) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, Boolean) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, Boolean) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, Boolean) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, Boolean) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, Boolean) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, Boolean) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, Boolean) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, Boolean) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Boolean) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, Boolean) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, Boolean) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, Boolean) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, Boolean) Attribute.Match(Object) Attribute.TypeId Object.Equals(Object, Object) Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : EasyRpc.Abstractions.Path Assembly : EasyRpc.Abstractions.dll Syntax public class PostMethodAttribute : Attribute, IPathAttribute Constructors | Improve this Doc View Source PostMethodAttribute(String) Default constructor Declaration public PostMethodAttribute(string path = null) Parameters Type Name Description String path Properties | Improve this Doc View Source HasBody Does the request have a body Declaration public bool HasBody { get; } Property Value Type Description Boolean | Improve this Doc View Source Method HTTP method Declaration public string Method { get; } Property Value Type Description String | Improve this Doc View Source Path Path Declaration public string Path { get; } Property Value Type Description String | Improve this Doc View Source Success HTTP success status code Declaration public HttpStatusCode Success { get; set; } Property Value Type Description HttpStatusCode Explicit Interface Implementations | Improve this Doc View Source IPathAttribute.SuccessCodeValue HTTP success code Declaration int IPathAttribute.SuccessCodeValue { get; } Returns Type Description Int32 Implements IPathAttribute"
  },
  "api/EasyRpc.Abstractions.Path.PutMethodAttribute.html": {
    "href": "api/EasyRpc.Abstractions.Path.PutMethodAttribute.html",
    "title": "Class PutMethodAttribute | EasyRpc documentation website",
    "keywords": "Class PutMethodAttribute PUT method Inheritance Object Attribute PutMethodAttribute Implements IPathAttribute Inherited Members Attribute.Equals(Object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, Boolean) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, Boolean) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, Boolean) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, Boolean) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, Boolean) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, Boolean) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, Boolean) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, Boolean) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, Boolean) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Boolean) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, Boolean) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, Boolean) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, Boolean) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, Boolean) Attribute.Match(Object) Attribute.TypeId Object.Equals(Object, Object) Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : EasyRpc.Abstractions.Path Assembly : EasyRpc.Abstractions.dll Syntax public class PutMethodAttribute : Attribute, IPathAttribute Constructors | Improve this Doc View Source PutMethodAttribute(String) Default constructor Declaration public PutMethodAttribute(string path = null) Parameters Type Name Description String path Properties | Improve this Doc View Source HasBody Does the request have a body Declaration public bool HasBody { get; } Property Value Type Description Boolean | Improve this Doc View Source Method HTTP method Declaration public string Method { get; } Property Value Type Description String | Improve this Doc View Source Path Path Declaration public string Path { get; } Property Value Type Description String | Improve this Doc View Source Success HTTP success status code Declaration public HttpStatusCode Success { get; set; } Property Value Type Description HttpStatusCode Explicit Interface Implementations | Improve this Doc View Source IPathAttribute.SuccessCodeValue HTTP success code Declaration int IPathAttribute.SuccessCodeValue { get; } Returns Type Description Int32 Implements IPathAttribute"
  },
  "api/EasyRpc.Abstractions.Response.html": {
    "href": "api/EasyRpc.Abstractions.Response.html",
    "title": "Namespace EasyRpc.Abstractions.Response | EasyRpc documentation website",
    "keywords": "Namespace EasyRpc.Abstractions.Response Classes RawContentAttribute Method returns raw data and should not be serialized Interfaces IRawContentAttribute Raw content attribute interface"
  },
  "api/EasyRpc.Abstractions.Response.IRawContentAttribute.html": {
    "href": "api/EasyRpc.Abstractions.Response.IRawContentAttribute.html",
    "title": "Interface IRawContentAttribute | EasyRpc documentation website",
    "keywords": "Interface IRawContentAttribute Raw content attribute interface Namespace : EasyRpc.Abstractions.Response Assembly : EasyRpc.Abstractions.dll Syntax public interface IRawContentAttribute Properties | Improve this Doc View Source ContentEncoding Content encoding if applicable Declaration string ContentEncoding { get; } Property Value Type Description String | Improve this Doc View Source ContentType Content type returned Declaration string ContentType { get; } Property Value Type Description String"
  },
  "api/EasyRpc.Abstractions.Response.RawContentAttribute.html": {
    "href": "api/EasyRpc.Abstractions.Response.RawContentAttribute.html",
    "title": "Class RawContentAttribute | EasyRpc documentation website",
    "keywords": "Class RawContentAttribute Method returns raw data and should not be serialized Inheritance Object Attribute RawContentAttribute Implements IRawContentAttribute Inherited Members Attribute.Equals(Object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, Boolean) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, Boolean) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, Boolean) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, Boolean) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, Boolean) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, Boolean) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, Boolean) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, Boolean) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, Boolean) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Boolean) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, Boolean) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, Boolean) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, Boolean) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, Boolean) Attribute.Match(Object) Attribute.TypeId Object.Equals(Object, Object) Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : EasyRpc.Abstractions.Response Assembly : EasyRpc.Abstractions.dll Syntax public class RawContentAttribute : Attribute, IRawContentAttribute Constructors | Improve this Doc View Source RawContentAttribute(String) Default constructor Declaration public RawContentAttribute(string contentType) Parameters Type Name Description String contentType Properties | Improve this Doc View Source ContentEncoding Content encoding if applicable Declaration public string ContentEncoding { get; set; } Property Value Type Description String | Improve this Doc View Source ContentType Content type returned Declaration public string ContentType { get; } Property Value Type Description String Implements IRawContentAttribute"
  },
  "api/EasyRpc.Abstractions.Services.html": {
    "href": "api/EasyRpc.Abstractions.Services.html",
    "title": "Namespace EasyRpc.Abstractions.Services | EasyRpc documentation website",
    "keywords": "Namespace EasyRpc.Abstractions.Services Classes SharedServiceAttribute Service will be shared between request vs instance per request Interfaces IServiceActivationAttribute attribute interface to say how a service should be activated Enums ServiceActivationMethod Activation options for a service"
  },
  "api/EasyRpc.Abstractions.Services.IServiceActivationAttribute.html": {
    "href": "api/EasyRpc.Abstractions.Services.IServiceActivationAttribute.html",
    "title": "Interface IServiceActivationAttribute | EasyRpc documentation website",
    "keywords": "Interface IServiceActivationAttribute attribute interface to say how a service should be activated Namespace : EasyRpc.Abstractions.Services Assembly : EasyRpc.Abstractions.dll Syntax public interface IServiceActivationAttribute Properties | Improve this Doc View Source ActivationMethod Activation method Declaration ServiceActivationMethod ActivationMethod { get; } Property Value Type Description ServiceActivationMethod"
  },
  "api/EasyRpc.Abstractions.Services.ServiceActivationMethod.html": {
    "href": "api/EasyRpc.Abstractions.Services.ServiceActivationMethod.html",
    "title": "Enum ServiceActivationMethod | EasyRpc documentation website",
    "keywords": "Enum ServiceActivationMethod Activation options for a service Namespace : EasyRpc.Abstractions.Services Assembly : EasyRpc.Abstractions.dll Syntax public enum ServiceActivationMethod Fields Name Description ActivationUtility ActivatorUtilities.GetServiceOrCreateInstance will be used to activate services ServiceContainer Locate service instance from SharedActivationUtility Shared instance of service activated using ActivatorUtilities.GetServiceOrCreateInstance SharedServiceContainer Shared instance of service activated using the services container"
  },
  "api/EasyRpc.Abstractions.Services.SharedServiceAttribute.html": {
    "href": "api/EasyRpc.Abstractions.Services.SharedServiceAttribute.html",
    "title": "Class SharedServiceAttribute | EasyRpc documentation website",
    "keywords": "Class SharedServiceAttribute Service will be shared between request vs instance per request Inheritance Object Attribute SharedServiceAttribute Implements IServiceActivationAttribute Inherited Members Attribute.Equals(Object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, Boolean) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, Boolean) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, Boolean) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, Boolean) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, Boolean) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, Boolean) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, Boolean) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, Boolean) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, Boolean) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Boolean) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, Boolean) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, Boolean) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, Boolean) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, Boolean) Attribute.Match(Object) Attribute.TypeId Object.Equals(Object, Object) Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : EasyRpc.Abstractions.Services Assembly : EasyRpc.Abstractions.dll Syntax public class SharedServiceAttribute : Attribute, IServiceActivationAttribute Properties | Improve this Doc View Source FromServiceContainer Resolve service from container Declaration public bool FromServiceContainer { get; set; } Property Value Type Description Boolean Explicit Interface Implementations | Improve this Doc View Source IServiceActivationAttribute.ActivationMethod Activation method Declaration ServiceActivationMethod IServiceActivationAttribute.ActivationMethod { get; } Returns Type Description ServiceActivationMethod Implements IServiceActivationAttribute"
  },
  "api/EasyRpc.AspNetCore.AppBuilderExtensions.html": {
    "href": "api/EasyRpc.AspNetCore.AppBuilderExtensions.html",
    "title": "Class AppBuilderExtensions | EasyRpc documentation website",
    "keywords": "Class AppBuilderExtensions C# extension methods for app building Inheritance Object AppBuilderExtensions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : EasyRpc.AspNetCore Assembly : EasyRpc.AspNetCore.dll Syntax public static class AppBuilderExtensions Properties | Improve this Doc View Source DefaultAction Default action when calling UseRpcServices Declaration public static Action<IApiConfiguration> DefaultAction { get; set; } Property Value Type Description Action < IApiConfiguration > Methods | Improve this Doc View Source AddRpcServices(IServiceCollection, Boolean, Boolean) Add rpc services to service collection Declaration public static IServiceCollection AddRpcServices(this IServiceCollection serviceCollection, bool registerJsonSerializer = true, bool registerXmlSerializer = false) Parameters Type Name Description IServiceCollection serviceCollection Boolean registerJsonSerializer Boolean registerXmlSerializer Returns Type Description IServiceCollection | Improve this Doc View Source UseRpcServices(IApplicationBuilder, Action<IApiConfiguration>) Add rpc services to asp.net pipeline Declaration public static IApplicationBuilder UseRpcServices(this IApplicationBuilder appBuilder, Action<IApiConfiguration> configure = null) Parameters Type Name Description IApplicationBuilder appBuilder application builder Action < IApiConfiguration > configure api configuration Returns Type Description IApplicationBuilder"
  },
  "api/EasyRpc.AspNetCore.Authorization.EndPointAuthorizationService.html": {
    "href": "api/EasyRpc.AspNetCore.Authorization.EndPointAuthorizationService.html",
    "title": "Class EndPointAuthorizationService | EasyRpc documentation website",
    "keywords": "Class EndPointAuthorizationService Default authorization service Inheritance Object EndPointAuthorizationService Implements IEndPointAuthorizationService Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : EasyRpc.AspNetCore.Authorization Assembly : EasyRpc.AspNetCore.dll Syntax public class EndPointAuthorizationService : IEndPointAuthorizationService Methods | Improve this Doc View Source AuthorizeRequest(RequestExecutionContext, IReadOnlyList<IEndPointMethodAuthorization>) Authorize a request given a context and list of authorizations Declaration public Task<bool> AuthorizeRequest(RequestExecutionContext context, IReadOnlyList<IEndPointMethodAuthorization> configurationAuthorizations) Parameters Type Name Description RequestExecutionContext context request execution context IReadOnlyList < IEndPointMethodAuthorization > configurationAuthorizations list of authorizations Returns Type Description Task < Boolean > Implements IEndPointAuthorizationService"
  },
  "api/EasyRpc.AspNetCore.Authorization.html": {
    "href": "api/EasyRpc.AspNetCore.Authorization.html",
    "title": "Namespace EasyRpc.AspNetCore.Authorization | EasyRpc documentation website",
    "keywords": "Namespace EasyRpc.AspNetCore.Authorization Classes EndPointAuthorizationService Default authorization service UserHasPolicy End point method authorization UserHasRole User has role authorization UserIsAuthorized IsAuthenticated is true authorization Interfaces IEndPointAuthorizationService authorization service IEndPointMethodAuthorization Interface representing an end point authorization"
  },
  "api/EasyRpc.AspNetCore.Authorization.IEndPointAuthorizationService.html": {
    "href": "api/EasyRpc.AspNetCore.Authorization.IEndPointAuthorizationService.html",
    "title": "Interface IEndPointAuthorizationService | EasyRpc documentation website",
    "keywords": "Interface IEndPointAuthorizationService authorization service Namespace : EasyRpc.AspNetCore.Authorization Assembly : EasyRpc.AspNetCore.dll Syntax public interface IEndPointAuthorizationService Methods | Improve this Doc View Source AuthorizeRequest(RequestExecutionContext, IReadOnlyList<IEndPointMethodAuthorization>) Authorize a request given a context and list of authorizations Declaration Task<bool> AuthorizeRequest(RequestExecutionContext context, IReadOnlyList<IEndPointMethodAuthorization> configurationAuthorizations) Parameters Type Name Description RequestExecutionContext context request execution context IReadOnlyList < IEndPointMethodAuthorization > configurationAuthorizations list of authorizations Returns Type Description Task < Boolean >"
  },
  "api/EasyRpc.AspNetCore.Authorization.IEndPointMethodAuthorization.html": {
    "href": "api/EasyRpc.AspNetCore.Authorization.IEndPointMethodAuthorization.html",
    "title": "Interface IEndPointMethodAuthorization | EasyRpc documentation website",
    "keywords": "Interface IEndPointMethodAuthorization Interface representing an end point authorization Namespace : EasyRpc.AspNetCore.Authorization Assembly : EasyRpc.AspNetCore.dll Syntax public interface IEndPointMethodAuthorization Methods | Improve this Doc View Source AsyncAuthorize(RequestExecutionContext) authorize request async Declaration Task<bool> AsyncAuthorize(RequestExecutionContext context) Parameters Type Name Description RequestExecutionContext context request Returns Type Description Task < Boolean > true is authorized"
  },
  "api/EasyRpc.AspNetCore.Authorization.UserHasPolicy.html": {
    "href": "api/EasyRpc.AspNetCore.Authorization.UserHasPolicy.html",
    "title": "Class UserHasPolicy | EasyRpc documentation website",
    "keywords": "Class UserHasPolicy End point method authorization Inheritance Object UserHasPolicy Implements IEndPointMethodAuthorization Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : EasyRpc.AspNetCore.Authorization Assembly : EasyRpc.AspNetCore.dll Syntax public class UserHasPolicy : IEndPointMethodAuthorization Constructors | Improve this Doc View Source UserHasPolicy(String) Default constructor Declaration public UserHasPolicy(string policy) Parameters Type Name Description String policy Methods | Improve this Doc View Source AsyncAuthorize(RequestExecutionContext) authorize request async Declaration public Task<bool> AsyncAuthorize(RequestExecutionContext context) Parameters Type Name Description RequestExecutionContext context request Returns Type Description Task < Boolean > true is authorized Implements IEndPointMethodAuthorization"
  },
  "api/EasyRpc.AspNetCore.Authorization.UserHasRole.html": {
    "href": "api/EasyRpc.AspNetCore.Authorization.UserHasRole.html",
    "title": "Class UserHasRole | EasyRpc documentation website",
    "keywords": "Class UserHasRole User has role authorization Inheritance Object UserHasRole Implements IEndPointMethodAuthorization Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : EasyRpc.AspNetCore.Authorization Assembly : EasyRpc.AspNetCore.dll Syntax public class UserHasRole : IEndPointMethodAuthorization Constructors | Improve this Doc View Source UserHasRole(String) Default constructor Declaration public UserHasRole(string role) Parameters Type Name Description String role Methods | Improve this Doc View Source AsyncAuthorize(RequestExecutionContext) authorize request async Declaration public Task<bool> AsyncAuthorize(RequestExecutionContext context) Parameters Type Name Description RequestExecutionContext context request Returns Type Description Task < Boolean > true is authorized Implements IEndPointMethodAuthorization"
  },
  "api/EasyRpc.AspNetCore.Authorization.UserIsAuthorized.html": {
    "href": "api/EasyRpc.AspNetCore.Authorization.UserIsAuthorized.html",
    "title": "Class UserIsAuthorized | EasyRpc documentation website",
    "keywords": "Class UserIsAuthorized IsAuthenticated is true authorization Inheritance Object UserIsAuthorized Implements IEndPointMethodAuthorization Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : EasyRpc.AspNetCore.Authorization Assembly : EasyRpc.AspNetCore.dll Syntax public class UserIsAuthorized : IEndPointMethodAuthorization Methods | Improve this Doc View Source AsyncAuthorize(RequestExecutionContext) authorize request async Declaration public Task<bool> AsyncAuthorize(RequestExecutionContext context) Parameters Type Name Description RequestExecutionContext context request Returns Type Description Task < Boolean > true is authorized Implements IEndPointMethodAuthorization"
  },
  "api/EasyRpc.AspNetCore.CodeGeneration.DeserializationTypeCreator.html": {
    "href": "api/EasyRpc.AspNetCore.CodeGeneration.DeserializationTypeCreator.html",
    "title": "Class DeserializationTypeCreator | EasyRpc documentation website",
    "keywords": "Class DeserializationTypeCreator Interface used to create a type that represent parameters for method Inheritance Object DeserializationTypeCreator Implements IDeserializationTypeCreator Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : EasyRpc.AspNetCore.CodeGeneration Assembly : EasyRpc.AspNetCore.dll Syntax public class DeserializationTypeCreator : IDeserializationTypeCreator Constructors | Improve this Doc View Source DeserializationTypeCreator(IEnumerable<ISerializationTypeAttributor>) Default constructor Declaration public DeserializationTypeCreator(IEnumerable<ISerializationTypeAttributor> attributors) Parameters Type Name Description IEnumerable < ISerializationTypeAttributor > attributors Methods | Improve this Doc View Source AddInterfaceImplementations(TypeBuilder, IEndPointMethodConfigurationReadOnly, DeserializationTypeCreator.TypeCreationContext) Declaration protected virtual void AddInterfaceImplementations(TypeBuilder typeBuilder, IEndPointMethodConfigurationReadOnly methodConfiguration, DeserializationTypeCreator.TypeCreationContext creationContext) Parameters Type Name Description TypeBuilder typeBuilder IEndPointMethodConfigurationReadOnly methodConfiguration DeserializationTypeCreator.TypeCreationContext creationContext | Improve this Doc View Source AttributeType(TypeBuilder, IEndPointMethodConfigurationReadOnly) Declaration protected virtual void AttributeType(TypeBuilder typeBuilder, IEndPointMethodConfigurationReadOnly methodConfiguration) Parameters Type Name Description TypeBuilder typeBuilder IEndPointMethodConfigurationReadOnly methodConfiguration | Improve this Doc View Source CreateBackingFields(TypeBuilder, IEndPointMethodConfigurationReadOnly, DeserializationTypeCreator.TypeCreationContext) Declaration protected virtual void CreateBackingFields(TypeBuilder typeBuilder, IEndPointMethodConfigurationReadOnly methodConfiguration, DeserializationTypeCreator.TypeCreationContext creationContext) Parameters Type Name Description TypeBuilder typeBuilder IEndPointMethodConfigurationReadOnly methodConfiguration DeserializationTypeCreator.TypeCreationContext creationContext | Improve this Doc View Source CreateTypeBuilder(IEndPointMethodConfigurationReadOnly, DeserializationTypeCreator.TypeCreationContext) Declaration protected virtual TypeBuilder CreateTypeBuilder(IEndPointMethodConfigurationReadOnly methodConfiguration, DeserializationTypeCreator.TypeCreationContext creationContext) Parameters Type Name Description IEndPointMethodConfigurationReadOnly methodConfiguration DeserializationTypeCreator.TypeCreationContext creationContext Returns Type Description TypeBuilder | Improve this Doc View Source CreateTypeForMethod(IEndPointMethodConfigurationReadOnly) Create parameter type Declaration public Type CreateTypeForMethod(IEndPointMethodConfigurationReadOnly methodConfiguration) Parameters Type Name Description IEndPointMethodConfigurationReadOnly methodConfiguration method configuration Returns Type Description Type newly created type | Improve this Doc View Source GenerateArrayAccess(TypeBuilder, IEndPointMethodConfigurationReadOnly, DeserializationTypeCreator.TypeCreationContext) Declaration protected virtual void GenerateArrayAccess(TypeBuilder typeBuilder, IEndPointMethodConfigurationReadOnly methodConfiguration, DeserializationTypeCreator.TypeCreationContext creationContext) Parameters Type Name Description TypeBuilder typeBuilder IEndPointMethodConfigurationReadOnly methodConfiguration DeserializationTypeCreator.TypeCreationContext creationContext | Improve this Doc View Source GenerateBooleanDefault(TypeBuilder, IEndPointMethodConfigurationReadOnly, DeserializationTypeCreator.TypeCreationContext, ILGenerator, RpcParameterInfo, FieldBuilder) Declaration protected virtual void GenerateBooleanDefault(TypeBuilder typeBuilder, IEndPointMethodConfigurationReadOnly methodConfiguration, DeserializationTypeCreator.TypeCreationContext creationContext, ILGenerator ilGenerator, RpcParameterInfo rpcParameterInfo, FieldBuilder backingField) Parameters Type Name Description TypeBuilder typeBuilder IEndPointMethodConfigurationReadOnly methodConfiguration DeserializationTypeCreator.TypeCreationContext creationContext ILGenerator ilGenerator RpcParameterInfo rpcParameterInfo FieldBuilder backingField | Improve this Doc View Source GenerateComplexDefault(TypeBuilder, IEndPointMethodConfigurationReadOnly, DeserializationTypeCreator.TypeCreationContext, ILGenerator, RpcParameterInfo, FieldBuilder) Declaration protected virtual void GenerateComplexDefault(TypeBuilder typeBuilder, IEndPointMethodConfigurationReadOnly methodConfiguration, DeserializationTypeCreator.TypeCreationContext creationContext, ILGenerator ilGenerator, RpcParameterInfo rpcParameterInfo, FieldBuilder backingField) Parameters Type Name Description TypeBuilder typeBuilder IEndPointMethodConfigurationReadOnly methodConfiguration DeserializationTypeCreator.TypeCreationContext creationContext ILGenerator ilGenerator RpcParameterInfo rpcParameterInfo FieldBuilder backingField | Improve this Doc View Source GenerateConstructorWithDefaults(TypeBuilder, IEndPointMethodConfigurationReadOnly, DeserializationTypeCreator.TypeCreationContext) Declaration protected virtual void GenerateConstructorWithDefaults(TypeBuilder typeBuilder, IEndPointMethodConfigurationReadOnly methodConfiguration, DeserializationTypeCreator.TypeCreationContext creationContext) Parameters Type Name Description TypeBuilder typeBuilder IEndPointMethodConfigurationReadOnly methodConfiguration DeserializationTypeCreator.TypeCreationContext creationContext | Improve this Doc View Source GenerateDoubleDefault(TypeBuilder, IEndPointMethodConfigurationReadOnly, DeserializationTypeCreator.TypeCreationContext, ILGenerator, RpcParameterInfo, FieldBuilder) Declaration protected virtual void GenerateDoubleDefault(TypeBuilder typeBuilder, IEndPointMethodConfigurationReadOnly methodConfiguration, DeserializationTypeCreator.TypeCreationContext creationContext, ILGenerator ilGenerator, RpcParameterInfo rpcParameterInfo, FieldBuilder backingField) Parameters Type Name Description TypeBuilder typeBuilder IEndPointMethodConfigurationReadOnly methodConfiguration DeserializationTypeCreator.TypeCreationContext creationContext ILGenerator ilGenerator RpcParameterInfo rpcParameterInfo FieldBuilder backingField | Improve this Doc View Source GenerateGetItemMethod(TypeBuilder, IEndPointMethodConfigurationReadOnly, DeserializationTypeCreator.TypeCreationContext) Declaration protected virtual void GenerateGetItemMethod(TypeBuilder typeBuilder, IEndPointMethodConfigurationReadOnly methodConfiguration, DeserializationTypeCreator.TypeCreationContext creationContext) Parameters Type Name Description TypeBuilder typeBuilder IEndPointMethodConfigurationReadOnly methodConfiguration DeserializationTypeCreator.TypeCreationContext creationContext | Improve this Doc View Source GenerateIntDefault(TypeBuilder, IEndPointMethodConfigurationReadOnly, DeserializationTypeCreator.TypeCreationContext, ILGenerator, RpcParameterInfo, FieldBuilder) Declaration protected virtual void GenerateIntDefault(TypeBuilder typeBuilder, IEndPointMethodConfigurationReadOnly methodConfiguration, DeserializationTypeCreator.TypeCreationContext creationContext, ILGenerator ilGenerator, RpcParameterInfo rpcParameterInfo, FieldBuilder backingField) Parameters Type Name Description TypeBuilder typeBuilder IEndPointMethodConfigurationReadOnly methodConfiguration DeserializationTypeCreator.TypeCreationContext creationContext ILGenerator ilGenerator RpcParameterInfo rpcParameterInfo FieldBuilder backingField | Improve this Doc View Source GenerateNumberOfParameters(TypeBuilder, IEndPointMethodConfigurationReadOnly, DeserializationTypeCreator.TypeCreationContext) Declaration protected virtual void GenerateNumberOfParameters(TypeBuilder typeBuilder, IEndPointMethodConfigurationReadOnly methodConfiguration, DeserializationTypeCreator.TypeCreationContext creationContext) Parameters Type Name Description TypeBuilder typeBuilder IEndPointMethodConfigurationReadOnly methodConfiguration DeserializationTypeCreator.TypeCreationContext creationContext | Improve this Doc View Source GenerateParameterNames(TypeBuilder, IEndPointMethodConfigurationReadOnly, DeserializationTypeCreator.TypeCreationContext) Declaration protected virtual void GenerateParameterNames(TypeBuilder typeBuilder, IEndPointMethodConfigurationReadOnly methodConfiguration, DeserializationTypeCreator.TypeCreationContext creationContext) Parameters Type Name Description TypeBuilder typeBuilder IEndPointMethodConfigurationReadOnly methodConfiguration DeserializationTypeCreator.TypeCreationContext creationContext | Improve this Doc View Source GeneratePropertyGet(TypeBuilder, PropertyBuilder, DeserializationTypeCreator.InternalParameterInfo, IEndPointMethodConfigurationReadOnly, DeserializationTypeCreator.TypeCreationContext) Declaration protected virtual void GeneratePropertyGet(TypeBuilder typeBuilder, PropertyBuilder propertyBuilder, DeserializationTypeCreator.InternalParameterInfo parameterInfo, IEndPointMethodConfigurationReadOnly methodConfiguration, DeserializationTypeCreator.TypeCreationContext creationContext) Parameters Type Name Description TypeBuilder typeBuilder PropertyBuilder propertyBuilder DeserializationTypeCreator.InternalParameterInfo parameterInfo IEndPointMethodConfigurationReadOnly methodConfiguration DeserializationTypeCreator.TypeCreationContext creationContext | Improve this Doc View Source GeneratePropertyGetIL(TypeBuilder, MethodBuilder, DeserializationTypeCreator.InternalParameterInfo, IEndPointMethodConfigurationReadOnly, DeserializationTypeCreator.TypeCreationContext) Declaration protected virtual void GeneratePropertyGetIL(TypeBuilder typeBuilder, MethodBuilder getMethodBuilder, DeserializationTypeCreator.InternalParameterInfo parameterInfo, IEndPointMethodConfigurationReadOnly methodConfiguration, DeserializationTypeCreator.TypeCreationContext creationContext) Parameters Type Name Description TypeBuilder typeBuilder MethodBuilder getMethodBuilder DeserializationTypeCreator.InternalParameterInfo parameterInfo IEndPointMethodConfigurationReadOnly methodConfiguration DeserializationTypeCreator.TypeCreationContext creationContext | Improve this Doc View Source GeneratePropertySet(TypeBuilder, PropertyBuilder, DeserializationTypeCreator.InternalParameterInfo, IEndPointMethodConfigurationReadOnly, DeserializationTypeCreator.TypeCreationContext) Declaration protected virtual void GeneratePropertySet(TypeBuilder typeBuilder, PropertyBuilder propertyBuilder, DeserializationTypeCreator.InternalParameterInfo parameterInfo, IEndPointMethodConfigurationReadOnly methodConfiguration, DeserializationTypeCreator.TypeCreationContext creationContext) Parameters Type Name Description TypeBuilder typeBuilder PropertyBuilder propertyBuilder DeserializationTypeCreator.InternalParameterInfo parameterInfo IEndPointMethodConfigurationReadOnly methodConfiguration DeserializationTypeCreator.TypeCreationContext creationContext | Improve this Doc View Source GeneratePropertySetIL(TypeBuilder, MethodBuilder, DeserializationTypeCreator.InternalParameterInfo, IEndPointMethodConfigurationReadOnly, DeserializationTypeCreator.TypeCreationContext) Declaration protected virtual void GeneratePropertySetIL(TypeBuilder typeBuilder, MethodBuilder setMethodBuilder, DeserializationTypeCreator.InternalParameterInfo parameterInfo, IEndPointMethodConfigurationReadOnly methodConfiguration, DeserializationTypeCreator.TypeCreationContext creationContext) Parameters Type Name Description TypeBuilder typeBuilder MethodBuilder setMethodBuilder DeserializationTypeCreator.InternalParameterInfo parameterInfo IEndPointMethodConfigurationReadOnly methodConfiguration DeserializationTypeCreator.TypeCreationContext creationContext | Improve this Doc View Source GenerateStringDefault(TypeBuilder, IEndPointMethodConfigurationReadOnly, DeserializationTypeCreator.TypeCreationContext, ILGenerator, RpcParameterInfo, FieldBuilder) Declaration protected virtual void GenerateStringDefault(TypeBuilder typeBuilder, IEndPointMethodConfigurationReadOnly methodConfiguration, DeserializationTypeCreator.TypeCreationContext creationContext, ILGenerator ilGenerator, RpcParameterInfo rpcParameterInfo, FieldBuilder backingField) Parameters Type Name Description TypeBuilder typeBuilder IEndPointMethodConfigurationReadOnly methodConfiguration DeserializationTypeCreator.TypeCreationContext creationContext ILGenerator ilGenerator RpcParameterInfo rpcParameterInfo FieldBuilder backingField | Improve this Doc View Source GenerateTryGetParameter(TypeBuilder, IEndPointMethodConfigurationReadOnly, DeserializationTypeCreator.TypeCreationContext) Declaration protected virtual void GenerateTryGetParameter(TypeBuilder typeBuilder, IEndPointMethodConfigurationReadOnly methodConfiguration, DeserializationTypeCreator.TypeCreationContext creationContext) Parameters Type Name Description TypeBuilder typeBuilder IEndPointMethodConfigurationReadOnly methodConfiguration DeserializationTypeCreator.TypeCreationContext creationContext | Improve this Doc View Source GenerateTryGetParameterIL(MethodBuilder, IEndPointMethodConfigurationReadOnly, DeserializationTypeCreator.TypeCreationContext) Declaration protected virtual void GenerateTryGetParameterIL(MethodBuilder tryGetParameter, IEndPointMethodConfigurationReadOnly methodConfiguration, DeserializationTypeCreator.TypeCreationContext creationContext) Parameters Type Name Description MethodBuilder tryGetParameter IEndPointMethodConfigurationReadOnly methodConfiguration DeserializationTypeCreator.TypeCreationContext creationContext | Improve this Doc View Source GenerateTrySetParameter(TypeBuilder, IEndPointMethodConfigurationReadOnly, DeserializationTypeCreator.TypeCreationContext) Declaration protected virtual void GenerateTrySetParameter(TypeBuilder typeBuilder, IEndPointMethodConfigurationReadOnly methodConfiguration, DeserializationTypeCreator.TypeCreationContext creationContext) Parameters Type Name Description TypeBuilder typeBuilder IEndPointMethodConfigurationReadOnly methodConfiguration DeserializationTypeCreator.TypeCreationContext creationContext | Improve this Doc View Source GenerateTrySetParameterIL(MethodBuilder, IEndPointMethodConfigurationReadOnly, DeserializationTypeCreator.TypeCreationContext) Declaration protected virtual void GenerateTrySetParameterIL(MethodBuilder tryGetParameter, IEndPointMethodConfigurationReadOnly methodConfiguration, DeserializationTypeCreator.TypeCreationContext creationContext) Parameters Type Name Description MethodBuilder tryGetParameter IEndPointMethodConfigurationReadOnly methodConfiguration DeserializationTypeCreator.TypeCreationContext creationContext | Improve this Doc View Source ImplementProperties(TypeBuilder, IEndPointMethodConfigurationReadOnly, DeserializationTypeCreator.TypeCreationContext) Declaration protected virtual void ImplementProperties(TypeBuilder typeBuilder, IEndPointMethodConfigurationReadOnly methodConfiguration, DeserializationTypeCreator.TypeCreationContext creationContext) Parameters Type Name Description TypeBuilder typeBuilder IEndPointMethodConfigurationReadOnly methodConfiguration DeserializationTypeCreator.TypeCreationContext creationContext | Improve this Doc View Source ImplementRequestParametersInterface(TypeBuilder, IEndPointMethodConfigurationReadOnly, DeserializationTypeCreator.TypeCreationContext) Declaration protected virtual void ImplementRequestParametersInterface(TypeBuilder typeBuilder, IEndPointMethodConfigurationReadOnly methodConfiguration, DeserializationTypeCreator.TypeCreationContext creationContext) Parameters Type Name Description TypeBuilder typeBuilder IEndPointMethodConfigurationReadOnly methodConfiguration DeserializationTypeCreator.TypeCreationContext creationContext Implements IDeserializationTypeCreator"
  },
  "api/EasyRpc.AspNetCore.CodeGeneration.DeserializationTypeCreator.InternalParameterInfo.html": {
    "href": "api/EasyRpc.AspNetCore.CodeGeneration.DeserializationTypeCreator.InternalParameterInfo.html",
    "title": "Class DeserializationTypeCreator.InternalParameterInfo | EasyRpc documentation website",
    "keywords": "Class DeserializationTypeCreator.InternalParameterInfo Inheritance Object DeserializationTypeCreator.InternalParameterInfo Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : EasyRpc.AspNetCore.CodeGeneration Assembly : EasyRpc.AspNetCore.dll Syntax public class InternalParameterInfo Properties | Improve this Doc View Source BackingField Declaration public FieldBuilder BackingField { get; set; } Property Value Type Description FieldBuilder | Improve this Doc View Source Parameter Declaration public RpcParameterInfo Parameter { get; set; } Property Value Type Description RpcParameterInfo"
  },
  "api/EasyRpc.AspNetCore.CodeGeneration.DeserializationTypeCreator.TypeCreationContext.html": {
    "href": "api/EasyRpc.AspNetCore.CodeGeneration.DeserializationTypeCreator.TypeCreationContext.html",
    "title": "Class DeserializationTypeCreator.TypeCreationContext | EasyRpc documentation website",
    "keywords": "Class DeserializationTypeCreator.TypeCreationContext Inheritance Object DeserializationTypeCreator.TypeCreationContext Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : EasyRpc.AspNetCore.CodeGeneration Assembly : EasyRpc.AspNetCore.dll Syntax public class TypeCreationContext Properties | Improve this Doc View Source InitActions Declaration public List<Action<Type>> InitActions { get; } Property Value Type Description List < Action < Type >> | Improve this Doc View Source ParameterInfos Declaration public List<DeserializationTypeCreator.InternalParameterInfo> ParameterInfos { get; } Property Value Type Description List < DeserializationTypeCreator.InternalParameterInfo > | Improve this Doc View Source StaticParameterInfo Declaration public FieldBuilder StaticParameterInfo { get; set; } Property Value Type Description FieldBuilder"
  },
  "api/EasyRpc.AspNetCore.CodeGeneration.ErrorResultTypeCreator.html": {
    "href": "api/EasyRpc.AspNetCore.CodeGeneration.ErrorResultTypeCreator.html",
    "title": "Class ErrorResultTypeCreator | EasyRpc documentation website",
    "keywords": "Class ErrorResultTypeCreator Creates Error result types that are serialized to client Inheritance Object ErrorResultTypeCreator Implements IErrorResultTypeCreator Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : EasyRpc.AspNetCore.CodeGeneration Assembly : EasyRpc.AspNetCore.dll Syntax public class ErrorResultTypeCreator : IErrorResultTypeCreator Constructors | Improve this Doc View Source ErrorResultTypeCreator(IEnumerable<ISerializationTypeAttributor>) Default constructor Declaration public ErrorResultTypeCreator(IEnumerable<ISerializationTypeAttributor> serializationTypeAttributors) Parameters Type Name Description IEnumerable < ISerializationTypeAttributor > serializationTypeAttributors Methods | Improve this Doc View Source AddInterfaces(TypeBuilder) Declaration protected virtual void AddInterfaces(TypeBuilder typeBuilder) Parameters Type Name Description TypeBuilder typeBuilder | Improve this Doc View Source AddProperties(TypeBuilder) Declaration protected virtual void AddProperties(TypeBuilder typeBuilder) Parameters Type Name Description TypeBuilder typeBuilder | Improve this Doc View Source CreateTypeBuilder() Declaration protected virtual TypeBuilder CreateTypeBuilder() Returns Type Description TypeBuilder | Improve this Doc View Source GenerateErrorType() Generate a new error type Declaration public Type GenerateErrorType() Returns Type Description Type | Improve this Doc View Source InternalGenerateErrorType() Creates type used to serialize error Declaration protected virtual Type InternalGenerateErrorType() Returns Type Description Type Implements IErrorResultTypeCreator"
  },
  "api/EasyRpc.AspNetCore.CodeGeneration.html": {
    "href": "api/EasyRpc.AspNetCore.CodeGeneration.html",
    "title": "Namespace EasyRpc.AspNetCore.CodeGeneration | EasyRpc documentation website",
    "keywords": "Namespace EasyRpc.AspNetCore.CodeGeneration Classes DeserializationTypeCreator Interface used to create a type that represent parameters for method DeserializationTypeCreator.InternalParameterInfo DeserializationTypeCreator.TypeCreationContext ErrorResultTypeCreator Creates Error result types that are serialized to client ILGenerationUtilities IL Generation utilities InvokeHelpers static class used to invoke method delegates MethodInvokerCreationService information about the method to invoke ResponseDelegateCreator Builds delegate that writes result to the response stream WrappedResultTypeCreator Creates a wrapper type for simple types like int, string, double etc. Interfaces IDeserializationTypeCreator Interface used to create a type that represent parameters for method IErrorResultTypeCreator Creates Error result types that are serialized to client IMethodInvokerCreationService Interface for building MethodEndPointDelegate IResponseDelegateCreator Response delegate creator ISerializationTypeAttributor Used by 3rd party serializer to attribute type for serialization ITypeBuilderHelpers IWrappedResultTypeCreator Creates a wrapper type for simple types like int, string, double etc."
  },
  "api/EasyRpc.AspNetCore.CodeGeneration.IDeserializationTypeCreator.html": {
    "href": "api/EasyRpc.AspNetCore.CodeGeneration.IDeserializationTypeCreator.html",
    "title": "Interface IDeserializationTypeCreator | EasyRpc documentation website",
    "keywords": "Interface IDeserializationTypeCreator Interface used to create a type that represent parameters for method Namespace : EasyRpc.AspNetCore.CodeGeneration Assembly : EasyRpc.AspNetCore.dll Syntax public interface IDeserializationTypeCreator Methods | Improve this Doc View Source CreateTypeForMethod(IEndPointMethodConfigurationReadOnly) Create parameter type Declaration Type CreateTypeForMethod(IEndPointMethodConfigurationReadOnly methodConfiguration) Parameters Type Name Description IEndPointMethodConfigurationReadOnly methodConfiguration method configuration Returns Type Description Type newly created type"
  },
  "api/EasyRpc.AspNetCore.CodeGeneration.IErrorResultTypeCreator.html": {
    "href": "api/EasyRpc.AspNetCore.CodeGeneration.IErrorResultTypeCreator.html",
    "title": "Interface IErrorResultTypeCreator | EasyRpc documentation website",
    "keywords": "Interface IErrorResultTypeCreator Creates Error result types that are serialized to client Namespace : EasyRpc.AspNetCore.CodeGeneration Assembly : EasyRpc.AspNetCore.dll Syntax public interface IErrorResultTypeCreator Methods | Improve this Doc View Source GenerateErrorType() Generate a new error type Declaration Type GenerateErrorType() Returns Type Description Type"
  },
  "api/EasyRpc.AspNetCore.CodeGeneration.ILGenerationUtilities.html": {
    "href": "api/EasyRpc.AspNetCore.CodeGeneration.ILGenerationUtilities.html",
    "title": "Class ILGenerationUtilities | EasyRpc documentation website",
    "keywords": "Class ILGenerationUtilities IL Generation utilities Inheritance Object ILGenerationUtilities Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : EasyRpc.AspNetCore.CodeGeneration Assembly : EasyRpc.AspNetCore.dll Syntax public static class ILGenerationUtilities Methods | Improve this Doc View Source EmitBoolean(ILGenerator, Boolean) Declaration public static void EmitBoolean(this ILGenerator generator, bool boolValue) Parameters Type Name Description ILGenerator generator Boolean boolValue | Improve this Doc View Source EmitInt(ILGenerator, Int32) Emit int value Declaration public static void EmitInt(this ILGenerator generator, int intValue) Parameters Type Name Description ILGenerator generator generator Int32 intValue value to emit | Improve this Doc View Source EmitLoadArg(ILGenerator, Int32) Emit il for loading arg Declaration public static void EmitLoadArg(this ILGenerator ilGenerator, int parameterIndex) Parameters Type Name Description ILGenerator ilGenerator Int32 parameterIndex | Improve this Doc View Source EmitMethodCall(ILGenerator, MethodInfo) Emit method call Declaration public static void EmitMethodCall(this ILGenerator generator, MethodInfo method) Parameters Type Name Description ILGenerator generator MethodInfo method"
  },
  "api/EasyRpc.AspNetCore.CodeGeneration.IMethodInvokerCreationService.html": {
    "href": "api/EasyRpc.AspNetCore.CodeGeneration.IMethodInvokerCreationService.html",
    "title": "Interface IMethodInvokerCreationService | EasyRpc documentation website",
    "keywords": "Interface IMethodInvokerCreationService Interface for building MethodEndPointDelegate Namespace : EasyRpc.AspNetCore.CodeGeneration Assembly : EasyRpc.AspNetCore.dll Syntax public interface IMethodInvokerCreationService Methods | Improve this Doc View Source BuildMethodInvoker<T>(IEndPointMethodConfigurationReadOnly, Type) Build method invoker delegate given an endpoint configuration and parameter type Declaration InvokeMethodDelegate<T> BuildMethodInvoker<T>(IEndPointMethodConfigurationReadOnly endPointMethodConfiguration, Type parametersType) Parameters Type Name Description IEndPointMethodConfigurationReadOnly endPointMethodConfiguration Type parametersType Returns Type Description InvokeMethodDelegate <T> Type Parameters Name Description T"
  },
  "api/EasyRpc.AspNetCore.CodeGeneration.InvokeHelpers.html": {
    "href": "api/EasyRpc.AspNetCore.CodeGeneration.InvokeHelpers.html",
    "title": "Class InvokeHelpers | EasyRpc documentation website",
    "keywords": "Class InvokeHelpers static class used to invoke method delegates Inheritance Object InvokeHelpers Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : EasyRpc.AspNetCore.CodeGeneration Assembly : EasyRpc.AspNetCore.dll Syntax public static class InvokeHelpers Methods | Improve this Doc View Source WrapResult<TWrapper, TResult>(TResult) Wrap result in IResultWrapper Declaration public static Task<TWrapper> WrapResult<TWrapper, TResult>(TResult result) where TWrapper : IResultWrapper<TResult>, new() Parameters Type Name Description TResult result Returns Type Description Task <TWrapper> Type Parameters Name Description TWrapper TResult | Improve this Doc View Source WrapResultTaskAsync<TWrapper, TResult>(Task<TResult>) Wrap result from task in IResultWrapper Declaration public static Task<TWrapper> WrapResultTaskAsync<TWrapper, TResult>(Task<TResult> result) where TWrapper : IResultWrapper<TResult>, new() Parameters Type Name Description Task <TResult> result Returns Type Description Task <TWrapper> Type Parameters Name Description TWrapper TResult | Improve this Doc View Source WrapResultValueTaskAsync<TWrapper, TResult>(ValueTask<TResult>) Wrap result using ValueTask Declaration public static Task<TWrapper> WrapResultValueTaskAsync<TWrapper, TResult>(ValueTask<TResult> result) where TWrapper : IResultWrapper<TResult>, new() Parameters Type Name Description ValueTask <TResult> result Returns Type Description Task <TWrapper> Type Parameters Name Description TWrapper TResult | Improve this Doc View Source WrapTask(Task) Wraps a Task object for calling Declaration public static Task<object> WrapTask(Task task) Parameters Type Name Description Task task Returns Type Description Task < Object > | Improve this Doc View Source WrapValueTask(ValueTask) Wrap ValueTask object for calling Declaration public static Task<object> WrapValueTask(ValueTask task) Parameters Type Name Description ValueTask task Returns Type Description Task < Object >"
  },
  "api/EasyRpc.AspNetCore.CodeGeneration.IResponseDelegateCreator.html": {
    "href": "api/EasyRpc.AspNetCore.CodeGeneration.IResponseDelegateCreator.html",
    "title": "Interface IResponseDelegateCreator | EasyRpc documentation website",
    "keywords": "Interface IResponseDelegateCreator Response delegate creator Namespace : EasyRpc.AspNetCore.CodeGeneration Assembly : EasyRpc.AspNetCore.dll Syntax public interface IResponseDelegateCreator Methods | Improve this Doc View Source CreateResponseDelegate(IEndPointMethodConfigurationReadOnly) Create delegate that writes result to the response stream Declaration MethodEndPointDelegate CreateResponseDelegate(IEndPointMethodConfigurationReadOnly configuration) Parameters Type Name Description IEndPointMethodConfigurationReadOnly configuration Returns Type Description MethodEndPointDelegate"
  },
  "api/EasyRpc.AspNetCore.CodeGeneration.ISerializationTypeAttributor.html": {
    "href": "api/EasyRpc.AspNetCore.CodeGeneration.ISerializationTypeAttributor.html",
    "title": "Interface ISerializationTypeAttributor | EasyRpc documentation website",
    "keywords": "Interface ISerializationTypeAttributor Used by 3rd party serializer to attribute type for serialization Namespace : EasyRpc.AspNetCore.CodeGeneration Assembly : EasyRpc.AspNetCore.dll Syntax public interface ISerializationTypeAttributor Methods | Improve this Doc View Source AttributeMethodProperty(PropertyBuilder, IEndPointMethodConfigurationReadOnly, RpcParameterInfo) Declaration void AttributeMethodProperty(PropertyBuilder propertyBuilder, IEndPointMethodConfigurationReadOnly methodConfiguration, RpcParameterInfo parameterInfoParameter) Parameters Type Name Description PropertyBuilder propertyBuilder IEndPointMethodConfigurationReadOnly methodConfiguration RpcParameterInfo parameterInfoParameter | Improve this Doc View Source AttributeMethodType(TypeBuilder, IEndPointMethodConfigurationReadOnly) Declaration void AttributeMethodType(TypeBuilder typeBuilder, IEndPointMethodConfigurationReadOnly methodConfiguration) Parameters Type Name Description TypeBuilder typeBuilder IEndPointMethodConfigurationReadOnly methodConfiguration | Improve this Doc View Source AttributeProperty(PropertyBuilder, Int32) Declaration void AttributeProperty(PropertyBuilder propertyBuilder, int index) Parameters Type Name Description PropertyBuilder propertyBuilder Int32 index | Improve this Doc View Source AttributeType(TypeBuilder, String) Declaration void AttributeType(TypeBuilder typeBuilder, string classNameHint) Parameters Type Name Description TypeBuilder typeBuilder String classNameHint"
  },
  "api/EasyRpc.AspNetCore.CodeGeneration.ITypeBuilderHelpers.html": {
    "href": "api/EasyRpc.AspNetCore.CodeGeneration.ITypeBuilderHelpers.html",
    "title": "Interface ITypeBuilderHelpers | EasyRpc documentation website",
    "keywords": "Interface ITypeBuilderHelpers Namespace : EasyRpc.AspNetCore.CodeGeneration Assembly : EasyRpc.AspNetCore.dll Syntax public interface ITypeBuilderHelpers"
  },
  "api/EasyRpc.AspNetCore.CodeGeneration.IWrappedResultTypeCreator.html": {
    "href": "api/EasyRpc.AspNetCore.CodeGeneration.IWrappedResultTypeCreator.html",
    "title": "Interface IWrappedResultTypeCreator | EasyRpc documentation website",
    "keywords": "Interface IWrappedResultTypeCreator Creates a wrapper type for simple types like int, string, double etc. Namespace : EasyRpc.AspNetCore.CodeGeneration Assembly : EasyRpc.AspNetCore.dll Syntax public interface IWrappedResultTypeCreator Methods | Improve this Doc View Source GetTypeWrapper(Type) Gets a type wrapper for the provided type Declaration Type GetTypeWrapper(Type typeToWrap) Parameters Type Name Description Type typeToWrap Returns Type Description Type"
  },
  "api/EasyRpc.AspNetCore.CodeGeneration.MethodInvokerCreationService.html": {
    "href": "api/EasyRpc.AspNetCore.CodeGeneration.MethodInvokerCreationService.html",
    "title": "Class MethodInvokerCreationService | EasyRpc documentation website",
    "keywords": "Class MethodInvokerCreationService information about the method to invoke Inheritance Object MethodInvokerCreationService Implements IMethodInvokerCreationService IApiConfigurationCompleteAware Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : EasyRpc.AspNetCore.CodeGeneration Assembly : EasyRpc.AspNetCore.dll Syntax public class MethodInvokerCreationService : IMethodInvokerCreationService, IApiConfigurationCompleteAware Methods | Improve this Doc View Source ApiConfigurationComplete(IServiceProvider) Declaration public virtual void ApiConfigurationComplete(IServiceProvider serviceScope) Parameters Type Name Description IServiceProvider serviceScope | Improve this Doc View Source BuildDelegateMethodInvoker<T>(IEndPointMethodConfigurationReadOnly, Type) build delegate method invoker Declaration protected virtual InvokeMethodDelegate<T> BuildDelegateMethodInvoker<T>(IEndPointMethodConfigurationReadOnly endPointMethodConfiguration, Type parametersType) Parameters Type Name Description IEndPointMethodConfigurationReadOnly endPointMethodConfiguration Type parametersType Returns Type Description InvokeMethodDelegate <T> Type Parameters Name Description T | Improve this Doc View Source BuildInstanceMethodInvoker<T>(IEndPointMethodConfigurationReadOnly, Type) build instance method invoker Declaration protected virtual InvokeMethodDelegate<T> BuildInstanceMethodInvoker<T>(IEndPointMethodConfigurationReadOnly endPointMethodConfiguration, Type parametersType) Parameters Type Name Description IEndPointMethodConfigurationReadOnly endPointMethodConfiguration Type parametersType Returns Type Description InvokeMethodDelegate <T> Type Parameters Name Description T | Improve this Doc View Source BuildMethodInvoker<T>(IEndPointMethodConfigurationReadOnly, Type) Build method invoker delegate given an endpoint configuration and parameter type Declaration public InvokeMethodDelegate<T> BuildMethodInvoker<T>(IEndPointMethodConfigurationReadOnly endPointMethodConfiguration, Type parametersType) Parameters Type Name Description IEndPointMethodConfigurationReadOnly endPointMethodConfiguration Type parametersType Returns Type Description InvokeMethodDelegate <T> Type Parameters Name Description T | Improve this Doc View Source BuildParameterAssign(Type, ParameterExpression, ParameterExpression) Build parameter assignment statement Declaration protected virtual Expression BuildParameterAssign(Type parametersType, ParameterExpression typedParameterVariable, ParameterExpression requestParameter) Parameters Type Name Description Type parametersType ParameterExpression typedParameterVariable ParameterExpression requestParameter Returns Type Description Expression | Improve this Doc View Source BuildParameterList(IEndPointMethodConfigurationReadOnly, Type, ParameterExpression) Build parameter list expressions Declaration protected virtual List<Expression> BuildParameterList(IEndPointMethodConfigurationReadOnly endPointMethodConfiguration, Type parametersType, ParameterExpression typedParameterVariable) Parameters Type Name Description IEndPointMethodConfigurationReadOnly endPointMethodConfiguration Type parametersType ParameterExpression typedParameterVariable Returns Type Description List < Expression > | Improve this Doc View Source WrapExpression<T>(IEndPointMethodConfigurationReadOnly, MethodInfo, List<Expression>, ParameterExpression, Expression) Wrap result expression Declaration protected virtual void WrapExpression<T>(IEndPointMethodConfigurationReadOnly endPointMethodConfiguration, MethodInfo invokeMethod, List<Expression> methodBodyStatements, ParameterExpression requestParameter, Expression invokeExpression) Parameters Type Name Description IEndPointMethodConfigurationReadOnly endPointMethodConfiguration MethodInfo invokeMethod List < Expression > methodBodyStatements ParameterExpression requestParameter Expression invokeExpression Type Parameters Name Description T Implements IMethodInvokerCreationService IApiConfigurationCompleteAware"
  },
  "api/EasyRpc.AspNetCore.CodeGeneration.ResponseDelegateCreator.html": {
    "href": "api/EasyRpc.AspNetCore.CodeGeneration.ResponseDelegateCreator.html",
    "title": "Class ResponseDelegateCreator | EasyRpc documentation website",
    "keywords": "Class ResponseDelegateCreator Builds delegate that writes result to the response stream Inheritance Object ResponseDelegateCreator Implements IResponseDelegateCreator Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : EasyRpc.AspNetCore.CodeGeneration Assembly : EasyRpc.AspNetCore.dll Syntax public class ResponseDelegateCreator : IResponseDelegateCreator Constructors | Improve this Doc View Source ResponseDelegateCreator(IContentSerializationService, IRawContentWriter) Default constructor Declaration public ResponseDelegateCreator(IContentSerializationService contentSerializer, IRawContentWriter rawContentWriter) Parameters Type Name Description IContentSerializationService contentSerializer IRawContentWriter rawContentWriter Fields | Improve this Doc View Source ContentSerializer Content serializer Declaration protected readonly IContentSerializationService ContentSerializer Field Value Type Description IContentSerializationService | Improve this Doc View Source DefaultContentSerializer Default content serializer method Declaration protected readonly MethodEndPointDelegate DefaultContentSerializer Field Value Type Description MethodEndPointDelegate | Improve this Doc View Source Noop No operation method Declaration protected static readonly MethodEndPointDelegate Noop Field Value Type Description MethodEndPointDelegate | Improve this Doc View Source RawContentWriter Raw Content Writer Declaration protected readonly IRawContentWriter RawContentWriter Field Value Type Description IRawContentWriter Methods | Improve this Doc View Source CreateResponseDelegate(IEndPointMethodConfigurationReadOnly) Create delegate that writes result to the response stream Declaration public virtual MethodEndPointDelegate CreateResponseDelegate(IEndPointMethodConfigurationReadOnly configuration) Parameters Type Name Description IEndPointMethodConfigurationReadOnly configuration Returns Type Description MethodEndPointDelegate | Improve this Doc View Source RawHeaderResponseWriter(RequestExecutionContext, String, String, IReadOnlyList<IResponseHeader>) Write raw response with headers Declaration protected virtual Task RawHeaderResponseWriter(RequestExecutionContext context, string contentType, string encodingType, IReadOnlyList<IResponseHeader> responseHeaders) Parameters Type Name Description RequestExecutionContext context String contentType String encodingType IReadOnlyList < IResponseHeader > responseHeaders Returns Type Description Task | Improve this Doc View Source SerializeHeaderResponseWriter(RequestExecutionContext, IReadOnlyList<IResponseHeader>) Serialize response as well as process headers Declaration protected virtual Task SerializeHeaderResponseWriter(RequestExecutionContext context, IReadOnlyList<IResponseHeader> responseHeaders) Parameters Type Name Description RequestExecutionContext context IReadOnlyList < IResponseHeader > responseHeaders Returns Type Description Task Implements IResponseDelegateCreator"
  },
  "api/EasyRpc.AspNetCore.CodeGeneration.WrappedResultTypeCreator.html": {
    "href": "api/EasyRpc.AspNetCore.CodeGeneration.WrappedResultTypeCreator.html",
    "title": "Class WrappedResultTypeCreator | EasyRpc documentation website",
    "keywords": "Class WrappedResultTypeCreator Creates a wrapper type for simple types like int, string, double etc. Inheritance Object WrappedResultTypeCreator Implements IWrappedResultTypeCreator Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : EasyRpc.AspNetCore.CodeGeneration Assembly : EasyRpc.AspNetCore.dll Syntax public class WrappedResultTypeCreator : IWrappedResultTypeCreator Constructors | Improve this Doc View Source WrappedResultTypeCreator(IEnumerable<ISerializationTypeAttributor>) Default constructor Declaration public WrappedResultTypeCreator(IEnumerable<ISerializationTypeAttributor> serializationTypeAttributors) Parameters Type Name Description IEnumerable < ISerializationTypeAttributor > serializationTypeAttributors Methods | Improve this Doc View Source AddAttributes(TypeBuilder) Declaration protected virtual void AddAttributes(TypeBuilder wrapperTypeBuilder) Parameters Type Name Description TypeBuilder wrapperTypeBuilder | Improve this Doc View Source AddInterfaceImplementations(TypeBuilder, Type) Declaration protected virtual void AddInterfaceImplementations(TypeBuilder typeBuilder, Type typeToWrap) Parameters Type Name Description TypeBuilder typeBuilder Type typeToWrap | Improve this Doc View Source AddValueProperty(TypeBuilder, Type) Declaration protected virtual void AddValueProperty(TypeBuilder typeBuilder, Type typeToWrap) Parameters Type Name Description TypeBuilder typeBuilder Type typeToWrap | Improve this Doc View Source CreateTypeBuilder(Type) Declaration protected virtual TypeBuilder CreateTypeBuilder(Type typeToWrap) Parameters Type Name Description Type typeToWrap Returns Type Description TypeBuilder | Improve this Doc View Source CreateWrapper(Type) Declaration protected virtual Type CreateWrapper(Type typeToWrap) Parameters Type Name Description Type typeToWrap Returns Type Description Type | Improve this Doc View Source GeneratePropertyGet(TypeBuilder, PropertyBuilder, Type, FieldBuilder) Declaration protected virtual void GeneratePropertyGet(TypeBuilder typeBuilder, PropertyBuilder propertyBuilder, Type typeToWrap, FieldBuilder backingField) Parameters Type Name Description TypeBuilder typeBuilder PropertyBuilder propertyBuilder Type typeToWrap FieldBuilder backingField | Improve this Doc View Source GeneratePropertyGetIL(TypeBuilder, MethodBuilder, FieldBuilder) Declaration protected virtual void GeneratePropertyGetIL(TypeBuilder typeBuilder, MethodBuilder getMethodBuilder, FieldBuilder backingField) Parameters Type Name Description TypeBuilder typeBuilder MethodBuilder getMethodBuilder FieldBuilder backingField | Improve this Doc View Source GeneratePropertySet(TypeBuilder, PropertyBuilder, Type, FieldBuilder) Declaration protected virtual void GeneratePropertySet(TypeBuilder typeBuilder, PropertyBuilder propertyBuilder, Type typeToWrap, FieldBuilder backingField) Parameters Type Name Description TypeBuilder typeBuilder PropertyBuilder propertyBuilder Type typeToWrap FieldBuilder backingField | Improve this Doc View Source GeneratePropertySetIL(TypeBuilder, MethodBuilder, FieldBuilder) Declaration protected virtual void GeneratePropertySetIL(TypeBuilder typeBuilder, MethodBuilder setMethodBuilder, FieldBuilder backingField) Parameters Type Name Description TypeBuilder typeBuilder MethodBuilder setMethodBuilder FieldBuilder backingField | Improve this Doc View Source GetTypeWrapper(Type) Gets a type wrapper for the provided type Declaration public Type GetTypeWrapper(Type typeToWrap) Parameters Type Name Description Type typeToWrap Returns Type Description Type Implements IWrappedResultTypeCreator"
  },
  "api/EasyRpc.AspNetCore.Configuration.ApiConfigurationFactory.html": {
    "href": "api/EasyRpc.AspNetCore.Configuration.ApiConfigurationFactory.html",
    "title": "Class ApiConfigurationFactory | EasyRpc documentation website",
    "keywords": "Class ApiConfigurationFactory Inheritance Object ApiConfigurationFactory Implements IApiConfigurationFactory Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : EasyRpc.AspNetCore.Configuration Assembly : EasyRpc.AspNetCore.dll Syntax public class ApiConfigurationFactory : IApiConfigurationFactory Methods | Improve this Doc View Source CreateApiConfiguration(IServiceProvider) Declaration public IInternalApiConfiguration CreateApiConfiguration(IServiceProvider serviceProvider) Parameters Type Name Description IServiceProvider serviceProvider Returns Type Description IInternalApiConfiguration Implements IApiConfigurationFactory"
  },
  "api/EasyRpc.AspNetCore.Configuration.ApplicationConfigurationService.html": {
    "href": "api/EasyRpc.AspNetCore.Configuration.ApplicationConfigurationService.html",
    "title": "Class ApplicationConfigurationService | EasyRpc documentation website",
    "keywords": "Class ApplicationConfigurationService Inheritance Object ApplicationConfigurationService Implements IApplicationConfigurationService Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : EasyRpc.AspNetCore.Configuration Assembly : EasyRpc.AspNetCore.dll Syntax public class ApplicationConfigurationService : IApplicationConfigurationService Constructors | Improve this Doc View Source ApplicationConfigurationService(BaseEndPointServices, IConfigurationManager, IAuthorizationImplementationProvider, IWrappedResultTypeCreator) Declaration public ApplicationConfigurationService(BaseEndPointServices services, IConfigurationManager configurationManager, IAuthorizationImplementationProvider authorizationImplementationProvider, IWrappedResultTypeCreator wrappedResultTypeCreator) Parameters Type Name Description BaseEndPointServices services IConfigurationManager configurationManager IAuthorizationImplementationProvider authorizationImplementationProvider IWrappedResultTypeCreator wrappedResultTypeCreator Fields | Improve this Doc View Source EmptyList Empty list of attributes Declaration protected readonly List<Attribute> EmptyList Field Value Type Description List < Attribute > Properties | Improve this Doc View Source BasePath Declaration protected string BasePath { get; } Property Value Type Description String Methods | Improve this Doc View Source AddConfigurationObject(Object) Declaration public void AddConfigurationObject(object configurationObject) Parameters Type Name Description Object configurationObject | Improve this Doc View Source ApplyAuthorizations(ICurrentApiInformation, IReadOnlyList<Func<IEndPointMethodConfigurationReadOnly, IEnumerable<IEndPointMethodAuthorization>>>, EndPointMethodConfiguration, List<Attribute>, List<Attribute>) Declaration protected virtual void ApplyAuthorizations(ICurrentApiInformation currentApi, IReadOnlyList<Func<IEndPointMethodConfigurationReadOnly, IEnumerable<IEndPointMethodAuthorization>>> authorizationFuncList, EndPointMethodConfiguration configuration, List<Attribute> classAttributes, List<Attribute> methodAttributes) Parameters Type Name Description ICurrentApiInformation currentApi IReadOnlyList < Func < IEndPointMethodConfigurationReadOnly , IEnumerable < IEndPointMethodAuthorization >>> authorizationFuncList EndPointMethodConfiguration configuration List < Attribute > classAttributes List < Attribute > methodAttributes | Improve this Doc View Source CreateEndPointMethodConfigurationForFunc<TDelegate>(ICurrentApiInformation, ExpressionInstanceConfiguration, Delegate, Expression<TDelegate>) Create end point configuration for func delegate Declaration protected virtual IEnumerable<EndPointMethodConfiguration> CreateEndPointMethodConfigurationForFunc<TDelegate>(ICurrentApiInformation currentApi, ExpressionInstanceConfiguration instanceConfiguration, Delegate func, Expression<TDelegate> expression) Parameters Type Name Description ICurrentApiInformation currentApi ExpressionInstanceConfiguration instanceConfiguration Delegate func Expression <TDelegate> expression Returns Type Description IEnumerable < EndPointMethodConfiguration > Type Parameters Name Description TDelegate | Improve this Doc View Source DefaultFilterMethod(MethodInfo) Declaration protected virtual bool DefaultFilterMethod(MethodInfo arg) Parameters Type Name Description MethodInfo arg Returns Type Description Boolean | Improve this Doc View Source ExposeExpression<TResult>(ICurrentApiInformation, ExpressionInstanceConfiguration, Expression<Func<TResult>>) Declaration public void ExposeExpression<TResult>(ICurrentApiInformation currentApi, ExpressionInstanceConfiguration instanceConfiguration, Expression<Func<TResult>> expression) Parameters Type Name Description ICurrentApiInformation currentApi ExpressionInstanceConfiguration instanceConfiguration Expression < Func <TResult>> expression Type Parameters Name Description TResult | Improve this Doc View Source ExposeExpression<TArg1, TResult>(ICurrentApiInformation, ExpressionInstanceConfiguration, Expression<Func<TArg1, TResult>>) Declaration public void ExposeExpression<TArg1, TResult>(ICurrentApiInformation currentApi, ExpressionInstanceConfiguration instanceConfiguration, Expression<Func<TArg1, TResult>> expression) Parameters Type Name Description ICurrentApiInformation currentApi ExpressionInstanceConfiguration instanceConfiguration Expression < Func <TArg1, TResult>> expression Type Parameters Name Description TArg1 TResult | Improve this Doc View Source ExposeExpression<TArg1, TArg2, TResult>(ICurrentApiInformation, ExpressionInstanceConfiguration, Expression<Func<TArg1, TArg2, TResult>>) Declaration public void ExposeExpression<TArg1, TArg2, TResult>(ICurrentApiInformation currentApi, ExpressionInstanceConfiguration instanceConfiguration, Expression<Func<TArg1, TArg2, TResult>> expression) Parameters Type Name Description ICurrentApiInformation currentApi ExpressionInstanceConfiguration instanceConfiguration Expression < Func <TArg1, TArg2, TResult>> expression Type Parameters Name Description TArg1 TArg2 TResult | Improve this Doc View Source ExposeExpression<TArg1, TArg2, TArg3, TResult>(ICurrentApiInformation, ExpressionInstanceConfiguration, Expression<Func<TArg1, TArg2, TArg3, TResult>>) Declaration public void ExposeExpression<TArg1, TArg2, TArg3, TResult>(ICurrentApiInformation currentApi, ExpressionInstanceConfiguration instanceConfiguration, Expression<Func<TArg1, TArg2, TArg3, TResult>> expression) Parameters Type Name Description ICurrentApiInformation currentApi ExpressionInstanceConfiguration instanceConfiguration Expression < Func <TArg1, TArg2, TArg3, TResult>> expression Type Parameters Name Description TArg1 TArg2 TArg3 TResult | Improve this Doc View Source ExposeMethod(ICurrentApiInformation, Type, List<Attribute>, String, List<IEndPointMethodAuthorization>, String, MethodInfo) Declaration protected virtual void ExposeMethod(ICurrentApiInformation currentApi, Type type, List<Attribute> classAttributes, string name, List<IEndPointMethodAuthorization> authorizations, string obsoleteMessage, MethodInfo methodInfo) Parameters Type Name Description ICurrentApiInformation currentApi Type type List < Attribute > classAttributes String name List < IEndPointMethodAuthorization > authorizations String obsoleteMessage MethodInfo methodInfo | Improve this Doc View Source ExposeType(ICurrentApiInformation, Type, String, List<IEndPointMethodAuthorization>, Func<MethodInfo, Boolean>, String) Declaration public void ExposeType(ICurrentApiInformation currentApi, Type type, string name, List<IEndPointMethodAuthorization> authorizations, Func<MethodInfo, bool> methodFilter, string obsoleteMessage) Parameters Type Name Description ICurrentApiInformation currentApi Type type String name List < IEndPointMethodAuthorization > authorizations Func < MethodInfo , Boolean > methodFilter String obsoleteMessage | Improve this Doc View Source GenerateMethodParametersForExpression<TDelegate>(ICurrentApiInformation, IRpcRouteInformation, Expression<TDelegate>) Generate method parameter for expression Declaration protected virtual IEnumerable<RpcParameterInfo> GenerateMethodParametersForExpression<TDelegate>(ICurrentApiInformation currentApi, IRpcRouteInformation routeInformation, Expression<TDelegate> expression) Parameters Type Name Description ICurrentApiInformation currentApi IRpcRouteInformation routeInformation Expression <TDelegate> expression Returns Type Description IEnumerable < RpcParameterInfo > Type Parameters Name Description TDelegate | Improve this Doc View Source ProcessConfigurationObjects() Declaration protected virtual void ProcessConfigurationObjects() | Improve this Doc View Source ProvideEndPointHandlers() Declaration public IReadOnlyList<IEndPointMethodHandler> ProvideEndPointHandlers() Returns Type Description IReadOnlyList < IEndPointMethodHandler > | Improve this Doc View Source RegisterExpression<TDelegate>(ICurrentApiInformation, ExpressionInstanceConfiguration, Expression<TDelegate>, Delegate) Register expression end point Declaration protected virtual void RegisterExpression<TDelegate>(ICurrentApiInformation currentApi, ExpressionInstanceConfiguration instanceConfiguration, Expression<TDelegate> expression, Delegate finalDelegate) Parameters Type Name Description ICurrentApiInformation currentApi ExpressionInstanceConfiguration instanceConfiguration Expression <TDelegate> expression Delegate finalDelegate Type Parameters Name Description TDelegate | Improve this Doc View Source SetParameterSource(IRpcRouteInformation, Type, RpcParameterInfo) Set parameter source based on type Declaration protected virtual void SetParameterSource(IRpcRouteInformation routeInformation, Type parameterType, RpcParameterInfo rpcParameter) Parameters Type Name Description IRpcRouteInformation routeInformation Type parameterType RpcParameterInfo rpcParameter Implements IApplicationConfigurationService"
  },
  "api/EasyRpc.AspNetCore.Configuration.AuthorizationImplementationProvider.html": {
    "href": "api/EasyRpc.AspNetCore.Configuration.AuthorizationImplementationProvider.html",
    "title": "Class AuthorizationImplementationProvider | EasyRpc documentation website",
    "keywords": "Class AuthorizationImplementationProvider Inheritance Object AuthorizationImplementationProvider Implements IAuthorizationImplementationProvider Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : EasyRpc.AspNetCore.Configuration Assembly : EasyRpc.AspNetCore.dll Syntax public class AuthorizationImplementationProvider : IAuthorizationImplementationProvider Methods | Improve this Doc View Source Authorized() Declaration public virtual IEndPointMethodAuthorization Authorized() Returns Type Description IEndPointMethodAuthorization | Improve this Doc View Source UserHasPolicy(String) Declaration public virtual IEndPointMethodAuthorization UserHasPolicy(string policy) Parameters Type Name Description String policy Returns Type Description IEndPointMethodAuthorization | Improve this Doc View Source UserHasRole(String) Declaration public virtual IEndPointMethodAuthorization UserHasRole(string role) Parameters Type Name Description String role Returns Type Description IEndPointMethodAuthorization Implements IAuthorizationImplementationProvider"
  },
  "api/EasyRpc.AspNetCore.Configuration.ConfigurationManager.html": {
    "href": "api/EasyRpc.AspNetCore.Configuration.ConfigurationManager.html",
    "title": "Class ConfigurationManager | EasyRpc documentation website",
    "keywords": "Class ConfigurationManager Inheritance Object ConfigurationManager Implements IConfigurationManager Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : EasyRpc.AspNetCore.Configuration Assembly : EasyRpc.AspNetCore.dll Syntax public class ConfigurationManager : IConfigurationManager Methods | Improve this Doc View Source CreationMethod<T>(Func<T>) Declaration public void CreationMethod<T>(Func<T> defaultRegistration) Parameters Type Name Description Func <T> defaultRegistration Type Parameters Name Description T | Improve this Doc View Source GetConfiguration<T>() Declaration public T GetConfiguration<T>() Returns Type Description T Type Parameters Name Description T | Improve this Doc View Source RegisterConfigurationMethod<T>(Action<T>) Declaration public void RegisterConfigurationMethod<T>(Action<T> configurationMethod) Parameters Type Name Description Action <T> configurationMethod Type Parameters Name Description T Implements IConfigurationManager"
  },
  "api/EasyRpc.AspNetCore.Configuration.CurrentApiInformation.html": {
    "href": "api/EasyRpc.AspNetCore.Configuration.CurrentApiInformation.html",
    "title": "Class CurrentApiInformation | EasyRpc documentation website",
    "keywords": "Class CurrentApiInformation Inheritance Object CurrentApiInformation Implements ICurrentApiInformation Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : EasyRpc.AspNetCore.Configuration Assembly : EasyRpc.AspNetCore.dll Syntax public class CurrentApiInformation : ICurrentApiInformation Constructors | Improve this Doc View Source CurrentApiInformation(ImmutableLinkedList<Func<IEndPointMethodConfigurationReadOnly, IEnumerable<IEndPointMethodAuthorization>>>, ImmutableLinkedList<Func<IEndPointMethodConfigurationReadOnly, Func<RequestExecutionContext, IRequestFilter>>>, ImmutableLinkedList<Func<Type, IEnumerable<String>>>, ImmutableLinkedList<Func<MethodInfo, Boolean>>, Boolean, ExposeDefaultMethod, ServiceActivationMethod, IServiceProvider, IConfigurationManager, ImmutableLinkedList<IResponseHeader>) Declaration public CurrentApiInformation(ImmutableLinkedList<Func<IEndPointMethodConfigurationReadOnly, IEnumerable<IEndPointMethodAuthorization>>> authorizations, ImmutableLinkedList<Func<IEndPointMethodConfigurationReadOnly, Func<RequestExecutionContext, IRequestFilter>>> filters, ImmutableLinkedList<Func<Type, IEnumerable<string>>> prefixes, ImmutableLinkedList<Func<MethodInfo, bool>> methodFilters, bool supportResponseCompression, ExposeDefaultMethod defaultMethod, ServiceActivationMethod serviceActivationMethod, IServiceProvider serviceProvider, IConfigurationManager configurationMethods, ImmutableLinkedList<IResponseHeader> headers) Parameters Type Name Description ImmutableLinkedList < Func < IEndPointMethodConfigurationReadOnly , IEnumerable < IEndPointMethodAuthorization >>> authorizations ImmutableLinkedList < Func < IEndPointMethodConfigurationReadOnly , Func < RequestExecutionContext , IRequestFilter >>> filters ImmutableLinkedList < Func < Type , IEnumerable < String >>> prefixes ImmutableLinkedList < Func < MethodInfo , Boolean >> methodFilters Boolean supportResponseCompression ExposeDefaultMethod defaultMethod ServiceActivationMethod serviceActivationMethod IServiceProvider serviceProvider IConfigurationManager configurationMethods ImmutableLinkedList < IResponseHeader > headers Properties | Improve this Doc View Source Authorizations Declaration public ImmutableLinkedList<Func<IEndPointMethodConfigurationReadOnly, IEnumerable<IEndPointMethodAuthorization>>> Authorizations { get; } Property Value Type Description ImmutableLinkedList < Func < IEndPointMethodConfigurationReadOnly , IEnumerable < IEndPointMethodAuthorization >>> | Improve this Doc View Source BasePath Declaration public string BasePath { get; } Property Value Type Description String | Improve this Doc View Source ConfigurationMethods Declaration public IConfigurationManager ConfigurationMethods { get; } Property Value Type Description IConfigurationManager | Improve this Doc View Source DefaultMethod Declaration public ExposeDefaultMethod DefaultMethod { get; } Property Value Type Description ExposeDefaultMethod | Improve this Doc View Source Filters Declaration public ImmutableLinkedList<Func<IEndPointMethodConfigurationReadOnly, Func<RequestExecutionContext, IRequestFilter>>> Filters { get; } Property Value Type Description ImmutableLinkedList < Func < IEndPointMethodConfigurationReadOnly , Func < RequestExecutionContext , IRequestFilter >>> | Improve this Doc View Source Headers Declaration public ImmutableLinkedList<IResponseHeader> Headers { get; } Property Value Type Description ImmutableLinkedList < IResponseHeader > | Improve this Doc View Source MethodFilters Declaration public ImmutableLinkedList<Func<MethodInfo, bool>> MethodFilters { get; } Property Value Type Description ImmutableLinkedList < Func < MethodInfo , Boolean >> | Improve this Doc View Source Prefixes Declaration public ImmutableLinkedList<Func<Type, IEnumerable<string>>> Prefixes { get; } Property Value Type Description ImmutableLinkedList < Func < Type , IEnumerable < String >>> | Improve this Doc View Source ServiceActivationMethod Declaration public ServiceActivationMethod ServiceActivationMethod { get; } Property Value Type Description ServiceActivationMethod | Improve this Doc View Source ServiceProvider Declaration public IServiceProvider ServiceProvider { get; } Property Value Type Description IServiceProvider | Improve this Doc View Source SupportResponseCompression Declaration public bool SupportResponseCompression { get; } Property Value Type Description Boolean Implements ICurrentApiInformation"
  },
  "api/EasyRpc.AspNetCore.Configuration.DefaultExposeDelegates.html": {
    "href": "api/EasyRpc.AspNetCore.Configuration.DefaultExposeDelegates.html",
    "title": "Class DefaultExposeDelegates | EasyRpc documentation website",
    "keywords": "Class DefaultExposeDelegates Default configuration delegates Inheritance Object DefaultExposeDelegates Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : EasyRpc.AspNetCore.Configuration Assembly : EasyRpc.AspNetCore.dll Syntax public static class DefaultExposeDelegates Methods | Improve this Doc View Source DefaultMethodNameGenerator(MethodInfo) Default method name generator Declaration public static string DefaultMethodNameGenerator(MethodInfo method) Parameters Type Name Description MethodInfo method Returns Type Description String | Improve this Doc View Source DefaultRouteNameGenerator(Type) Default route name generator Declaration public static string DefaultRouteNameGenerator(Type type) Parameters Type Name Description Type type Returns Type Description String | Improve this Doc View Source DefaultTypeWrapSelector(Type) By default don't wrap anything Declaration public static bool DefaultTypeWrapSelector(Type wrapType) Parameters Type Name Description Type wrapType Returns Type Description Boolean | Improve this Doc View Source ResolveFromContainer(Type) Resolve interface types from container Declaration public static bool ResolveFromContainer(Type arg) Parameters Type Name Description Type arg Returns Type Description Boolean | Improve this Doc View Source SimpleTypeWrapSelector(Type) Wrap simple types with class Declaration public static bool SimpleTypeWrapSelector(Type wrapType) Parameters Type Name Description Type wrapType Returns Type Description Boolean"
  },
  "api/EasyRpc.AspNetCore.Configuration.DelegateConfiguration.ExpressionInstanceConfiguration.html": {
    "href": "api/EasyRpc.AspNetCore.Configuration.DelegateConfiguration.ExpressionInstanceConfiguration.html",
    "title": "Class ExpressionInstanceConfiguration | EasyRpc documentation website",
    "keywords": "Class ExpressionInstanceConfiguration Inheritance Object ExpressionInstanceConfiguration NoParamDelegateConfiguration<TResult> OneArgDelegateConfiguration<TArg1, TResult> ThreeArgDelegateConfiguration<TArg1, TArg2, TArg3, TResult> TwoArgDelegateConfiguration<TArg1, TArg2, TResult> Implements IExposureExpressionConfiguration Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : EasyRpc.AspNetCore.Configuration.DelegateConfiguration Assembly : EasyRpc.AspNetCore.dll Syntax public class ExpressionInstanceConfiguration : IExposureExpressionConfiguration Fields | Improve this Doc View Source Authorizations Declaration public ImmutableLinkedList<IEndPointMethodAuthorization> Authorizations Field Value Type Description ImmutableLinkedList < IEndPointMethodAuthorization > | Improve this Doc View Source ResponseHeaders Declaration public ImmutableLinkedList<IResponseHeader> ResponseHeaders Field Value Type Description ImmutableLinkedList < IResponseHeader > Properties | Improve this Doc View Source Filters Declaration public ImmutableLinkedList<Func<RequestExecutionContext, IRequestFilter>> Filters { get; set; } Property Value Type Description ImmutableLinkedList < Func < RequestExecutionContext , IRequestFilter >> | Improve this Doc View Source HasBody Declaration public bool HasBody { get; set; } Property Value Type Description Boolean | Improve this Doc View Source Headers Declaration public ImmutableLinkedList<IResponseHeader> Headers { get; set; } Property Value Type Description ImmutableLinkedList < IResponseHeader > | Improve this Doc View Source Method Declaration public string Method { get; set; } Property Value Type Description String | Improve this Doc View Source Path Declaration public string Path { get; set; } Property Value Type Description String | Improve this Doc View Source RawContentType Declaration public string RawContentType { get; set; } Property Value Type Description String Methods | Improve this Doc View Source Authorize(String, String) Declaration public IExposureExpressionConfiguration Authorize(string role = null, string policy = null) Parameters Type Name Description String role String policy Returns Type Description IExposureExpressionConfiguration | Improve this Doc View Source Header(String, String) Declaration public IExposureExpressionConfiguration Header(string header, string value) Parameters Type Name Description String header String value Returns Type Description IExposureExpressionConfiguration | Improve this Doc View Source Raw(String) Declaration public IExposureExpressionConfiguration Raw(string contentType) Parameters Type Name Description String contentType Returns Type Description IExposureExpressionConfiguration Implements IExposureExpressionConfiguration"
  },
  "api/EasyRpc.AspNetCore.Configuration.DelegateConfiguration.html": {
    "href": "api/EasyRpc.AspNetCore.Configuration.DelegateConfiguration.html",
    "title": "Namespace EasyRpc.AspNetCore.Configuration.DelegateConfiguration | EasyRpc documentation website",
    "keywords": "Namespace EasyRpc.AspNetCore.Configuration.DelegateConfiguration Classes ExpressionInstanceConfiguration NoParamDelegateConfiguration<TResult> OneArgDelegateConfiguration<TArg1, TResult> ThreeArgDelegateConfiguration<TArg1, TArg2, TArg3, TResult> TwoArgDelegateConfiguration<TArg1, TArg2, TResult>"
  },
  "api/EasyRpc.AspNetCore.Configuration.DelegateConfiguration.NoParamDelegateConfiguration-1.html": {
    "href": "api/EasyRpc.AspNetCore.Configuration.DelegateConfiguration.NoParamDelegateConfiguration-1.html",
    "title": "Class NoParamDelegateConfiguration<TResult> | EasyRpc documentation website",
    "keywords": "Class NoParamDelegateConfiguration<TResult> Inheritance Object ExpressionInstanceConfiguration NoParamDelegateConfiguration<TResult> Implements IExposureExpressionConfiguration IConfigurationInformationProvider Inherited Members ExpressionInstanceConfiguration.Path ExpressionInstanceConfiguration.Method ExpressionInstanceConfiguration.HasBody ExpressionInstanceConfiguration.RawContentType ExpressionInstanceConfiguration.Headers ExpressionInstanceConfiguration.Filters ExpressionInstanceConfiguration.Authorizations ExpressionInstanceConfiguration.ResponseHeaders ExpressionInstanceConfiguration.Authorize(String, String) ExpressionInstanceConfiguration.Raw(String) ExpressionInstanceConfiguration.Header(String, String) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : EasyRpc.AspNetCore.Configuration.DelegateConfiguration Assembly : EasyRpc.AspNetCore.dll Syntax public class NoParamDelegateConfiguration<TResult> : ExpressionInstanceConfiguration, IExposureExpressionConfiguration, IConfigurationInformationProvider Type Parameters Name Description TResult Constructors | Improve this Doc View Source NoParamDelegateConfiguration(ICurrentApiInformation, String, String, Expression<Func<TResult>>) Declaration public NoParamDelegateConfiguration(ICurrentApiInformation currentApi, string method, string path, Expression<Func<TResult>> expression) Parameters Type Name Description ICurrentApiInformation currentApi String method String path Expression < Func <TResult>> expression Methods | Improve this Doc View Source ExecuteConfiguration(IApplicationConfigurationService) Declaration public void ExecuteConfiguration(IApplicationConfigurationService service) Parameters Type Name Description IApplicationConfigurationService service Implements IExposureExpressionConfiguration IConfigurationInformationProvider"
  },
  "api/EasyRpc.AspNetCore.Configuration.DelegateConfiguration.OneArgDelegateConfiguration-2.html": {
    "href": "api/EasyRpc.AspNetCore.Configuration.DelegateConfiguration.OneArgDelegateConfiguration-2.html",
    "title": "Class OneArgDelegateConfiguration<TArg1, TResult> | EasyRpc documentation website",
    "keywords": "Class OneArgDelegateConfiguration<TArg1, TResult> Inheritance Object ExpressionInstanceConfiguration OneArgDelegateConfiguration<TArg1, TResult> Implements IExposureExpressionConfiguration IConfigurationInformationProvider Inherited Members ExpressionInstanceConfiguration.Path ExpressionInstanceConfiguration.Method ExpressionInstanceConfiguration.HasBody ExpressionInstanceConfiguration.RawContentType ExpressionInstanceConfiguration.Headers ExpressionInstanceConfiguration.Filters ExpressionInstanceConfiguration.Authorizations ExpressionInstanceConfiguration.ResponseHeaders ExpressionInstanceConfiguration.Authorize(String, String) ExpressionInstanceConfiguration.Raw(String) ExpressionInstanceConfiguration.Header(String, String) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : EasyRpc.AspNetCore.Configuration.DelegateConfiguration Assembly : EasyRpc.AspNetCore.dll Syntax public class OneArgDelegateConfiguration<TArg1, TResult> : ExpressionInstanceConfiguration, IExposureExpressionConfiguration, IConfigurationInformationProvider Type Parameters Name Description TArg1 TResult Constructors | Improve this Doc View Source OneArgDelegateConfiguration(ICurrentApiInformation, String, String, Expression<Func<TArg1, TResult>>) Declaration public OneArgDelegateConfiguration(ICurrentApiInformation currentApi, string method, string path, Expression<Func<TArg1, TResult>> expression) Parameters Type Name Description ICurrentApiInformation currentApi String method String path Expression < Func <TArg1, TResult>> expression Methods | Improve this Doc View Source ExecuteConfiguration(IApplicationConfigurationService) Declaration public void ExecuteConfiguration(IApplicationConfigurationService service) Parameters Type Name Description IApplicationConfigurationService service Implements IExposureExpressionConfiguration IConfigurationInformationProvider"
  },
  "api/EasyRpc.AspNetCore.Configuration.DelegateConfiguration.ThreeArgDelegateConfiguration-4.html": {
    "href": "api/EasyRpc.AspNetCore.Configuration.DelegateConfiguration.ThreeArgDelegateConfiguration-4.html",
    "title": "Class ThreeArgDelegateConfiguration<TArg1, TArg2, TArg3, TResult> | EasyRpc documentation website",
    "keywords": "Class ThreeArgDelegateConfiguration<TArg1, TArg2, TArg3, TResult> Inheritance Object ExpressionInstanceConfiguration ThreeArgDelegateConfiguration<TArg1, TArg2, TArg3, TResult> Implements IExposureExpressionConfiguration IConfigurationInformationProvider Inherited Members ExpressionInstanceConfiguration.Path ExpressionInstanceConfiguration.Method ExpressionInstanceConfiguration.HasBody ExpressionInstanceConfiguration.RawContentType ExpressionInstanceConfiguration.Headers ExpressionInstanceConfiguration.Filters ExpressionInstanceConfiguration.Authorizations ExpressionInstanceConfiguration.ResponseHeaders ExpressionInstanceConfiguration.Authorize(String, String) ExpressionInstanceConfiguration.Raw(String) ExpressionInstanceConfiguration.Header(String, String) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : EasyRpc.AspNetCore.Configuration.DelegateConfiguration Assembly : EasyRpc.AspNetCore.dll Syntax public class ThreeArgDelegateConfiguration<TArg1, TArg2, TArg3, TResult> : ExpressionInstanceConfiguration, IExposureExpressionConfiguration, IConfigurationInformationProvider Type Parameters Name Description TArg1 TArg2 TArg3 TResult Constructors | Improve this Doc View Source ThreeArgDelegateConfiguration(ICurrentApiInformation, String, String, Expression<Func<TArg1, TArg2, TArg3, TResult>>) Declaration public ThreeArgDelegateConfiguration(ICurrentApiInformation currentApi, string method, string path, Expression<Func<TArg1, TArg2, TArg3, TResult>> expression) Parameters Type Name Description ICurrentApiInformation currentApi String method String path Expression < Func <TArg1, TArg2, TArg3, TResult>> expression Methods | Improve this Doc View Source ExecuteConfiguration(IApplicationConfigurationService) Declaration public void ExecuteConfiguration(IApplicationConfigurationService service) Parameters Type Name Description IApplicationConfigurationService service Implements IExposureExpressionConfiguration IConfigurationInformationProvider"
  },
  "api/EasyRpc.AspNetCore.Configuration.DelegateConfiguration.TwoArgDelegateConfiguration-3.html": {
    "href": "api/EasyRpc.AspNetCore.Configuration.DelegateConfiguration.TwoArgDelegateConfiguration-3.html",
    "title": "Class TwoArgDelegateConfiguration<TArg1, TArg2, TResult> | EasyRpc documentation website",
    "keywords": "Class TwoArgDelegateConfiguration<TArg1, TArg2, TResult> Inheritance Object ExpressionInstanceConfiguration TwoArgDelegateConfiguration<TArg1, TArg2, TResult> Implements IExposureExpressionConfiguration IConfigurationInformationProvider Inherited Members ExpressionInstanceConfiguration.Path ExpressionInstanceConfiguration.Method ExpressionInstanceConfiguration.HasBody ExpressionInstanceConfiguration.RawContentType ExpressionInstanceConfiguration.Headers ExpressionInstanceConfiguration.Filters ExpressionInstanceConfiguration.Authorizations ExpressionInstanceConfiguration.ResponseHeaders ExpressionInstanceConfiguration.Authorize(String, String) ExpressionInstanceConfiguration.Raw(String) ExpressionInstanceConfiguration.Header(String, String) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : EasyRpc.AspNetCore.Configuration.DelegateConfiguration Assembly : EasyRpc.AspNetCore.dll Syntax public class TwoArgDelegateConfiguration<TArg1, TArg2, TResult> : ExpressionInstanceConfiguration, IExposureExpressionConfiguration, IConfigurationInformationProvider Type Parameters Name Description TArg1 TArg2 TResult Constructors | Improve this Doc View Source TwoArgDelegateConfiguration(ICurrentApiInformation, String, String, Expression<Func<TArg1, TArg2, TResult>>) Declaration public TwoArgDelegateConfiguration(ICurrentApiInformation currentApi, string method, string path, Expression<Func<TArg1, TArg2, TResult>> expression) Parameters Type Name Description ICurrentApiInformation currentApi String method String path Expression < Func <TArg1, TArg2, TResult>> expression Methods | Improve this Doc View Source ExecuteConfiguration(IApplicationConfigurationService) Declaration public void ExecuteConfiguration(IApplicationConfigurationService service) Parameters Type Name Description IApplicationConfigurationService service Implements IExposureExpressionConfiguration IConfigurationInformationProvider"
  },
  "api/EasyRpc.AspNetCore.Configuration.EnvironmentConfiguration.html": {
    "href": "api/EasyRpc.AspNetCore.Configuration.EnvironmentConfiguration.html",
    "title": "Class EnvironmentConfiguration | EasyRpc documentation website",
    "keywords": "Class EnvironmentConfiguration Inheritance Object EnvironmentConfiguration Implements IEnvironmentConfiguration Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : EasyRpc.AspNetCore.Configuration Assembly : EasyRpc.AspNetCore.dll Syntax public class EnvironmentConfiguration : IEnvironmentConfiguration Constructors | Improve this Doc View Source EnvironmentConfiguration(IConfigurationManager) Declaration public EnvironmentConfiguration(IConfigurationManager configurationManager) Parameters Type Name Description IConfigurationManager configurationManager Methods | Improve this Doc View Source Action<T>(Action<T>) Declaration public IEnvironmentConfiguration Action<T>(Action<T> valueAction) Parameters Type Name Description Action <T> valueAction Returns Type Description IEnvironmentConfiguration Type Parameters Name Description T Implements IEnvironmentConfiguration Extension Methods IEnvironmentConfigurationExtensions.BasePath(IEnvironmentConfiguration, String) IEnvironmentConfigurationExtensions.Documentation(IEnvironmentConfiguration, Action<DocumentationOptions>) IEnvironmentConfigurationExtensions.DisableDocumentation(IEnvironmentConfiguration) IEnvironmentConfigurationExtensions.Exposures(IEnvironmentConfiguration, Action<ExposeConfigurations>) IEnvironmentConfigurationExtensions.SystemTextJson(IEnvironmentConfiguration, Action<JsonSerializerOptions>) IEnvironmentConfigurationExtensions.UseAspNetRouting(IEnvironmentConfiguration) NewtonsoftExtensions.NewtonsoftJson(IEnvironmentConfiguration, Action<JsonSerializer>)"
  },
  "api/EasyRpc.AspNetCore.Configuration.ExposeConfigurations.html": {
    "href": "api/EasyRpc.AspNetCore.Configuration.ExposeConfigurations.html",
    "title": "Class ExposeConfigurations | EasyRpc documentation website",
    "keywords": "Class ExposeConfigurations Inheritance Object ExposeConfigurations Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : EasyRpc.AspNetCore.Configuration Assembly : EasyRpc.AspNetCore.dll Syntax public class ExposeConfigurations Properties | Improve this Doc View Source MethodNameGenerator Generate method name part of url for non attributed methods Declaration public Func<MethodInfo, string> MethodNameGenerator { get; set; } Property Value Type Description Func < MethodInfo , String > | Improve this Doc View Source ResolveFromContainer Delegate to pick which parameters types should be resolved from the container Declaration public Func<Type, bool> ResolveFromContainer { get; set; } Property Value Type Description Func < Type , Boolean > | Improve this Doc View Source RouteNameGenerator Route name generator for methods that haven't been attributed Declaration public Func<Type, string> RouteNameGenerator { get; set; } Property Value Type Description Func < Type , String > | Improve this Doc View Source SingleParameterPostFromBody Single parameter methods with a body map the parameter without wrapper Declaration public bool SingleParameterPostFromBody { get; set; } Property Value Type Description Boolean | Improve this Doc View Source TypeWrapSelector Delegate to configure which return types should be wrapped in an object for serialization (string, int, double, DateTime etc) Declaration public TypeWrapSelector TypeWrapSelector { get; set; } Property Value Type Description TypeWrapSelector"
  },
  "api/EasyRpc.AspNetCore.Configuration.html": {
    "href": "api/EasyRpc.AspNetCore.Configuration.html",
    "title": "Namespace EasyRpc.AspNetCore.Configuration | EasyRpc documentation website",
    "keywords": "Namespace EasyRpc.AspNetCore.Configuration Classes ApiConfigurationFactory ApplicationConfigurationService AuthorizationImplementationProvider ConfigurationManager CurrentApiInformation DefaultExposeDelegates Default configuration delegates EnvironmentConfiguration ExposeConfigurations InternalApiConfiguration Internal implementation for api configuration TypeExposureConfiguration TypeExposureConfiguration<T> TypeSetExposureConfiguration Exposes a set of types Interfaces IApiConfigurationCompleteAware IApiConfigurationFactory IApplicationConfigurationService IAuthorizationImplementationProvider IConfigurationInformationProvider IConfigurationManager ICurrentApiInformation IEndPointHandlerConfigurationProvider IInternalApiConfiguration Delegates TypeWrapSelector"
  },
  "api/EasyRpc.AspNetCore.Configuration.IApiConfigurationCompleteAware.html": {
    "href": "api/EasyRpc.AspNetCore.Configuration.IApiConfigurationCompleteAware.html",
    "title": "Interface IApiConfigurationCompleteAware | EasyRpc documentation website",
    "keywords": "Interface IApiConfigurationCompleteAware Namespace : EasyRpc.AspNetCore.Configuration Assembly : EasyRpc.AspNetCore.dll Syntax public interface IApiConfigurationCompleteAware Methods | Improve this Doc View Source ApiConfigurationComplete(IServiceProvider) Declaration void ApiConfigurationComplete(IServiceProvider serviceScope) Parameters Type Name Description IServiceProvider serviceScope"
  },
  "api/EasyRpc.AspNetCore.Configuration.IApiConfigurationFactory.html": {
    "href": "api/EasyRpc.AspNetCore.Configuration.IApiConfigurationFactory.html",
    "title": "Interface IApiConfigurationFactory | EasyRpc documentation website",
    "keywords": "Interface IApiConfigurationFactory Namespace : EasyRpc.AspNetCore.Configuration Assembly : EasyRpc.AspNetCore.dll Syntax public interface IApiConfigurationFactory Methods | Improve this Doc View Source CreateApiConfiguration(IServiceProvider) Declaration IInternalApiConfiguration CreateApiConfiguration(IServiceProvider serviceProvider) Parameters Type Name Description IServiceProvider serviceProvider Returns Type Description IInternalApiConfiguration"
  },
  "api/EasyRpc.AspNetCore.Configuration.IApplicationConfigurationService.html": {
    "href": "api/EasyRpc.AspNetCore.Configuration.IApplicationConfigurationService.html",
    "title": "Interface IApplicationConfigurationService | EasyRpc documentation website",
    "keywords": "Interface IApplicationConfigurationService Namespace : EasyRpc.AspNetCore.Configuration Assembly : EasyRpc.AspNetCore.dll Syntax public interface IApplicationConfigurationService Methods | Improve this Doc View Source AddConfigurationObject(Object) Declaration void AddConfigurationObject(object configurationObject) Parameters Type Name Description Object configurationObject | Improve this Doc View Source ExposeExpression<TResult>(ICurrentApiInformation, ExpressionInstanceConfiguration, Expression<Func<TResult>>) Declaration void ExposeExpression<TResult>(ICurrentApiInformation currentApi, ExpressionInstanceConfiguration instanceConfiguration, Expression<Func<TResult>> expression) Parameters Type Name Description ICurrentApiInformation currentApi ExpressionInstanceConfiguration instanceConfiguration Expression < Func <TResult>> expression Type Parameters Name Description TResult | Improve this Doc View Source ExposeExpression<TArg1, TResult>(ICurrentApiInformation, ExpressionInstanceConfiguration, Expression<Func<TArg1, TResult>>) Declaration void ExposeExpression<TArg1, TResult>(ICurrentApiInformation currentApi, ExpressionInstanceConfiguration instanceConfiguration, Expression<Func<TArg1, TResult>> expression) Parameters Type Name Description ICurrentApiInformation currentApi ExpressionInstanceConfiguration instanceConfiguration Expression < Func <TArg1, TResult>> expression Type Parameters Name Description TArg1 TResult | Improve this Doc View Source ExposeExpression<TArg1, TArg2, TResult>(ICurrentApiInformation, ExpressionInstanceConfiguration, Expression<Func<TArg1, TArg2, TResult>>) Declaration void ExposeExpression<TArg1, TArg2, TResult>(ICurrentApiInformation currentApi, ExpressionInstanceConfiguration instanceConfiguration, Expression<Func<TArg1, TArg2, TResult>> expression) Parameters Type Name Description ICurrentApiInformation currentApi ExpressionInstanceConfiguration instanceConfiguration Expression < Func <TArg1, TArg2, TResult>> expression Type Parameters Name Description TArg1 TArg2 TResult | Improve this Doc View Source ExposeExpression<TArg1, TArg2, TArg3, TResult>(ICurrentApiInformation, ExpressionInstanceConfiguration, Expression<Func<TArg1, TArg2, TArg3, TResult>>) Declaration void ExposeExpression<TArg1, TArg2, TArg3, TResult>(ICurrentApiInformation currentApi, ExpressionInstanceConfiguration instanceConfiguration, Expression<Func<TArg1, TArg2, TArg3, TResult>> expression) Parameters Type Name Description ICurrentApiInformation currentApi ExpressionInstanceConfiguration instanceConfiguration Expression < Func <TArg1, TArg2, TArg3, TResult>> expression Type Parameters Name Description TArg1 TArg2 TArg3 TResult | Improve this Doc View Source ExposeType(ICurrentApiInformation, Type, String, List<IEndPointMethodAuthorization>, Func<MethodInfo, Boolean>, String) Declaration void ExposeType(ICurrentApiInformation currentApi, Type type, string name, List<IEndPointMethodAuthorization> authorizations, Func<MethodInfo, bool> methodFilter, string obsoleteMessage) Parameters Type Name Description ICurrentApiInformation currentApi Type type String name List < IEndPointMethodAuthorization > authorizations Func < MethodInfo , Boolean > methodFilter String obsoleteMessage | Improve this Doc View Source ProvideEndPointHandlers() Declaration IReadOnlyList<IEndPointMethodHandler> ProvideEndPointHandlers() Returns Type Description IReadOnlyList < IEndPointMethodHandler >"
  },
  "api/EasyRpc.AspNetCore.Configuration.IAuthorizationImplementationProvider.html": {
    "href": "api/EasyRpc.AspNetCore.Configuration.IAuthorizationImplementationProvider.html",
    "title": "Interface IAuthorizationImplementationProvider | EasyRpc documentation website",
    "keywords": "Interface IAuthorizationImplementationProvider Namespace : EasyRpc.AspNetCore.Configuration Assembly : EasyRpc.AspNetCore.dll Syntax public interface IAuthorizationImplementationProvider Methods | Improve this Doc View Source Authorized() Declaration IEndPointMethodAuthorization Authorized() Returns Type Description IEndPointMethodAuthorization | Improve this Doc View Source UserHasPolicy(String) Declaration IEndPointMethodAuthorization UserHasPolicy(string policy) Parameters Type Name Description String policy Returns Type Description IEndPointMethodAuthorization | Improve this Doc View Source UserHasRole(String) Declaration IEndPointMethodAuthorization UserHasRole(string role) Parameters Type Name Description String role Returns Type Description IEndPointMethodAuthorization"
  },
  "api/EasyRpc.AspNetCore.Configuration.IConfigurationInformationProvider.html": {
    "href": "api/EasyRpc.AspNetCore.Configuration.IConfigurationInformationProvider.html",
    "title": "Interface IConfigurationInformationProvider | EasyRpc documentation website",
    "keywords": "Interface IConfigurationInformationProvider Namespace : EasyRpc.AspNetCore.Configuration Assembly : EasyRpc.AspNetCore.dll Syntax public interface IConfigurationInformationProvider Methods | Improve this Doc View Source ExecuteConfiguration(IApplicationConfigurationService) Declaration void ExecuteConfiguration(IApplicationConfigurationService service) Parameters Type Name Description IApplicationConfigurationService service"
  },
  "api/EasyRpc.AspNetCore.Configuration.IConfigurationManager.html": {
    "href": "api/EasyRpc.AspNetCore.Configuration.IConfigurationManager.html",
    "title": "Interface IConfigurationManager | EasyRpc documentation website",
    "keywords": "Interface IConfigurationManager Namespace : EasyRpc.AspNetCore.Configuration Assembly : EasyRpc.AspNetCore.dll Syntax public interface IConfigurationManager Methods | Improve this Doc View Source CreationMethod<T>(Func<T>) Declaration void CreationMethod<T>(Func<T> defaultRegistration) Parameters Type Name Description Func <T> defaultRegistration Type Parameters Name Description T | Improve this Doc View Source GetConfiguration<T>() Declaration T GetConfiguration<T>() Returns Type Description T Type Parameters Name Description T | Improve this Doc View Source RegisterConfigurationMethod<T>(Action<T>) Declaration void RegisterConfigurationMethod<T>(Action<T> configurationMethod) Parameters Type Name Description Action <T> configurationMethod Type Parameters Name Description T"
  },
  "api/EasyRpc.AspNetCore.Configuration.ICurrentApiInformation.html": {
    "href": "api/EasyRpc.AspNetCore.Configuration.ICurrentApiInformation.html",
    "title": "Interface ICurrentApiInformation | EasyRpc documentation website",
    "keywords": "Interface ICurrentApiInformation Namespace : EasyRpc.AspNetCore.Configuration Assembly : EasyRpc.AspNetCore.dll Syntax public interface ICurrentApiInformation Properties | Improve this Doc View Source Authorizations Authorizations to apply Declaration ImmutableLinkedList<Func<IEndPointMethodConfigurationReadOnly, IEnumerable<IEndPointMethodAuthorization>>> Authorizations { get; } Property Value Type Description ImmutableLinkedList < Func < IEndPointMethodConfigurationReadOnly , IEnumerable < IEndPointMethodAuthorization >>> | Improve this Doc View Source ConfigurationMethods Declaration IConfigurationManager ConfigurationMethods { get; } Property Value Type Description IConfigurationManager | Improve this Doc View Source DefaultMethod Declaration ExposeDefaultMethod DefaultMethod { get; } Property Value Type Description ExposeDefaultMethod | Improve this Doc View Source Filters Filters to apply Declaration ImmutableLinkedList<Func<IEndPointMethodConfigurationReadOnly, Func<RequestExecutionContext, IRequestFilter>>> Filters { get; } Property Value Type Description ImmutableLinkedList < Func < IEndPointMethodConfigurationReadOnly , Func < RequestExecutionContext , IRequestFilter >>> | Improve this Doc View Source Headers List of response headers to apply Declaration ImmutableLinkedList<IResponseHeader> Headers { get; } Property Value Type Description ImmutableLinkedList < IResponseHeader > | Improve this Doc View Source MethodFilters List of method filters Declaration ImmutableLinkedList<Func<MethodInfo, bool>> MethodFilters { get; } Property Value Type Description ImmutableLinkedList < Func < MethodInfo , Boolean >> | Improve this Doc View Source Prefixes Prefixes to apply Declaration ImmutableLinkedList<Func<Type, IEnumerable<string>>> Prefixes { get; } Property Value Type Description ImmutableLinkedList < Func < Type , IEnumerable < String >>> | Improve this Doc View Source ServiceActivationMethod Default way to activate services Declaration ServiceActivationMethod ServiceActivationMethod { get; } Property Value Type Description ServiceActivationMethod | Improve this Doc View Source ServiceProvider Declaration IServiceProvider ServiceProvider { get; } Property Value Type Description IServiceProvider | Improve this Doc View Source SupportResponseCompression Declaration bool SupportResponseCompression { get; } Property Value Type Description Boolean"
  },
  "api/EasyRpc.AspNetCore.Configuration.IEndPointHandlerConfigurationProvider.html": {
    "href": "api/EasyRpc.AspNetCore.Configuration.IEndPointHandlerConfigurationProvider.html",
    "title": "Interface IEndPointHandlerConfigurationProvider | EasyRpc documentation website",
    "keywords": "Interface IEndPointHandlerConfigurationProvider Namespace : EasyRpc.AspNetCore.Configuration Assembly : EasyRpc.AspNetCore.dll Syntax public interface IEndPointHandlerConfigurationProvider Methods | Improve this Doc View Source GetEndPointHandlers() Declaration IReadOnlyList<IEndPointMethodHandler> GetEndPointHandlers() Returns Type Description IReadOnlyList < IEndPointMethodHandler >"
  },
  "api/EasyRpc.AspNetCore.Configuration.IInternalApiConfiguration.html": {
    "href": "api/EasyRpc.AspNetCore.Configuration.IInternalApiConfiguration.html",
    "title": "Interface IInternalApiConfiguration | EasyRpc documentation website",
    "keywords": "Interface IInternalApiConfiguration Inherited Members IApiConfiguration.Authorize(String, String) IApiConfiguration.Authorize(Func<IEndPointMethodConfigurationReadOnly, IEnumerable<IEndPointMethodAuthorization>>) IApiConfiguration.ClearAuthorize() IApiConfiguration.Configure IApiConfiguration.Prefix(String) IApiConfiguration.Prefix(Func<Type, IEnumerable<String>>) IApiConfiguration.ClearPrefixes() IApiConfiguration.Expose(Type) IApiConfiguration.Expose<T>() IApiConfiguration.Expose(IEnumerable<Type>) IApiConfiguration.Header(String, String) IApiConfiguration.ClearHeaders() IApiConfiguration.ApplyFilter<T>(Func<MethodInfo, Boolean>, Boolean) IApiConfiguration.ApplyFilter(Func<IEndPointMethodConfigurationReadOnly, Func<RequestExecutionContext, IRequestFilter>>) IApiConfiguration.MethodFilter(Func<MethodInfo, Boolean>) IApiConfiguration.ClearMethodFilters() IApiConfiguration.AppServices IApiConfiguration.DefaultHttpMethod(ExposeDefaultMethod) IApiConfiguration.GetMethod<TResult>(String, Expression<Func<TResult>>) IApiConfiguration.GetMethod<TArg1, TResult>(String, Expression<Func<TArg1, TResult>>) IApiConfiguration.GetMethod<TArg1, TArg2, TResult>(String, Expression<Func<TArg1, TArg2, TResult>>) IApiConfiguration.GetMethod<TArg1, TArg2, TArg3, TResult>(String, Expression<Func<TArg1, TArg2, TArg3, TResult>>) IApiConfiguration.PostMethod<TArg1, TResult>(String, Expression<Func<TArg1, TResult>>) IApiConfiguration.PostMethod<TArg1, TArg2, TResult>(String, Expression<Func<TArg1, TArg2, TResult>>) IApiConfiguration.PostMethod<TArg1, TArg2, TArg3, TResult>(String, Expression<Func<TArg1, TArg2, TArg3, TResult>>) IApiConfiguration.HttpMethod<TResult>(String, String, Expression<Func<TResult>>) IApiConfiguration.HttpMethod<TArg1, TResult>(String, String, Expression<Func<TArg1, TResult>>) IApiConfiguration.HttpMethod<TArg1, TArg2, TResult>(String, String, Expression<Func<TArg1, TArg2, TResult>>) IApiConfiguration.HttpMethod<TArg1, TArg2, TArg3, TResult>(String, String, Expression<Func<TArg1, TArg2, TArg3, TResult>>) IEndPointHandlerConfigurationProvider.GetEndPointHandlers() Namespace : EasyRpc.AspNetCore.Configuration Assembly : EasyRpc.AspNetCore.dll Syntax public interface IInternalApiConfiguration : IApiConfiguration, IEndPointHandlerConfigurationProvider Methods | Improve this Doc View Source GetCurrentApiInformation() Declaration ICurrentApiInformation GetCurrentApiInformation() Returns Type Description ICurrentApiInformation Extension Methods ApiConfigurationExtensions.ApplyFluentValidation(IApiConfiguration) IApiConfigurationExtensions.ExposeNamespaceContaining<T>(IApiConfiguration)"
  },
  "api/EasyRpc.AspNetCore.Configuration.InternalApiConfiguration.html": {
    "href": "api/EasyRpc.AspNetCore.Configuration.InternalApiConfiguration.html",
    "title": "Class InternalApiConfiguration | EasyRpc documentation website",
    "keywords": "Class InternalApiConfiguration Internal implementation for api configuration Inheritance Object InternalApiConfiguration Implements IInternalApiConfiguration IApiConfiguration IEndPointHandlerConfigurationProvider Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : EasyRpc.AspNetCore.Configuration Assembly : EasyRpc.AspNetCore.dll Syntax public class InternalApiConfiguration : IInternalApiConfiguration, IApiConfiguration, IEndPointHandlerConfigurationProvider Constructors | Improve this Doc View Source InternalApiConfiguration(IServiceProvider, IAuthorizationImplementationProvider) Default constructor Declaration public InternalApiConfiguration(IServiceProvider applicationServiceProvider, IAuthorizationImplementationProvider authorizationImplementationProvider) Parameters Type Name Description IServiceProvider applicationServiceProvider IAuthorizationImplementationProvider authorizationImplementationProvider Properties | Improve this Doc View Source AppServices Application services Declaration public IServiceProvider AppServices { get; } Property Value Type Description IServiceProvider | Improve this Doc View Source Configure Configuration options that apply for all end points Declaration public IEnvironmentConfiguration Configure { get; } Property Value Type Description IEnvironmentConfiguration Methods | Improve this Doc View Source ApplyFilter(Func<IEndPointMethodConfigurationReadOnly, Func<RequestExecutionContext, IRequestFilter>>) Declaration public IApiConfiguration ApplyFilter(Func<IEndPointMethodConfigurationReadOnly, Func<RequestExecutionContext, IRequestFilter>> filterFunc) Parameters Type Name Description Func < IEndPointMethodConfigurationReadOnly , Func < RequestExecutionContext , IRequestFilter >> filterFunc Returns Type Description IApiConfiguration | Improve this Doc View Source ApplyFilter<T>(Func<MethodInfo, Boolean>, Boolean) Apply call filter Declaration public IApiConfiguration ApplyFilter<T>(Func<MethodInfo, bool> where = null, bool shared = false) where T : IRequestFilter Parameters Type Name Description Func < MethodInfo , Boolean > where Boolean shared Returns Type Description IApiConfiguration Type Parameters Name Description T | Improve this Doc View Source Authorize(Func<IEndPointMethodConfigurationReadOnly, IEnumerable<IEndPointMethodAuthorization>>) Apply authorize to types Declaration public IApiConfiguration Authorize(Func<IEndPointMethodConfigurationReadOnly, IEnumerable<IEndPointMethodAuthorization>> authorizations) Parameters Type Name Description Func < IEndPointMethodConfigurationReadOnly , IEnumerable < IEndPointMethodAuthorization >> authorizations Returns Type Description IApiConfiguration | Improve this Doc View Source Authorize(String, String) Set default Authorize Declaration public IApiConfiguration Authorize(string role = null, string policy = null) Parameters Type Name Description String role String policy Returns Type Description IApiConfiguration | Improve this Doc View Source ClearAuthorize() Clear authorize flags Declaration public IApiConfiguration ClearAuthorize() Returns Type Description IApiConfiguration | Improve this Doc View Source ClearCurrentApi() Gets a static copy of the current api information Declaration protected void ClearCurrentApi() | Improve this Doc View Source ClearHeaders() Clear all global headers Declaration public IApiConfiguration ClearHeaders() Returns Type Description IApiConfiguration | Improve this Doc View Source ClearMethodFilters() Clear method filters Declaration public IApiConfiguration ClearMethodFilters() Returns Type Description IApiConfiguration | Improve this Doc View Source ClearPrefixes() Clear prefixes Declaration public IApiConfiguration ClearPrefixes() Returns Type Description IApiConfiguration | Improve this Doc View Source DefaultHttpMethod(ExposeDefaultMethod) Set the default http method to be used when exposing method Declaration public IApiConfiguration DefaultHttpMethod(ExposeDefaultMethod defaultMethod) Parameters Type Name Description ExposeDefaultMethod defaultMethod Returns Type Description IApiConfiguration | Improve this Doc View Source Expose(IEnumerable<Type>) Expose a set of types Declaration public ITypeSetExposureConfiguration Expose(IEnumerable<Type> types) Parameters Type Name Description IEnumerable < Type > types Returns Type Description ITypeSetExposureConfiguration | Improve this Doc View Source Expose(Type) Expose type for RPC Declaration public IExposureConfiguration Expose(Type type) Parameters Type Name Description Type type Returns Type Description IExposureConfiguration | Improve this Doc View Source Expose<T>() Expose type for RPC Declaration public IExposureConfiguration<T> Expose<T>() Returns Type Description IExposureConfiguration <T> Type Parameters Name Description T | Improve this Doc View Source GetCurrentApiInformation() Declaration public ICurrentApiInformation GetCurrentApiInformation() Returns Type Description ICurrentApiInformation | Improve this Doc View Source GetEndPointHandlers() Declaration public IReadOnlyList<IEndPointMethodHandler> GetEndPointHandlers() Returns Type Description IReadOnlyList < IEndPointMethodHandler > | Improve this Doc View Source GetMethod<TResult>(String, Expression<Func<TResult>>) Declaration public IExposureExpressionConfiguration GetMethod<TResult>(string path, Expression<Func<TResult>> getExpression) Parameters Type Name Description String path Expression < Func <TResult>> getExpression Returns Type Description IExposureExpressionConfiguration Type Parameters Name Description TResult | Improve this Doc View Source GetMethod<TArg1, TResult>(String, Expression<Func<TArg1, TResult>>) Declaration public IExposureExpressionConfiguration GetMethod<TArg1, TResult>(string path, Expression<Func<TArg1, TResult>> getExpression) Parameters Type Name Description String path Expression < Func <TArg1, TResult>> getExpression Returns Type Description IExposureExpressionConfiguration Type Parameters Name Description TArg1 TResult | Improve this Doc View Source GetMethod<TArg1, TArg2, TResult>(String, Expression<Func<TArg1, TArg2, TResult>>) Declaration public IExposureExpressionConfiguration GetMethod<TArg1, TArg2, TResult>(string path, Expression<Func<TArg1, TArg2, TResult>> getExpression) Parameters Type Name Description String path Expression < Func <TArg1, TArg2, TResult>> getExpression Returns Type Description IExposureExpressionConfiguration Type Parameters Name Description TArg1 TArg2 TResult | Improve this Doc View Source GetMethod<TArg1, TArg2, TArg3, TResult>(String, Expression<Func<TArg1, TArg2, TArg3, TResult>>) Declaration public IExposureExpressionConfiguration GetMethod<TArg1, TArg2, TArg3, TResult>(string path, Expression<Func<TArg1, TArg2, TArg3, TResult>> getExpression) Parameters Type Name Description String path Expression < Func <TArg1, TArg2, TArg3, TResult>> getExpression Returns Type Description IExposureExpressionConfiguration Type Parameters Name Description TArg1 TArg2 TArg3 TResult | Improve this Doc View Source Header(String, String) Add header to all responses Declaration public IApiConfiguration Header(string header, string value) Parameters Type Name Description String header String value Returns Type Description IApiConfiguration | Improve this Doc View Source HttpMethod<TResult>(String, String, Expression<Func<TResult>>) Declaration public IExposureExpressionConfiguration HttpMethod<TResult>(string httpMethod, string path, Expression<Func<TResult>> method) Parameters Type Name Description String httpMethod String path Expression < Func <TResult>> method Returns Type Description IExposureExpressionConfiguration Type Parameters Name Description TResult | Improve this Doc View Source HttpMethod<TArg1, TResult>(String, String, Expression<Func<TArg1, TResult>>) Declaration public IExposureExpressionConfiguration HttpMethod<TArg1, TResult>(string httpMethod, string path, Expression<Func<TArg1, TResult>> method) Parameters Type Name Description String httpMethod String path Expression < Func <TArg1, TResult>> method Returns Type Description IExposureExpressionConfiguration Type Parameters Name Description TArg1 TResult | Improve this Doc View Source HttpMethod<TArg1, TArg2, TResult>(String, String, Expression<Func<TArg1, TArg2, TResult>>) Declaration public IExposureExpressionConfiguration HttpMethod<TArg1, TArg2, TResult>(string httpMethod, string path, Expression<Func<TArg1, TArg2, TResult>> method) Parameters Type Name Description String httpMethod String path Expression < Func <TArg1, TArg2, TResult>> method Returns Type Description IExposureExpressionConfiguration Type Parameters Name Description TArg1 TArg2 TResult | Improve this Doc View Source HttpMethod<TArg1, TArg2, TArg3, TResult>(String, String, Expression<Func<TArg1, TArg2, TArg3, TResult>>) Declaration public IExposureExpressionConfiguration HttpMethod<TArg1, TArg2, TArg3, TResult>(string httpMethod, string path, Expression<Func<TArg1, TArg2, TArg3, TResult>> method) Parameters Type Name Description String httpMethod String path Expression < Func <TArg1, TArg2, TArg3, TResult>> method Returns Type Description IExposureExpressionConfiguration Type Parameters Name Description TArg1 TArg2 TArg3 TResult | Improve this Doc View Source MethodFilter(Func<MethodInfo, Boolean>) Add method filter Declaration public IApiConfiguration MethodFilter(Func<MethodInfo, bool> methodFilter) Parameters Type Name Description Func < MethodInfo , Boolean > methodFilter Returns Type Description IApiConfiguration | Improve this Doc View Source PostMethod<TArg1, TResult>(String, Expression<Func<TArg1, TResult>>) Declaration public IExposureExpressionConfiguration PostMethod<TArg1, TResult>(string path, Expression<Func<TArg1, TResult>> postExpression) Parameters Type Name Description String path Expression < Func <TArg1, TResult>> postExpression Returns Type Description IExposureExpressionConfiguration Type Parameters Name Description TArg1 TResult | Improve this Doc View Source PostMethod<TArg1, TArg2, TResult>(String, Expression<Func<TArg1, TArg2, TResult>>) Declaration public IExposureExpressionConfiguration PostMethod<TArg1, TArg2, TResult>(string path, Expression<Func<TArg1, TArg2, TResult>> postExpression) Parameters Type Name Description String path Expression < Func <TArg1, TArg2, TResult>> postExpression Returns Type Description IExposureExpressionConfiguration Type Parameters Name Description TArg1 TArg2 TResult | Improve this Doc View Source PostMethod<TArg1, TArg2, TArg3, TResult>(String, Expression<Func<TArg1, TArg2, TArg3, TResult>>) Declaration public IExposureExpressionConfiguration PostMethod<TArg1, TArg2, TArg3, TResult>(string path, Expression<Func<TArg1, TArg2, TArg3, TResult>> postExpression) Parameters Type Name Description String path Expression < Func <TArg1, TArg2, TArg3, TResult>> postExpression Returns Type Description IExposureExpressionConfiguration Type Parameters Name Description TArg1 TArg2 TArg3 TResult | Improve this Doc View Source Prefix(Func<Type, IEnumerable<String>>) Prefix function returns list of prefixes based on type Declaration public IApiConfiguration Prefix(Func<Type, IEnumerable<string>> prefixFunc) Parameters Type Name Description Func < Type , IEnumerable < String >> prefixFunc Returns Type Description IApiConfiguration | Improve this Doc View Source Prefix(String) Apply prefix Declaration public IApiConfiguration Prefix(string prefix) Parameters Type Name Description String prefix Returns Type Description IApiConfiguration Implements IInternalApiConfiguration IApiConfiguration IEndPointHandlerConfigurationProvider Extension Methods ApiConfigurationExtensions.ApplyFluentValidation(IApiConfiguration) IApiConfigurationExtensions.ExposeNamespaceContaining<T>(IApiConfiguration)"
  },
  "api/EasyRpc.AspNetCore.Configuration.TypeExposureConfiguration.html": {
    "href": "api/EasyRpc.AspNetCore.Configuration.TypeExposureConfiguration.html",
    "title": "Class TypeExposureConfiguration | EasyRpc documentation website",
    "keywords": "Class TypeExposureConfiguration Inheritance Object TypeExposureConfiguration Implements IExposureConfiguration IConfigurationInformationProvider Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : EasyRpc.AspNetCore.Configuration Assembly : EasyRpc.AspNetCore.dll Syntax public class TypeExposureConfiguration : IExposureConfiguration, IConfigurationInformationProvider Constructors | Improve this Doc View Source TypeExposureConfiguration(ICurrentApiInformation, Type) Declaration public TypeExposureConfiguration(ICurrentApiInformation currentApiInformation, Type exposeType) Parameters Type Name Description ICurrentApiInformation currentApiInformation Type exposeType Methods | Improve this Doc View Source As(String) Declaration public IExposureConfiguration As(string name) Parameters Type Name Description String name Returns Type Description IExposureConfiguration | Improve this Doc View Source Authorize(String, String) Declaration public IExposureConfiguration Authorize(string role = null, string policy = null) Parameters Type Name Description String role String policy Returns Type Description IExposureConfiguration | Improve this Doc View Source ExecuteConfiguration(IApplicationConfigurationService) Declaration public void ExecuteConfiguration(IApplicationConfigurationService service) Parameters Type Name Description IApplicationConfigurationService service | Improve this Doc View Source Methods(Func<MethodInfo, Boolean>) Declaration public IExposureConfiguration Methods(Func<MethodInfo, bool> methods) Parameters Type Name Description Func < MethodInfo , Boolean > methods Returns Type Description IExposureConfiguration | Improve this Doc View Source Obsolete(String) Declaration public IExposureConfiguration Obsolete(string message) Parameters Type Name Description String message Returns Type Description IExposureConfiguration Implements IExposureConfiguration IConfigurationInformationProvider"
  },
  "api/EasyRpc.AspNetCore.Configuration.TypeExposureConfiguration-1.html": {
    "href": "api/EasyRpc.AspNetCore.Configuration.TypeExposureConfiguration-1.html",
    "title": "Class TypeExposureConfiguration<T> | EasyRpc documentation website",
    "keywords": "Class TypeExposureConfiguration<T> Inheritance Object TypeExposureConfiguration<T> Implements IExposureConfiguration <T> IConfigurationInformationProvider Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : EasyRpc.AspNetCore.Configuration Assembly : EasyRpc.AspNetCore.dll Syntax public class TypeExposureConfiguration<T> : IExposureConfiguration<T>, IConfigurationInformationProvider Type Parameters Name Description T Constructors | Improve this Doc View Source TypeExposureConfiguration(ICurrentApiInformation) Declaration public TypeExposureConfiguration(ICurrentApiInformation currentApiInformation) Parameters Type Name Description ICurrentApiInformation currentApiInformation Methods | Improve this Doc View Source As(String) Declaration public IExposureConfiguration<T> As(string name) Parameters Type Name Description String name Returns Type Description IExposureConfiguration <T> | Improve this Doc View Source Authorize(String, String) Declaration public IExposureConfiguration<T> Authorize(string role = null, string policy = null) Parameters Type Name Description String role String policy Returns Type Description IExposureConfiguration <T> | Improve this Doc View Source ExecuteConfiguration(IApplicationConfigurationService) Declaration public void ExecuteConfiguration(IApplicationConfigurationService service) Parameters Type Name Description IApplicationConfigurationService service | Improve this Doc View Source Methods(Func<MethodInfo, Boolean>) Declaration public IExposureConfiguration<T> Methods(Func<MethodInfo, bool> methods) Parameters Type Name Description Func < MethodInfo , Boolean > methods Returns Type Description IExposureConfiguration <T> | Improve this Doc View Source Obsolete(String) Declaration public IExposureConfiguration<T> Obsolete(string message) Parameters Type Name Description String message Returns Type Description IExposureConfiguration <T> Implements IExposureConfiguration<T> IConfigurationInformationProvider"
  },
  "api/EasyRpc.AspNetCore.Configuration.TypeSetExposureConfiguration.html": {
    "href": "api/EasyRpc.AspNetCore.Configuration.TypeSetExposureConfiguration.html",
    "title": "Class TypeSetExposureConfiguration | EasyRpc documentation website",
    "keywords": "Class TypeSetExposureConfiguration Exposes a set of types Inheritance Object TypeSetExposureConfiguration Implements ITypeSetExposureConfiguration IConfigurationInformationProvider Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : EasyRpc.AspNetCore.Configuration Assembly : EasyRpc.AspNetCore.dll Syntax public class TypeSetExposureConfiguration : ITypeSetExposureConfiguration, IConfigurationInformationProvider Constructors | Improve this Doc View Source TypeSetExposureConfiguration(ICurrentApiInformation, IEnumerable<Type>) Default constructor Declaration public TypeSetExposureConfiguration(ICurrentApiInformation currentApiInformation, IEnumerable<Type> types) Parameters Type Name Description ICurrentApiInformation currentApiInformation IEnumerable < Type > types Fields | Improve this Doc View Source AsFuncs Declaration protected ImmutableLinkedList<Func<Type, IEnumerable<string>>> AsFuncs Field Value Type Description ImmutableLinkedList < Func < Type , IEnumerable < String >>> | Improve this Doc View Source AuthorizeFuncs Declaration protected ImmutableLinkedList<Func<Type, IEnumerable<IEndPointMethodAuthorization>>> AuthorizeFuncs Field Value Type Description ImmutableLinkedList < Func < Type , IEnumerable < IEndPointMethodAuthorization >>> | Improve this Doc View Source MethodFilterGroup Declaration protected GenericFilterGroup<MethodInfo> MethodFilterGroup Field Value Type Description GenericFilterGroup < MethodInfo > | Improve this Doc View Source OnlyAttributedFlag Declaration protected bool OnlyAttributedFlag Field Value Type Description Boolean | Improve this Doc View Source Types Declaration protected IEnumerable<Type> Types Field Value Type Description IEnumerable < Type > | Improve this Doc View Source WhereFilters Declaration protected GenericFilterGroup<Type> WhereFilters Field Value Type Description GenericFilterGroup < Type > Methods | Improve this Doc View Source As(Func<Type, IEnumerable<String>>) Function for picking name Declaration public ITypeSetExposureConfiguration As(Func<Type, IEnumerable<string>> nameFunc) Parameters Type Name Description Func < Type , IEnumerable < String >> nameFunc Returns Type Description ITypeSetExposureConfiguration | Improve this Doc View Source Authorize(Func<Type, IEnumerable<IEndPointMethodAuthorization>>) Use func for providing authorization Declaration public ITypeSetExposureConfiguration Authorize(Func<Type, IEnumerable<IEndPointMethodAuthorization>> authorizationFunc) Parameters Type Name Description Func < Type , IEnumerable < IEndPointMethodAuthorization >> authorizationFunc Returns Type Description ITypeSetExposureConfiguration | Improve this Doc View Source Authorize(String, String) Authorize exposures Declaration public ITypeSetExposureConfiguration Authorize(string role = null, string policy = null) Parameters Type Name Description String role String policy Returns Type Description ITypeSetExposureConfiguration | Improve this Doc View Source ExecuteConfiguration(IApplicationConfigurationService) Declaration public void ExecuteConfiguration(IApplicationConfigurationService service) Parameters Type Name Description IApplicationConfigurationService service | Improve this Doc View Source Interfaces(Func<Type, Boolean>) Expose interfaces from type set Declaration public ITypeSetExposureConfiguration Interfaces(Func<Type, bool> filter = null) Parameters Type Name Description Func < Type , Boolean > filter Returns Type Description ITypeSetExposureConfiguration | Improve this Doc View Source Methods(Func<MethodInfo, Boolean>) Filter methods Declaration public ITypeSetExposureConfiguration Methods(Func<MethodInfo, bool> methodFilter) Parameters Type Name Description Func < MethodInfo , Boolean > methodFilter Returns Type Description ITypeSetExposureConfiguration | Improve this Doc View Source OnlyAttributed() Only export attributed types Declaration public ITypeSetExposureConfiguration OnlyAttributed() Returns Type Description ITypeSetExposureConfiguration | Improve this Doc View Source Where(Func<Type, Boolean>) Expose types that match filter Declaration public ITypeSetExposureConfiguration Where(Func<Type, bool> filter) Parameters Type Name Description Func < Type , Boolean > filter Returns Type Description ITypeSetExposureConfiguration Implements ITypeSetExposureConfiguration IConfigurationInformationProvider"
  },
  "api/EasyRpc.AspNetCore.Configuration.TypeWrapSelector.html": {
    "href": "api/EasyRpc.AspNetCore.Configuration.TypeWrapSelector.html",
    "title": "Delegate TypeWrapSelector | EasyRpc documentation website",
    "keywords": "Delegate TypeWrapSelector Namespace : EasyRpc.AspNetCore.Configuration Assembly : EasyRpc.AspNetCore.dll Syntax public delegate bool TypeWrapSelector(Type typeToWrap); Parameters Type Name Description Type typeToWrap Returns Type Description Boolean"
  },
  "api/EasyRpc.AspNetCore.ContentEncoding.CompressionSelectorService.html": {
    "href": "api/EasyRpc.AspNetCore.ContentEncoding.CompressionSelectorService.html",
    "title": "Class CompressionSelectorService | EasyRpc documentation website",
    "keywords": "Class CompressionSelectorService Inheritance Object CompressionSelectorService Implements ICompressionSelectorService Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : EasyRpc.AspNetCore.ContentEncoding Assembly : EasyRpc.AspNetCore.dll Syntax public class CompressionSelectorService : ICompressionSelectorService Methods | Improve this Doc View Source ShouldCompressResult(MethodInfo) Declaration public bool ShouldCompressResult(MethodInfo method) Parameters Type Name Description MethodInfo method Returns Type Description Boolean Implements ICompressionSelectorService"
  },
  "api/EasyRpc.AspNetCore.ContentEncoding.html": {
    "href": "api/EasyRpc.AspNetCore.ContentEncoding.html",
    "title": "Namespace EasyRpc.AspNetCore.ContentEncoding | EasyRpc documentation website",
    "keywords": "Namespace EasyRpc.AspNetCore.ContentEncoding Classes CompressionSelectorService Interfaces ICompressionSelectorService"
  },
  "api/EasyRpc.AspNetCore.ContentEncoding.ICompressionSelectorService.html": {
    "href": "api/EasyRpc.AspNetCore.ContentEncoding.ICompressionSelectorService.html",
    "title": "Interface ICompressionSelectorService | EasyRpc documentation website",
    "keywords": "Interface ICompressionSelectorService Namespace : EasyRpc.AspNetCore.ContentEncoding Assembly : EasyRpc.AspNetCore.dll Syntax public interface ICompressionSelectorService Methods | Improve this Doc View Source ShouldCompressResult(MethodInfo) Declaration bool ShouldCompressResult(MethodInfo method) Parameters Type Name Description MethodInfo method Returns Type Description Boolean"
  },
  "api/EasyRpc.AspNetCore.Data.html": {
    "href": "api/EasyRpc.AspNetCore.Data.html",
    "title": "Namespace EasyRpc.AspNetCore.Data | EasyRpc documentation website",
    "keywords": "Namespace EasyRpc.AspNetCore.Data Classes ImmutableArray Immutable array create methods ImmutableHashTree Static helper class for immutable hash tree ImmutableHashTree<TKey, TValue> Immutable HashTree implementation http://en.wikipedia.org/wiki/AVL_tree ImmutableLinkedList Static helper class for linked list ImmutableLinkedList<T> Immutable linked list class ObjectPool<T> Lock-less object pool Structs ImmutableArray<T> Immutable List that implements IReadOnlyList(T) Interfaces ObjectPool<T>.IPoolObjectInstance Delegates ImmutableHashTree<TKey, TValue>.UpdateDelegate Update delegate defines behavior when key already exists"
  },
  "api/EasyRpc.AspNetCore.Data.ImmutableArray.html": {
    "href": "api/EasyRpc.AspNetCore.Data.ImmutableArray.html",
    "title": "Class ImmutableArray | EasyRpc documentation website",
    "keywords": "Class ImmutableArray Immutable array create methods Inheritance Object ImmutableArray Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : EasyRpc.AspNetCore.Data Assembly : EasyRpc.AspNetCore.dll Syntax public static class ImmutableArray Methods | Improve this Doc View Source Create<T>(T[]) Create an array Declaration public static ImmutableArray<T> Create<T>(params T[] array) Parameters Type Name Description T[] array Returns Type Description ImmutableArray <T> Type Parameters Name Description T | Improve this Doc View Source From<T>(T[], Int32) Create a new immutable array from an T[] Declaration public static ImmutableArray<T> From<T>(T[] ts, int count = -1) Parameters Type Name Description T[] ts Int32 count Returns Type Description ImmutableArray <T> Type Parameters Name Description T | Improve this Doc View Source From<T>(IEnumerable<T>) Creates a new immutable list from an IEnumerable(T) Declaration public static ImmutableArray<T> From<T>(IEnumerable<T> list) Parameters Type Name Description IEnumerable <T> list list of T Returns Type Description ImmutableArray <T> immutable array Type Parameters Name Description T item type"
  },
  "api/EasyRpc.AspNetCore.Data.ImmutableArray-1.html": {
    "href": "api/EasyRpc.AspNetCore.Data.ImmutableArray-1.html",
    "title": "Struct ImmutableArray<T> | EasyRpc documentation website",
    "keywords": "Struct ImmutableArray<T> Immutable List that implements IReadOnlyList(T) Implements IReadOnlyList <T> IReadOnlyCollection <T> IEnumerable <T> IEnumerable IEqualityComparer < ImmutableArray <T>> IStructuralComparable IStructuralEquatable Inherited Members ValueType.ToString() Object.Equals(Object, Object) Object.GetType() Object.ReferenceEquals(Object, Object) Namespace : EasyRpc.AspNetCore.Data Assembly : EasyRpc.AspNetCore.dll Syntax public struct ImmutableArray<T> : IReadOnlyList<T>, IReadOnlyCollection<T>, IEnumerable<T>, IEnumerable, IEqualityComparer<ImmutableArray<T>>, IStructuralComparable, IStructuralEquatable Type Parameters Name Description T Fields | Improve this Doc View Source Empty Empty list Declaration public static readonly ImmutableArray<T> Empty Field Value Type Description ImmutableArray <T> Properties | Improve this Doc View Source Count Length of the array Declaration public int Count { get; } Property Value Type Description Int32 | Improve this Doc View Source IsReadOnly Immutable list is always read only Declaration public bool IsReadOnly { get; } Property Value Type Description Boolean | Improve this Doc View Source Item[Int32] Index into list Declaration public T this[int index] { get; } Parameters Type Name Description Int32 index index for list Property Value Type Description T T at index | Improve this Doc View Source Length Length of the array Declaration public int Length { get; } Property Value Type Description Int32 Methods | Improve this Doc View Source Add(T) Add T to ImmutableList creating new list Declaration public ImmutableArray<T> Add(T value) Parameters Type Name Description T value new T Returns Type Description ImmutableArray <T> new list | Improve this Doc View Source AddRange(T[]) Adds a range of T to immutable list creating a new one Declaration public ImmutableArray<T> AddRange(params T[] value) Parameters Type Name Description T[] value Returns Type Description ImmutableArray <T> | Improve this Doc View Source AddRange(IEnumerable<T>) Add and IEnumerable to this list Declaration public ImmutableArray<T> AddRange(IEnumerable<T> enumerable) Parameters Type Name Description IEnumerable <T> enumerable Returns Type Description ImmutableArray <T> | Improve this Doc View Source Contains(T) Contains specified value Declaration public bool Contains(T item) Parameters Type Name Description T item Returns Type Description Boolean | Improve this Doc View Source CopyTo(T[], Int32) Copy to array Declaration public void CopyTo(T[] array, int arrayIndex) Parameters Type Name Description T[] array Int32 arrayIndex | Improve this Doc View Source Equals(ImmutableArray<T>, ImmutableArray<T>) Determines whether the specified objects are equal. Declaration public bool Equals(ImmutableArray<T> x, ImmutableArray<T> y) Parameters Type Name Description ImmutableArray <T> x The first object of type T to compare. ImmutableArray <T> y The second object of type T to compare. Returns Type Description Boolean true if the specified objects are equal; otherwise, false. | Improve this Doc View Source Equals(Object) Equals override Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj Returns Type Description Boolean Overrides ValueType.Equals(Object) | Improve this Doc View Source GetEnumerator() Get an enumerator for this list Declaration public IEnumerator<T> GetEnumerator() Returns Type Description IEnumerator <T> enumerator | Improve this Doc View Source GetHashCode() Get hashcode of array Declaration public override int GetHashCode() Returns Type Description Int32 Overrides ValueType.GetHashCode() | Improve this Doc View Source GetHashCode(ImmutableArray<T>) Returns a hash code for the specified object. Declaration public int GetHashCode(ImmutableArray<T> obj) Parameters Type Name Description ImmutableArray <T> obj The Object for which a hash code is to be returned. Returns Type Description Int32 A hash code for the specified object. Exceptions Type Condition ArgumentNullException The type of obj is a reference type and obj is null. | Improve this Doc View Source IndexOf(T) Index of item Declaration public int IndexOf(T item) Parameters Type Name Description T item Returns Type Description Int32 | Improve this Doc View Source Insert(Int32, T) Insert value into array Declaration public ImmutableArray<T> Insert(int index, T value) Parameters Type Name Description Int32 index T value Returns Type Description ImmutableArray <T> Operators | Improve this Doc View Source Equality(ImmutableArray<T>, ImmutableArray<T>) Equals override Declaration public static bool operator ==(ImmutableArray<T> left, ImmutableArray<T> right) Parameters Type Name Description ImmutableArray <T> left left side of statement ImmutableArray <T> right right side of statement Returns Type Description Boolean true if euqal | Improve this Doc View Source Equality(Nullable<ImmutableArray<T>>, Nullable<ImmutableArray<T>>) Equal override for nullable Declaration public static bool operator ==(ImmutableArray<T>? left, ImmutableArray<T>? right) Parameters Type Name Description Nullable < ImmutableArray <T>> left Nullable < ImmutableArray <T>> right Returns Type Description Boolean | Improve this Doc View Source Explicit(T[] to ImmutableArray<T>) Implicit conversion from List(T) Declaration public static explicit operator ImmutableArray<T>(T[] list) Parameters Type Name Description T[] list Returns Type Description ImmutableArray <T> | Improve this Doc View Source Explicit(ImmutableArray<T> to T[]) Implicit conversion to List(T) Declaration public static explicit operator T[](ImmutableArray<T> list) Parameters Type Name Description ImmutableArray <T> list Returns Type Description T[] | Improve this Doc View Source Inequality(ImmutableArray<T>, ImmutableArray<T>) Not equal override Declaration public static bool operator !=(ImmutableArray<T> left, ImmutableArray<T> right) Parameters Type Name Description ImmutableArray <T> left ImmutableArray <T> right Returns Type Description Boolean | Improve this Doc View Source Inequality(Nullable<ImmutableArray<T>>, Nullable<ImmutableArray<T>>) Not equal override for nullable Declaration public static bool operator !=(ImmutableArray<T>? left, ImmutableArray<T>? right) Parameters Type Name Description Nullable < ImmutableArray <T>> left Nullable < ImmutableArray <T>> right Returns Type Description Boolean Explicit Interface Implementations | Improve this Doc View Source IEnumerable.GetEnumerator() Get an enumerator for this list Declaration IEnumerator IEnumerable.GetEnumerator() Returns Type Description IEnumerator enumerator | Improve this Doc View Source IStructuralComparable.CompareTo(Object, IComparer) Compare arrays Declaration int IStructuralComparable.CompareTo(object other, IComparer comparer) Parameters Type Name Description Object other IComparer comparer Returns Type Description Int32 | Improve this Doc View Source IStructuralEquatable.Equals(Object, IEqualityComparer) Declaration bool IStructuralEquatable.Equals(object other, IEqualityComparer comparer) Parameters Type Name Description Object other IEqualityComparer comparer Returns Type Description Boolean | Improve this Doc View Source IStructuralEquatable.GetHashCode(IEqualityComparer) Declaration int IStructuralEquatable.GetHashCode(IEqualityComparer comparer) Parameters Type Name Description IEqualityComparer comparer Returns Type Description Int32 Implements System.Collections.Generic.IReadOnlyList<T> System.Collections.Generic.IReadOnlyCollection<T> System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable System.Collections.Generic.IEqualityComparer<T> System.Collections.IStructuralComparable System.Collections.IStructuralEquatable"
  },
  "api/EasyRpc.AspNetCore.Data.ImmutableHashTree.html": {
    "href": "api/EasyRpc.AspNetCore.Data.ImmutableHashTree.html",
    "title": "Class ImmutableHashTree | EasyRpc documentation website",
    "keywords": "Class ImmutableHashTree Static helper class for immutable hash tree Inheritance Object ImmutableHashTree Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : EasyRpc.AspNetCore.Data Assembly : EasyRpc.AspNetCore.dll Syntax public static class ImmutableHashTree Methods | Improve this Doc View Source From<TKey, TValue>(IEnumerable<KeyValuePair<TKey, TValue>>) Create immutable hash tree from IEnuermable Declaration public static ImmutableHashTree<TKey, TValue> From<TKey, TValue>(IEnumerable<KeyValuePair<TKey, TValue>> enumerable) Parameters Type Name Description IEnumerable < KeyValuePair <TKey, TValue>> enumerable Returns Type Description ImmutableHashTree <TKey, TValue> Type Parameters Name Description TKey TValue | Improve this Doc View Source ThreadSafeAdd<TKey, TValue>(ref ImmutableHashTree<TKey, TValue>, TKey, TValue, ImmutableHashTree<TKey, TValue>.UpdateDelegate) Add to tree in a thread safe manner Declaration public static void ThreadSafeAdd<TKey, TValue>(ref ImmutableHashTree<TKey, TValue> destination, TKey key, TValue value, ImmutableHashTree<TKey, TValue>.UpdateDelegate updateDelegate) Parameters Type Name Description ImmutableHashTree <TKey, TValue> destination hash tree to add to TKey key key TValue value value ImmutableHashTree.UpdateDelegate <> updateDelegate update delegate Type Parameters Name Description TKey key type TValue value type | Improve this Doc View Source ThreadSafeAdd<TKey, TValue>(ref ImmutableHashTree<TKey, TValue>, TKey, TValue, Boolean) Adds value to hash tree Declaration public static TValue ThreadSafeAdd<TKey, TValue>(ref ImmutableHashTree<TKey, TValue> destination, TKey key, TValue value, bool updateIfExists = false) Parameters Type Name Description ImmutableHashTree <TKey, TValue> destination TKey key key to add TValue value value being added Boolean updateIfExists if true update, if false just leave existing Returns Type Description TValue final value for key Type Parameters Name Description TKey TValue"
  },
  "api/EasyRpc.AspNetCore.Data.ImmutableHashTree-2.html": {
    "href": "api/EasyRpc.AspNetCore.Data.ImmutableHashTree-2.html",
    "title": "Class ImmutableHashTree<TKey, TValue> | EasyRpc documentation website",
    "keywords": "Class ImmutableHashTree<TKey, TValue> Immutable HashTree implementation http://en.wikipedia.org/wiki/AVL_tree Inheritance Object ImmutableHashTree<TKey, TValue> Implements IReadOnlyDictionary <TKey, TValue> IReadOnlyCollection < KeyValuePair <TKey, TValue>> IEnumerable < KeyValuePair <TKey, TValue>> IEnumerable Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : EasyRpc.AspNetCore.Data Assembly : EasyRpc.AspNetCore.dll Syntax public sealed class ImmutableHashTree<TKey, TValue> : IReadOnlyDictionary<TKey, TValue>, IReadOnlyCollection<KeyValuePair<TKey, TValue>>, IEnumerable<KeyValuePair<TKey, TValue>>, IEnumerable Type Parameters Name Description TKey TValue Fields | Improve this Doc View Source Conflicts Keys with the same hashcode Declaration public readonly ImmutableArray<KeyValuePair<TKey, TValue>> Conflicts Field Value Type Description ImmutableArray < KeyValuePair <TKey, TValue>> | Improve this Doc View Source Empty Empty hashtree, used as the starting point Declaration public static readonly ImmutableHashTree<TKey, TValue> Empty Field Value Type Description ImmutableHashTree <TKey, TValue> | Improve this Doc View Source Hash Hash value for this node Declaration public readonly int Hash Field Value Type Description Int32 | Improve this Doc View Source Height Height of hashtree node Declaration public readonly int Height Field Value Type Description Int32 | Improve this Doc View Source Key Key value for this hash node Declaration public readonly TKey Key Field Value Type Description TKey | Improve this Doc View Source Left Left node of the hash tree Declaration public readonly ImmutableHashTree<TKey, TValue> Left Field Value Type Description ImmutableHashTree <TKey, TValue> | Improve this Doc View Source Right Right node of the hash tree Declaration public readonly ImmutableHashTree<TKey, TValue> Right Field Value Type Description ImmutableHashTree <TKey, TValue> | Improve this Doc View Source Value Value for this hash node Declaration public readonly TValue Value Field Value Type Description TValue Properties | Improve this Doc View Source Count Gets the count of the immutable hashtree. Note its faster to do a lookup than to do a count If you want to test for emptyness use the IsEmpty property Declaration public int Count { get; } Property Value Type Description Int32 | Improve this Doc View Source IsEmpty Is the hash tree empty Declaration public bool IsEmpty { get; } Property Value Type Description Boolean | Improve this Doc View Source Item[TKey] Locate value from hash table, throws exception if not found Declaration public TValue this[TKey key] { get; } Parameters Type Name Description TKey key key for hash table Property Value Type Description TValue | Improve this Doc View Source Keys Returns all the keys in the hashtree Declaration public IEnumerable<TKey> Keys { get; } Property Value Type Description IEnumerable <TKey> | Improve this Doc View Source Values returns all the values in the hashtree Declaration public IEnumerable<TValue> Values { get; } Property Value Type Description IEnumerable <TValue> Methods | Improve this Doc View Source Add(TKey, TValue, ImmutableHashTree<TKey, TValue>.UpdateDelegate) Adds a new entry to the hashtree Declaration public ImmutableHashTree<TKey, TValue> Add(TKey key, TValue value, ImmutableHashTree<TKey, TValue>.UpdateDelegate updateDelegate = null) Parameters Type Name Description TKey key key to add TValue value value to add ImmutableHashTree.UpdateDelegate <> updateDelegate update delegate, by default will throw key already exits exception Returns Type Description ImmutableHashTree <TKey, TValue> | Improve this Doc View Source ContainsKey(TKey) Checks to see if a key is contained in the hashtable Declaration public bool ContainsKey(TKey key) Parameters Type Name Description TKey key Returns Type Description Boolean | Improve this Doc View Source GetConflictedValue(TKey, ImmutableHashTree<TKey, TValue>, TValue) Declaration public TValue GetConflictedValue(TKey key, ImmutableHashTree<TKey, TValue> currentNode, TValue defaultValue) Parameters Type Name Description TKey key ImmutableHashTree <TKey, TValue> currentNode TValue defaultValue Returns Type Description TValue | Improve this Doc View Source GetEnumerator() Gets an enumerator for the immutable hash Declaration public IEnumerator<KeyValuePair<TKey, TValue>> GetEnumerator() Returns Type Description IEnumerator < KeyValuePair <TKey, TValue>> enumerator | Improve this Doc View Source GetValueOrDefault(TKey, TValue) Get value or default from hash tree Declaration public TValue GetValueOrDefault(TKey key, TValue defaultValue = null) Parameters Type Name Description TKey key key to use for looking up TValue defaultValue default value if not found Returns Type Description TValue | Improve this Doc View Source GetValueOrDefault(TKey, Int32, TValue) Get value or default value from hash tree using a known hash value Declaration public TValue GetValueOrDefault(TKey key, int keyHash, TValue defaultValue = null) Parameters Type Name Description TKey key key to use for look up Int32 keyHash hash value for key TValue defaultValue default value to return when not found Returns Type Description TValue | Improve this Doc View Source IterateInOrder() Return an enumerable of KVP Declaration public IEnumerable<KeyValuePair<TKey, TValue>> IterateInOrder() Returns Type Description IEnumerable < KeyValuePair <TKey, TValue>> | Improve this Doc View Source IterateInOrder(Action<TKey, TValue>) Provide an action that will be called for each node in the hash tree Declaration public void IterateInOrder(Action<TKey, TValue> iterateAction) Parameters Type Name Description Action <TKey, TValue> iterateAction | Improve this Doc View Source TryGetValue(TKey, out TValue) Try get value from hashtree Declaration public bool TryGetValue(TKey key, out TValue value) Parameters Type Name Description TKey key TValue value Returns Type Description Boolean Explicit Interface Implementations | Improve this Doc View Source IEnumerable.GetEnumerator() Declaration IEnumerator IEnumerable.GetEnumerator() Returns Type Description IEnumerator Implements System.Collections.Generic.IReadOnlyDictionary<TKey,TValue> System.Collections.Generic.IReadOnlyCollection<T> System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable"
  },
  "api/EasyRpc.AspNetCore.Data.ImmutableHashTree-2.UpdateDelegate.html": {
    "href": "api/EasyRpc.AspNetCore.Data.ImmutableHashTree-2.UpdateDelegate.html",
    "title": "Delegate ImmutableHashTree<TKey, TValue>.UpdateDelegate | EasyRpc documentation website",
    "keywords": "Delegate ImmutableHashTree<TKey, TValue>.UpdateDelegate Update delegate defines behavior when key already exists Namespace : EasyRpc.AspNetCore.Data Assembly : EasyRpc.AspNetCore.dll Syntax public delegate TValue UpdateDelegate(TValue currentValue, TValue newValue); Parameters Type Name Description TValue currentValue TValue newValue Returns Type Description TValue"
  },
  "api/EasyRpc.AspNetCore.Data.ImmutableLinkedList.html": {
    "href": "api/EasyRpc.AspNetCore.Data.ImmutableLinkedList.html",
    "title": "Class ImmutableLinkedList | EasyRpc documentation website",
    "keywords": "Class ImmutableLinkedList Static helper class for linked list Inheritance Object ImmutableLinkedList Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : EasyRpc.AspNetCore.Data Assembly : EasyRpc.AspNetCore.dll Syntax public static class ImmutableLinkedList Methods | Improve this Doc View Source Create<T>(T[]) Create a new immutable linked list Declaration public static ImmutableLinkedList<T> Create<T>(params T[] values) Parameters Type Name Description T[] values values to create list from Returns Type Description ImmutableLinkedList <T> Type Parameters Name Description T | Improve this Doc View Source From<T>(IEnumerable<T>) creates a new immutable linked list from an enumerable Declaration public static ImmutableLinkedList<T> From<T>(IEnumerable<T> enumerable) Parameters Type Name Description IEnumerable <T> enumerable enumerable of T Returns Type Description ImmutableLinkedList <T> new list Type Parameters Name Description T | Improve this Doc View Source ThreadSafeAdd<T>(ref ImmutableLinkedList<T>, T) Add to a list in a thread safe manner Declaration public static void ThreadSafeAdd<T>(ref ImmutableLinkedList<T> list, T value) Parameters Type Name Description ImmutableLinkedList <T> list T value Type Parameters Name Description T | Improve this Doc View Source ThreadSafeAddRange<T>(ref ImmutableLinkedList<T>, IEnumerable<T>) Add a range to a list in a thread safe manner Declaration public static void ThreadSafeAddRange<T>(ref ImmutableLinkedList<T> list, IEnumerable<T> values) Parameters Type Name Description ImmutableLinkedList <T> list IEnumerable <T> values Type Parameters Name Description T | Improve this Doc View Source ThreadSafeEmpty<T>(ref ImmutableLinkedList<T>) Empty an immutable linked list in a thread and return the list Declaration public static ImmutableLinkedList<T> ThreadSafeEmpty<T>(ref ImmutableLinkedList<T> list) Parameters Type Name Description ImmutableLinkedList <T> list list to empty Returns Type Description ImmutableLinkedList <T> Type Parameters Name Description T"
  },
  "api/EasyRpc.AspNetCore.Data.ImmutableLinkedList-1.html": {
    "href": "api/EasyRpc.AspNetCore.Data.ImmutableLinkedList-1.html",
    "title": "Class ImmutableLinkedList<T> | EasyRpc documentation website",
    "keywords": "Class ImmutableLinkedList<T> Immutable linked list class Inheritance Object ImmutableLinkedList<T> Implements IEnumerable <T> IEnumerable Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : EasyRpc.AspNetCore.Data Assembly : EasyRpc.AspNetCore.dll Syntax public class ImmutableLinkedList<T> : IEnumerable<T>, IEnumerable Type Parameters Name Description T Fields | Improve this Doc View Source Empty Empty instance of list Declaration public static readonly ImmutableLinkedList<T> Empty Field Value Type Description ImmutableLinkedList <T> Properties | Improve this Doc View Source Count Count for list Declaration public int Count { get; } Property Value Type Description Int32 | Improve this Doc View Source Next Next link in the list Declaration public ImmutableLinkedList<T> Next { get; } Property Value Type Description ImmutableLinkedList <T> | Improve this Doc View Source Value For for link Declaration public T Value { get; } Property Value Type Description T Methods | Improve this Doc View Source Add(T) Add value to list Declaration public ImmutableLinkedList<T> Add(T value) Parameters Type Name Description T value value to add to list Returns Type Description ImmutableLinkedList <T> new linked list | Improve this Doc View Source AddRange(IEnumerable<T>) Add range to linked list Declaration public ImmutableLinkedList<T> AddRange(IEnumerable<T> range) Parameters Type Name Description IEnumerable <T> range range to add Returns Type Description ImmutableLinkedList <T> new linked list | Improve this Doc View Source Contains(T) Check if list contains value Declaration public bool Contains(T value) Parameters Type Name Description T value Returns Type Description Boolean | Improve this Doc View Source GetEnumerator() Get an enumerator for list Declaration public IEnumerator<T> GetEnumerator() Returns Type Description IEnumerator <T> | Improve this Doc View Source Reverse() Reverse linked list Declaration public ImmutableLinkedList<T> Reverse() Returns Type Description ImmutableLinkedList <T> | Improve this Doc View Source Visit(Action<T>, Boolean) Visit all values in list Declaration public void Visit(Action<T> action, bool startAtEnd = false) Parameters Type Name Description Action <T> action action to call Boolean startAtEnd start at the end of the linked list Explicit Interface Implementations | Improve this Doc View Source IEnumerable.GetEnumerator() Get enumerator for list Declaration IEnumerator IEnumerable.GetEnumerator() Returns Type Description IEnumerator Implements System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable"
  },
  "api/EasyRpc.AspNetCore.Data.ObjectPool-1.html": {
    "href": "api/EasyRpc.AspNetCore.Data.ObjectPool-1.html",
    "title": "Class ObjectPool<T> | EasyRpc documentation website",
    "keywords": "Class ObjectPool<T> Lock-less object pool Inheritance Object ObjectPool<T> Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : EasyRpc.AspNetCore.Data Assembly : EasyRpc.AspNetCore.dll Syntax public class ObjectPool<T> Type Parameters Name Description T Constructors | Improve this Doc View Source ObjectPool(Func<T>, Int32) Default constructor Declaration public ObjectPool(Func<T> createFunc, int max = 0) Parameters Type Name Description Func <T> createFunc Int32 max Properties | Improve this Doc View Source Count Total instances Declaration public int Count { get; } Property Value Type Description Int32 Methods | Improve this Doc View Source AcquireInstance() A Declaration public ObjectPool<T>.IPoolObjectInstance AcquireInstance() Returns Type Description ObjectPool.IPoolObjectInstance <>"
  },
  "api/EasyRpc.AspNetCore.Data.ObjectPool-1.IPoolObjectInstance.html": {
    "href": "api/EasyRpc.AspNetCore.Data.ObjectPool-1.IPoolObjectInstance.html",
    "title": "Interface ObjectPool<T>.IPoolObjectInstance | EasyRpc documentation website",
    "keywords": "Interface ObjectPool<T>.IPoolObjectInstance Inherited Members IDisposable.Dispose() Namespace : EasyRpc.AspNetCore.Data Assembly : EasyRpc.AspNetCore.dll Syntax public interface IPoolObjectInstance : IDisposable Properties | Improve this Doc View Source Instance Pool object instance Declaration T Instance { get; } Property Value Type Description T"
  },
  "api/EasyRpc.AspNetCore.Documentation.DocumentationService.html": {
    "href": "api/EasyRpc.AspNetCore.Documentation.DocumentationService.html",
    "title": "Class DocumentationService | EasyRpc documentation website",
    "keywords": "Class DocumentationService Service for serving up documentation assets Inheritance Object DocumentationService Implements IDocumentationService Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : EasyRpc.AspNetCore.Documentation Assembly : EasyRpc.AspNetCore.dll Syntax public class DocumentationService : IDocumentationService Constructors | Improve this Doc View Source DocumentationService(IOpenApiGenerationService, ISwaggerAssetProvider, IConfigurationManager) Default constructor Declaration public DocumentationService(IOpenApiGenerationService openApiGenerationService, ISwaggerAssetProvider swaggerAssetProvider, IConfigurationManager configurationManager) Parameters Type Name Description IOpenApiGenerationService openApiGenerationService ISwaggerAssetProvider swaggerAssetProvider IConfigurationManager configurationManager Methods | Improve this Doc View Source Configure(IInternalApiConfiguration, IReadOnlyList<IEndPointMethodHandler>) Configure documentation service Declaration public void Configure(IInternalApiConfiguration apiInformation, IReadOnlyList<IEndPointMethodHandler> endPointMethodHandlersList) Parameters Type Name Description IInternalApiConfiguration apiInformation IReadOnlyList < IEndPointMethodHandler > endPointMethodHandlersList | Improve this Doc View Source Execute(HttpContext, RequestDelegate) Execute documentation handler Declaration public Task Execute(HttpContext httpContext, RequestDelegate next) Parameters Type Name Description HttpContext httpContext RequestDelegate next Returns Type Description Task Implements IDocumentationService"
  },
  "api/EasyRpc.AspNetCore.Documentation.DocumentFilterContext.html": {
    "href": "api/EasyRpc.AspNetCore.Documentation.DocumentFilterContext.html",
    "title": "Class DocumentFilterContext | EasyRpc documentation website",
    "keywords": "Class DocumentFilterContext Document filter context Inheritance Object DocumentFilterContext Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : EasyRpc.AspNetCore.Documentation Assembly : EasyRpc.AspNetCore.dll Syntax public class DocumentFilterContext Constructors | Improve this Doc View Source DocumentFilterContext(OpenApiDocument, HttpContext) Default constructor Declaration public DocumentFilterContext(OpenApiDocument document, HttpContext httpContext) Parameters Type Name Description Microsoft.OpenApi.Models.OpenApiDocument document HttpContext httpContext Properties | Improve this Doc View Source Document Open api document Declaration public OpenApiDocument Document { get; } Property Value Type Description Microsoft.OpenApi.Models.OpenApiDocument | Improve this Doc View Source HttpContext Http context Declaration public HttpContext HttpContext { get; } Property Value Type Description HttpContext"
  },
  "api/EasyRpc.AspNetCore.Documentation.html": {
    "href": "api/EasyRpc.AspNetCore.Documentation.html",
    "title": "Namespace EasyRpc.AspNetCore.Documentation | EasyRpc documentation website",
    "keywords": "Namespace EasyRpc.AspNetCore.Documentation Classes DocumentationService Service for serving up documentation assets DocumentFilterContext Document filter context KnownOpenApiTypeMapper Maps simple types to OpenApiSchema objects OpenApiGenerationService OpenApiSchemaGenerator Service that generates OpenApiSchema objects based on Type OperationFilterContext Operation filter context StringTokenReplacementService SwaggerAssetProvider SwaggerAssetProvider.FileEntry TokenValueProvider XmlDocProvider Provides xml documentation for different types XmlDocumentationExtensions Interfaces IDocumentationService Service for serving up documentation assets IDocumentFilter Document filter IKnownOpenApiTypeMapper Maps a simple type to an OpenApiSchema element IOpenApiGenerationService IOpenApiSchemaGenerator Service that generates OpenApiSchema objects based on Type IOperationFilter Operation filter IStringTokenReplacementService ISwaggerAssetProvider ITokenValueProvider IXmlDocProvider Provides xml documentation for different types"
  },
  "api/EasyRpc.AspNetCore.Documentation.IDocumentationService.html": {
    "href": "api/EasyRpc.AspNetCore.Documentation.IDocumentationService.html",
    "title": "Interface IDocumentationService | EasyRpc documentation website",
    "keywords": "Interface IDocumentationService Service for serving up documentation assets Namespace : EasyRpc.AspNetCore.Documentation Assembly : EasyRpc.AspNetCore.dll Syntax public interface IDocumentationService Methods | Improve this Doc View Source Configure(IInternalApiConfiguration, IReadOnlyList<IEndPointMethodHandler>) Configure documentation service Declaration void Configure(IInternalApiConfiguration apiInformation, IReadOnlyList<IEndPointMethodHandler> endPointMethodHandlersList) Parameters Type Name Description IInternalApiConfiguration apiInformation IReadOnlyList < IEndPointMethodHandler > endPointMethodHandlersList | Improve this Doc View Source Execute(HttpContext, RequestDelegate) Execute documentation handler Declaration Task Execute(HttpContext httpContext, RequestDelegate next) Parameters Type Name Description HttpContext httpContext RequestDelegate next Returns Type Description Task"
  },
  "api/EasyRpc.AspNetCore.Documentation.IDocumentFilter.html": {
    "href": "api/EasyRpc.AspNetCore.Documentation.IDocumentFilter.html",
    "title": "Interface IDocumentFilter | EasyRpc documentation website",
    "keywords": "Interface IDocumentFilter Document filter Namespace : EasyRpc.AspNetCore.Documentation Assembly : EasyRpc.AspNetCore.dll Syntax public interface IDocumentFilter Methods | Improve this Doc View Source Apply(DocumentFilterContext) Apply logic to document Declaration void Apply(DocumentFilterContext context) Parameters Type Name Description DocumentFilterContext context"
  },
  "api/EasyRpc.AspNetCore.Documentation.IKnownOpenApiTypeMapper.html": {
    "href": "api/EasyRpc.AspNetCore.Documentation.IKnownOpenApiTypeMapper.html",
    "title": "Interface IKnownOpenApiTypeMapper | EasyRpc documentation website",
    "keywords": "Interface IKnownOpenApiTypeMapper Maps a simple type to an OpenApiSchema element Namespace : EasyRpc.AspNetCore.Documentation Assembly : EasyRpc.AspNetCore.dll Syntax public interface IKnownOpenApiTypeMapper Methods | Improve this Doc View Source Configure(DocumentationOptions) Configure documentation Declaration void Configure(DocumentationOptions options) Parameters Type Name Description DocumentationOptions options | Improve this Doc View Source GetMapping(Type) Get type mapping Declaration OpenApiSchema GetMapping(Type type) Parameters Type Name Description Type type simple type Returns Type Description Microsoft.OpenApi.Models.OpenApiSchema open api schema element"
  },
  "api/EasyRpc.AspNetCore.Documentation.IOpenApiGenerationService.html": {
    "href": "api/EasyRpc.AspNetCore.Documentation.IOpenApiGenerationService.html",
    "title": "Interface IOpenApiGenerationService | EasyRpc documentation website",
    "keywords": "Interface IOpenApiGenerationService Namespace : EasyRpc.AspNetCore.Documentation Assembly : EasyRpc.AspNetCore.dll Syntax public interface IOpenApiGenerationService Methods | Improve this Doc View Source Configure(IInternalApiConfiguration, DocumentationOptions, IReadOnlyList<IEndPointMethodHandler>) Declaration void Configure(IInternalApiConfiguration apiInformation, DocumentationOptions documentationOptions, IReadOnlyList<IEndPointMethodHandler> endPointMethodHandlersList) Parameters Type Name Description IInternalApiConfiguration apiInformation DocumentationOptions documentationOptions IReadOnlyList < IEndPointMethodHandler > endPointMethodHandlersList | Improve this Doc View Source Execute(HttpContext, RequestDelegate) Declaration Task Execute(HttpContext httpContext, RequestDelegate next) Parameters Type Name Description HttpContext httpContext RequestDelegate next Returns Type Description Task"
  },
  "api/EasyRpc.AspNetCore.Documentation.IOpenApiSchemaGenerator.html": {
    "href": "api/EasyRpc.AspNetCore.Documentation.IOpenApiSchemaGenerator.html",
    "title": "Interface IOpenApiSchemaGenerator | EasyRpc documentation website",
    "keywords": "Interface IOpenApiSchemaGenerator Service that generates OpenApiSchema objects based on Type Namespace : EasyRpc.AspNetCore.Documentation Assembly : EasyRpc.AspNetCore.dll Syntax public interface IOpenApiSchemaGenerator Methods | Improve this Doc View Source Configure(DocumentationOptions) Declaration void Configure(DocumentationOptions documentationOptions) Parameters Type Name Description DocumentationOptions documentationOptions | Improve this Doc View Source GetSchemaType(Type) Get OpenApiSchema for type Declaration OpenApiSchema GetSchemaType(Type objectType) Parameters Type Name Description Type objectType Returns Type Description Microsoft.OpenApi.Models.OpenApiSchema | Improve this Doc View Source PopulateSchemaComponent(OpenApiDocument) Populate component Declaration void PopulateSchemaComponent(OpenApiDocument document) Parameters Type Name Description Microsoft.OpenApi.Models.OpenApiDocument document"
  },
  "api/EasyRpc.AspNetCore.Documentation.IOperationFilter.html": {
    "href": "api/EasyRpc.AspNetCore.Documentation.IOperationFilter.html",
    "title": "Interface IOperationFilter | EasyRpc documentation website",
    "keywords": "Interface IOperationFilter Operation filter Namespace : EasyRpc.AspNetCore.Documentation Assembly : EasyRpc.AspNetCore.dll Syntax public interface IOperationFilter Methods | Improve this Doc View Source Apply(OperationFilterContext) Apply logic Declaration void Apply(OperationFilterContext context) Parameters Type Name Description OperationFilterContext context"
  },
  "api/EasyRpc.AspNetCore.Documentation.IStringTokenReplacementService.html": {
    "href": "api/EasyRpc.AspNetCore.Documentation.IStringTokenReplacementService.html",
    "title": "Interface IStringTokenReplacementService | EasyRpc documentation website",
    "keywords": "Interface IStringTokenReplacementService Namespace : EasyRpc.AspNetCore.Documentation Assembly : EasyRpc.AspNetCore.dll Syntax public interface IStringTokenReplacementService Methods | Improve this Doc View Source Configure(DocumentationOptions) Declaration void Configure(DocumentationOptions options) Parameters Type Name Description DocumentationOptions options | Improve this Doc View Source ReplaceTokensInString(String) Declaration string ReplaceTokensInString(string tokenString) Parameters Type Name Description String tokenString Returns Type Description String"
  },
  "api/EasyRpc.AspNetCore.Documentation.ISwaggerAssetProvider.html": {
    "href": "api/EasyRpc.AspNetCore.Documentation.ISwaggerAssetProvider.html",
    "title": "Interface ISwaggerAssetProvider | EasyRpc documentation website",
    "keywords": "Interface ISwaggerAssetProvider Namespace : EasyRpc.AspNetCore.Documentation Assembly : EasyRpc.AspNetCore.dll Syntax public interface ISwaggerAssetProvider Methods | Improve this Doc View Source Configure(DocumentationOptions) Declaration void Configure(DocumentationOptions options) Parameters Type Name Description DocumentationOptions options | Improve this Doc View Source ProvideAsset(HttpContext) Declaration ValueTask<bool> ProvideAsset(HttpContext context) Parameters Type Name Description HttpContext context Returns Type Description ValueTask < Boolean >"
  },
  "api/EasyRpc.AspNetCore.Documentation.ITokenValueProvider.html": {
    "href": "api/EasyRpc.AspNetCore.Documentation.ITokenValueProvider.html",
    "title": "Interface ITokenValueProvider | EasyRpc documentation website",
    "keywords": "Interface ITokenValueProvider Namespace : EasyRpc.AspNetCore.Documentation Assembly : EasyRpc.AspNetCore.dll Syntax public interface ITokenValueProvider Methods | Improve this Doc View Source Configure(DocumentationOptions) Declaration void Configure(DocumentationOptions options) Parameters Type Name Description DocumentationOptions options | Improve this Doc View Source ProvideToken(String) Declaration string ProvideToken(string token) Parameters Type Name Description String token Returns Type Description String"
  },
  "api/EasyRpc.AspNetCore.Documentation.IXmlDocProvider.html": {
    "href": "api/EasyRpc.AspNetCore.Documentation.IXmlDocProvider.html",
    "title": "Interface IXmlDocProvider | EasyRpc documentation website",
    "keywords": "Interface IXmlDocProvider Provides xml documentation for different types Namespace : EasyRpc.AspNetCore.Documentation Assembly : EasyRpc.AspNetCore.dll Syntax public interface IXmlDocProvider Methods | Improve this Doc View Source GetMethodDocumentation(MethodInfo) Get XElement that represents the documentation for a given member Declaration XElement GetMethodDocumentation(MethodInfo methodInfo) Parameters Type Name Description MethodInfo methodInfo Returns Type Description XElement | Improve this Doc View Source GetPropertyDocumentation(PropertyInfo) Get XElement that represents the documentation for a given member Declaration XElement GetPropertyDocumentation(PropertyInfo propertyInfo) Parameters Type Name Description PropertyInfo propertyInfo Returns Type Description XElement | Improve this Doc View Source GetTypeDocumentation(Type) Get XElement that represents the documentation for a given type, can be null Declaration XElement GetTypeDocumentation(Type type) Parameters Type Name Description Type type Returns Type Description XElement"
  },
  "api/EasyRpc.AspNetCore.Documentation.KnownOpenApiTypeMapper.html": {
    "href": "api/EasyRpc.AspNetCore.Documentation.KnownOpenApiTypeMapper.html",
    "title": "Class KnownOpenApiTypeMapper | EasyRpc documentation website",
    "keywords": "Class KnownOpenApiTypeMapper Maps simple types to OpenApiSchema objects Inheritance Object KnownOpenApiTypeMapper Implements IKnownOpenApiTypeMapper Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : EasyRpc.AspNetCore.Documentation Assembly : EasyRpc.AspNetCore.dll Syntax public class KnownOpenApiTypeMapper : IKnownOpenApiTypeMapper Properties | Improve this Doc View Source Mappings Declaration protected Dictionary<Type, Func<OpenApiSchema>> Mappings { get; } Property Value Type Description Dictionary < Type , Func < Microsoft.OpenApi.Models.OpenApiSchema >> Methods | Improve this Doc View Source Configure(DocumentationOptions) Configure documentation Declaration public void Configure(DocumentationOptions options) Parameters Type Name Description DocumentationOptions options | Improve this Doc View Source GenerateBoolSchema() Generate schema for bool Declaration protected virtual OpenApiSchema GenerateBoolSchema() Returns Type Description Microsoft.OpenApi.Models.OpenApiSchema | Improve this Doc View Source GenerateByteSchema() Generate schema for byte Declaration protected virtual OpenApiSchema GenerateByteSchema() Returns Type Description Microsoft.OpenApi.Models.OpenApiSchema | Improve this Doc View Source GenerateDecimalSchema() Generate schema for decimal Declaration protected virtual OpenApiSchema GenerateDecimalSchema() Returns Type Description Microsoft.OpenApi.Models.OpenApiSchema | Improve this Doc View Source GenerateDoubleSchema() Generate schema for double Declaration protected virtual OpenApiSchema GenerateDoubleSchema() Returns Type Description Microsoft.OpenApi.Models.OpenApiSchema | Improve this Doc View Source GenerateFloatSchema() Generate schema for float Declaration protected virtual OpenApiSchema GenerateFloatSchema() Returns Type Description Microsoft.OpenApi.Models.OpenApiSchema | Improve this Doc View Source GenerateIntSchema() Generate schema for int Declaration protected virtual OpenApiSchema GenerateIntSchema() Returns Type Description Microsoft.OpenApi.Models.OpenApiSchema | Improve this Doc View Source GenerateLongSchema() Generate schema for long Declaration protected virtual OpenApiSchema GenerateLongSchema() Returns Type Description Microsoft.OpenApi.Models.OpenApiSchema | Improve this Doc View Source GenerateMappings() Declaration protected virtual Dictionary<Type, Func<OpenApiSchema>> GenerateMappings() Returns Type Description Dictionary < Type , Func < Microsoft.OpenApi.Models.OpenApiSchema >> | Improve this Doc View Source GenerateNullableBoolSchema() Generate schema for bool? Declaration protected virtual OpenApiSchema GenerateNullableBoolSchema() Returns Type Description Microsoft.OpenApi.Models.OpenApiSchema | Improve this Doc View Source GenerateNullableByteSchema() Generate schema for byte? Declaration protected virtual OpenApiSchema GenerateNullableByteSchema() Returns Type Description Microsoft.OpenApi.Models.OpenApiSchema | Improve this Doc View Source GenerateNullableDateTimeSchema() generate schema for DateTime? Declaration protected virtual OpenApiSchema GenerateNullableDateTimeSchema() Returns Type Description Microsoft.OpenApi.Models.OpenApiSchema | Improve this Doc View Source GenerateNullableDecimalSchema() Generate schema for decimal? Declaration protected virtual OpenApiSchema GenerateNullableDecimalSchema() Returns Type Description Microsoft.OpenApi.Models.OpenApiSchema | Improve this Doc View Source GenerateNullableDoubleSchema() Generate schema for double? Declaration protected virtual OpenApiSchema GenerateNullableDoubleSchema() Returns Type Description Microsoft.OpenApi.Models.OpenApiSchema | Improve this Doc View Source GenerateNullableFloatSchema() Generate schema for float? Declaration protected virtual OpenApiSchema GenerateNullableFloatSchema() Returns Type Description Microsoft.OpenApi.Models.OpenApiSchema | Improve this Doc View Source GenerateNullableGuidSchema() Generate schema for guid? Declaration protected virtual OpenApiSchema GenerateNullableGuidSchema() Returns Type Description Microsoft.OpenApi.Models.OpenApiSchema | Improve this Doc View Source GenerateNullableIntSchema() Generate schema for int? Declaration protected virtual OpenApiSchema GenerateNullableIntSchema() Returns Type Description Microsoft.OpenApi.Models.OpenApiSchema | Improve this Doc View Source GenerateNullableLongSchema() Generate schema for long? Declaration protected virtual OpenApiSchema GenerateNullableLongSchema() Returns Type Description Microsoft.OpenApi.Models.OpenApiSchema | Improve this Doc View Source GenerateStringSchema() Generate schema for string Declaration protected virtual OpenApiSchema GenerateStringSchema() Returns Type Description Microsoft.OpenApi.Models.OpenApiSchema | Improve this Doc View Source GetMapping(Type) Get type mapping Declaration public OpenApiSchema GetMapping(Type type) Parameters Type Name Description Type type simple type Returns Type Description Microsoft.OpenApi.Models.OpenApiSchema open api schema element Implements IKnownOpenApiTypeMapper"
  },
  "api/EasyRpc.AspNetCore.Documentation.OpenApiGenerationService.html": {
    "href": "api/EasyRpc.AspNetCore.Documentation.OpenApiGenerationService.html",
    "title": "Class OpenApiGenerationService | EasyRpc documentation website",
    "keywords": "Class OpenApiGenerationService Inheritance Object OpenApiGenerationService Implements IOpenApiGenerationService Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : EasyRpc.AspNetCore.Documentation Assembly : EasyRpc.AspNetCore.dll Syntax public class OpenApiGenerationService : IOpenApiGenerationService Constructors | Improve this Doc View Source OpenApiGenerationService(IOpenApiSchemaGenerator, IConfigurationManager, IContentSerializationService, IErrorResultTypeCreator, IXmlDocProvider) Declaration public OpenApiGenerationService(IOpenApiSchemaGenerator apiSchemaGenerator, IConfigurationManager configurationManager, IContentSerializationService contentSerializationService, IErrorResultTypeCreator errorResultTypeCreator, IXmlDocProvider xmlDocProvider) Parameters Type Name Description IOpenApiSchemaGenerator apiSchemaGenerator IConfigurationManager configurationManager IContentSerializationService contentSerializationService IErrorResultTypeCreator errorResultTypeCreator IXmlDocProvider xmlDocProvider Methods | Improve this Doc View Source Configure(IInternalApiConfiguration, DocumentationOptions, IReadOnlyList<IEndPointMethodHandler>) Declaration public void Configure(IInternalApiConfiguration apiInformation, DocumentationOptions documentationOptions, IReadOnlyList<IEndPointMethodHandler> endPointMethodHandlersList) Parameters Type Name Description IInternalApiConfiguration apiInformation DocumentationOptions documentationOptions IReadOnlyList < IEndPointMethodHandler > endPointMethodHandlersList | Improve this Doc View Source Execute(HttpContext, RequestDelegate) Declaration public Task Execute(HttpContext httpContext, RequestDelegate next) Parameters Type Name Description HttpContext httpContext RequestDelegate next Returns Type Description Task | Improve this Doc View Source GenerateDocument(HttpContext) Declaration protected virtual Task<OpenApiDocument> GenerateDocument(HttpContext context) Parameters Type Name Description HttpContext context Returns Type Description Task < Microsoft.OpenApi.Models.OpenApiDocument > Implements IOpenApiGenerationService"
  },
  "api/EasyRpc.AspNetCore.Documentation.OpenApiSchemaGenerator.html": {
    "href": "api/EasyRpc.AspNetCore.Documentation.OpenApiSchemaGenerator.html",
    "title": "Class OpenApiSchemaGenerator | EasyRpc documentation website",
    "keywords": "Class OpenApiSchemaGenerator Service that generates OpenApiSchema objects based on Type Inheritance Object OpenApiSchemaGenerator Implements IOpenApiSchemaGenerator Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : EasyRpc.AspNetCore.Documentation Assembly : EasyRpc.AspNetCore.dll Syntax public class OpenApiSchemaGenerator : IOpenApiSchemaGenerator Constructors | Improve this Doc View Source OpenApiSchemaGenerator(IKnownOpenApiTypeMapper, IXmlDocProvider) Declaration public OpenApiSchemaGenerator(IKnownOpenApiTypeMapper simpleOpenApiTypeMapper, IXmlDocProvider xmlDocProvider) Parameters Type Name Description IKnownOpenApiTypeMapper simpleOpenApiTypeMapper IXmlDocProvider xmlDocProvider Methods | Improve this Doc View Source CasePropertyName(String) Declaration protected virtual string CasePropertyName(string propertyName) Parameters Type Name Description String propertyName Returns Type Description String | Improve this Doc View Source Configure(DocumentationOptions) Declaration public void Configure(DocumentationOptions documentationOptions) Parameters Type Name Description DocumentationOptions documentationOptions | Improve this Doc View Source GetSchemaType(Type) Get OpenApiSchema for type Declaration public OpenApiSchema GetSchemaType(Type objectType) Parameters Type Name Description Type objectType Returns Type Description Microsoft.OpenApi.Models.OpenApiSchema | Improve this Doc View Source PopulateSchemaComponent(OpenApiDocument) Declaration public void PopulateSchemaComponent(OpenApiDocument document) Parameters Type Name Description Microsoft.OpenApi.Models.OpenApiDocument document Implements IOpenApiSchemaGenerator"
  },
  "api/EasyRpc.AspNetCore.Documentation.OperationFilterContext.html": {
    "href": "api/EasyRpc.AspNetCore.Documentation.OperationFilterContext.html",
    "title": "Class OperationFilterContext | EasyRpc documentation website",
    "keywords": "Class OperationFilterContext Operation filter context Inheritance Object OperationFilterContext Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : EasyRpc.AspNetCore.Documentation Assembly : EasyRpc.AspNetCore.dll Syntax public class OperationFilterContext Constructors | Improve this Doc View Source OperationFilterContext(HttpContext, IEndPointMethodConfigurationReadOnly, OpenApiOperation, OpenApiDocument) Default constructor Declaration public OperationFilterContext(HttpContext httpContext, IEndPointMethodConfigurationReadOnly methodConfiguration, OpenApiOperation operation, OpenApiDocument document) Parameters Type Name Description HttpContext httpContext IEndPointMethodConfigurationReadOnly methodConfiguration Microsoft.OpenApi.Models.OpenApiOperation operation Microsoft.OpenApi.Models.OpenApiDocument document Properties | Improve this Doc View Source Document Document this will go in Declaration public OpenApiDocument Document { get; } Property Value Type Description Microsoft.OpenApi.Models.OpenApiDocument | Improve this Doc View Source HttpContext HttpContext for call Declaration public HttpContext HttpContext { get; } Property Value Type Description HttpContext | Improve this Doc View Source MethodConfiguration Method configuration Declaration public IEndPointMethodConfigurationReadOnly MethodConfiguration { get; } Property Value Type Description IEndPointMethodConfigurationReadOnly | Improve this Doc View Source Operation Api operation Declaration public OpenApiOperation Operation { get; } Property Value Type Description Microsoft.OpenApi.Models.OpenApiOperation"
  },
  "api/EasyRpc.AspNetCore.Documentation.StringTokenReplacementService.html": {
    "href": "api/EasyRpc.AspNetCore.Documentation.StringTokenReplacementService.html",
    "title": "Class StringTokenReplacementService | EasyRpc documentation website",
    "keywords": "Class StringTokenReplacementService Inheritance Object StringTokenReplacementService Implements IStringTokenReplacementService Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : EasyRpc.AspNetCore.Documentation Assembly : EasyRpc.AspNetCore.dll Syntax public class StringTokenReplacementService : IStringTokenReplacementService Constructors | Improve this Doc View Source StringTokenReplacementService(ITokenValueProvider) Declaration public StringTokenReplacementService(ITokenValueProvider tokenValueProvider) Parameters Type Name Description ITokenValueProvider tokenValueProvider Fields | Improve this Doc View Source EndReplacement Declaration public const string EndReplacement = \"*^\" Field Value Type Description String | Improve this Doc View Source StartReplacement Declaration public const string StartReplacement = \"^*\" Field Value Type Description String Methods | Improve this Doc View Source Configure(DocumentationOptions) Declaration public void Configure(DocumentationOptions options) Parameters Type Name Description DocumentationOptions options | Improve this Doc View Source ReplaceTokensInString(String) Declaration public string ReplaceTokensInString(string tokenString) Parameters Type Name Description String tokenString Returns Type Description String Implements IStringTokenReplacementService"
  },
  "api/EasyRpc.AspNetCore.Documentation.SwaggerAssetProvider.FileEntry.html": {
    "href": "api/EasyRpc.AspNetCore.Documentation.SwaggerAssetProvider.FileEntry.html",
    "title": "Class SwaggerAssetProvider.FileEntry | EasyRpc documentation website",
    "keywords": "Class SwaggerAssetProvider.FileEntry Inheritance Object SwaggerAssetProvider.FileEntry Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : EasyRpc.AspNetCore.Documentation Assembly : EasyRpc.AspNetCore.dll Syntax public class FileEntry Properties | Improve this Doc View Source Contents Declaration public byte[] Contents { get; set; } Property Value Type Description Byte [] | Improve this Doc View Source ContentType Declaration public string ContentType { get; set; } Property Value Type Description String | Improve this Doc View Source FileName Declaration public string FileName { get; set; } Property Value Type Description String | Improve this Doc View Source IsCompressed Declaration public bool IsCompressed { get; set; } Property Value Type Description Boolean"
  },
  "api/EasyRpc.AspNetCore.Documentation.SwaggerAssetProvider.html": {
    "href": "api/EasyRpc.AspNetCore.Documentation.SwaggerAssetProvider.html",
    "title": "Class SwaggerAssetProvider | EasyRpc documentation website",
    "keywords": "Class SwaggerAssetProvider Inheritance Object SwaggerAssetProvider Implements ISwaggerAssetProvider Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : EasyRpc.AspNetCore.Documentation Assembly : EasyRpc.AspNetCore.dll Syntax public class SwaggerAssetProvider : ISwaggerAssetProvider Constructors | Improve this Doc View Source SwaggerAssetProvider(IHostEnvironment, ILogger<SwaggerAssetProvider>, IStringTokenReplacementService) Declaration public SwaggerAssetProvider(IHostEnvironment hostEnvironment, ILogger<SwaggerAssetProvider> logger, IStringTokenReplacementService stringTokenReplacementService) Parameters Type Name Description IHostEnvironment hostEnvironment ILogger < SwaggerAssetProvider > logger IStringTokenReplacementService stringTokenReplacementService Methods | Improve this Doc View Source Configure(DocumentationOptions) Declaration public void Configure(DocumentationOptions options) Parameters Type Name Description DocumentationOptions options | Improve this Doc View Source ProvideAsset(HttpContext) Declaration public ValueTask<bool> ProvideAsset(HttpContext context) Parameters Type Name Description HttpContext context Returns Type Description ValueTask < Boolean > | Improve this Doc View Source SendFile(HttpContext, SwaggerAssetProvider.FileEntry) Declaration protected virtual ValueTask<bool> SendFile(HttpContext context, SwaggerAssetProvider.FileEntry fileEntry) Parameters Type Name Description HttpContext context SwaggerAssetProvider.FileEntry fileEntry Returns Type Description ValueTask < Boolean > | Improve this Doc View Source UnpackAssets() Declaration protected virtual void UnpackAssets() Implements ISwaggerAssetProvider"
  },
  "api/EasyRpc.AspNetCore.Documentation.TokenValueProvider.html": {
    "href": "api/EasyRpc.AspNetCore.Documentation.TokenValueProvider.html",
    "title": "Class TokenValueProvider | EasyRpc documentation website",
    "keywords": "Class TokenValueProvider Inheritance Object TokenValueProvider Implements ITokenValueProvider Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : EasyRpc.AspNetCore.Documentation Assembly : EasyRpc.AspNetCore.dll Syntax public class TokenValueProvider : ITokenValueProvider Methods | Improve this Doc View Source ApiUrlToken() Declaration protected virtual string ApiUrlToken() Returns Type Description String | Improve this Doc View Source Configure(DocumentationOptions) Declaration public void Configure(DocumentationOptions options) Parameters Type Name Description DocumentationOptions options | Improve this Doc View Source ExtraCssToken() Declaration protected virtual string ExtraCssToken() Returns Type Description String | Improve this Doc View Source ExtraJavaScript() Declaration protected virtual string ExtraJavaScript() Returns Type Description String | Improve this Doc View Source ProvideToken(String) Declaration public string ProvideToken(string token) Parameters Type Name Description String token Returns Type Description String | Improve this Doc View Source TitleToken() Declaration protected virtual string TitleToken() Returns Type Description String Implements ITokenValueProvider"
  },
  "api/EasyRpc.AspNetCore.Documentation.XmlDocProvider.html": {
    "href": "api/EasyRpc.AspNetCore.Documentation.XmlDocProvider.html",
    "title": "Class XmlDocProvider | EasyRpc documentation website",
    "keywords": "Class XmlDocProvider Provides xml documentation for different types Inheritance Object XmlDocProvider Implements IXmlDocProvider Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : EasyRpc.AspNetCore.Documentation Assembly : EasyRpc.AspNetCore.dll Syntax public class XmlDocProvider : IXmlDocProvider Constructors | Improve this Doc View Source XmlDocProvider() Default constructor Declaration public XmlDocProvider() Methods | Improve this Doc View Source GetMethodDocumentation(MethodInfo) Get XElement that represents the documentation for a given member Declaration public XElement GetMethodDocumentation(MethodInfo methodInfo) Parameters Type Name Description MethodInfo methodInfo Returns Type Description XElement | Improve this Doc View Source GetPropertyDocumentation(PropertyInfo) Get XElement that represents the documentation for a given member Declaration public XElement GetPropertyDocumentation(PropertyInfo propertyInfo) Parameters Type Name Description PropertyInfo propertyInfo Returns Type Description XElement | Improve this Doc View Source GetTypeDocumentation(Type) Get XElement that represents the documentation for a given type, can be null Declaration public XElement GetTypeDocumentation(Type type) Parameters Type Name Description Type type Returns Type Description XElement Implements IXmlDocProvider"
  },
  "api/EasyRpc.AspNetCore.Documentation.XmlDocumentationExtensions.html": {
    "href": "api/EasyRpc.AspNetCore.Documentation.XmlDocumentationExtensions.html",
    "title": "Class XmlDocumentationExtensions | EasyRpc documentation website",
    "keywords": "Class XmlDocumentationExtensions Inheritance Object XmlDocumentationExtensions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : EasyRpc.AspNetCore.Documentation Assembly : EasyRpc.AspNetCore.dll Syntax public static class XmlDocumentationExtensions Methods | Improve this Doc View Source GetExample(XElement) Declaration public static string GetExample(this XElement element) Parameters Type Name Description XElement element Returns Type Description String | Improve this Doc View Source GetParameterSummary(XElement, String) Declaration public static string GetParameterSummary(this XElement element, string parameterName) Parameters Type Name Description XElement element String parameterName Returns Type Description String | Improve this Doc View Source GetSummary(XElement) Declaration public static string GetSummary(this XElement element) Parameters Type Name Description XElement element Returns Type Description String | Improve this Doc View Source GetTags(XElement) Declaration public static IEnumerable<string> GetTags(this XElement element) Parameters Type Name Description XElement element Returns Type Description IEnumerable < String >"
  },
  "api/EasyRpc.AspNetCore.DocumentationOptions.html": {
    "href": "api/EasyRpc.AspNetCore.DocumentationOptions.html",
    "title": "Class DocumentationOptions | EasyRpc documentation website",
    "keywords": "Class DocumentationOptions Documentation options Inheritance Object DocumentationOptions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : EasyRpc.AspNetCore Assembly : EasyRpc.AspNetCore.dll Syntax public class DocumentationOptions Properties | Improve this Doc View Source ApiDescription Api description Declaration public string ApiDescription { get; set; } Property Value Type Description String | Improve this Doc View Source AutoTag Auto tag methods if there is no tag. Declaration public bool AutoTag { get; set; } Property Value Type Description Boolean | Improve this Doc View Source ContentPath Path for providing content in addition or overriding the standard documentation assets Declaration public string ContentPath { get; set; } Property Value Type Description String | Improve this Doc View Source DocumentFilters Document filters Declaration public IList<IDocumentFilter> DocumentFilters { get; } Property Value Type Description IList < IDocumentFilter > | Improve this Doc View Source Enabled Documentation enabled, true by default Declaration public bool Enabled { get; set; } Property Value Type Description Boolean | Improve this Doc View Source ExtraCss Add extra css can be url or <link> tag Declaration public string ExtraCss { get; set; } Property Value Type Description String | Improve this Doc View Source ExtraJavaScript Add extra JavaScript can be url or <script> tag Declaration public string ExtraJavaScript { get; set; } Property Value Type Description String | Improve this Doc View Source OpenApiJsonUrl open api json file name Declaration public string OpenApiJsonUrl { get; set; } Property Value Type Description String | Improve this Doc View Source OperationFilters Operation filters Declaration public IList<IOperationFilter> OperationFilters { get; } Property Value Type Description IList < IOperationFilter > | Improve this Doc View Source RedirectRootToDocumentation Redirection calls to documentation Declaration public bool RedirectRootToDocumentation { get; set; } Property Value Type Description Boolean | Improve this Doc View Source RedirectUrl url to redirect to Declaration public string RedirectUrl { get; set; } Property Value Type Description String | Improve this Doc View Source Title Title for documentation Declaration public string Title { get; set; } Property Value Type Description String | Improve this Doc View Source TypeMappings Dictionary of know type mappings Declaration public IReadOnlyDictionary<Type, Func<OpenApiSchema>> TypeMappings { get; } Property Value Type Description IReadOnlyDictionary < Type , Func < Microsoft.OpenApi.Models.OpenApiSchema >> | Improve this Doc View Source UIBasePath swagger documentation base path Declaration public string UIBasePath { get; set; } Property Value Type Description String | Improve this Doc View Source Version Documentation version, defaults to assembly version if not provided Declaration public string Version { get; set; } Property Value Type Description String | Improve this Doc View Source VersionFormat Func used to set version string in Documentation Declaration public Func<Version, string> VersionFormat { get; set; } Property Value Type Description Func < Version , String > Methods | Improve this Doc View Source DefaultVersionFormat(Version) Default version format 1.0.0 Declaration public static string DefaultVersionFormat(Version version) Parameters Type Name Description Version version Returns Type Description String | Improve this Doc View Source MapStringType<T>(String, String) Map a string type with a format Declaration public DocumentationOptions MapStringType<T>(string format = null, string example = \"\") Parameters Type Name Description String format String example Returns Type Description DocumentationOptions Type Parameters Name Description T | Improve this Doc View Source MapType(Type, Func<OpenApiSchema>) Define how a type is represented in swagger document Declaration public DocumentationOptions MapType(Type type, Func<OpenApiSchema> schemaFunc) Parameters Type Name Description Type type Func < Microsoft.OpenApi.Models.OpenApiSchema > schemaFunc Returns Type Description DocumentationOptions | Improve this Doc View Source MapType<T>(Func<OpenApiSchema>) Define how a type is represented in swagger document Declaration public DocumentationOptions MapType<T>(Func<OpenApiSchema> schemaFunc) Parameters Type Name Description Func < Microsoft.OpenApi.Models.OpenApiSchema > schemaFunc Returns Type Description DocumentationOptions Type Parameters Name Description T"
  },
  "api/EasyRpc.AspNetCore.EndPointMethodParameterSource.html": {
    "href": "api/EasyRpc.AspNetCore.EndPointMethodParameterSource.html",
    "title": "Enum EndPointMethodParameterSource | EasyRpc documentation website",
    "keywords": "Enum EndPointMethodParameterSource parameter sources Namespace : EasyRpc.AspNetCore Assembly : EasyRpc.AspNetCore.dll Syntax public enum EndPointMethodParameterSource Fields Name Description HttpCancellationToken Connection abort requested cancellation token HttpContext Parameter is HttpContext HttpRequest Parameter is HttpRequest HttpResponse Parameter is HttpResponse PathParameter Parameter is part of the url PostBody Parameter is the whole request body PostParameter Parameter is part of an object in the request body QueryStringParameter Parameter is part of the query string RequestExecutionContext Parameter should be RequestExecutionContext RequestServices Parameter should be resolved from the request service scope"
  },
  "api/EasyRpc.AspNetCore.EndPoints.BaseEndPointServices.html": {
    "href": "api/EasyRpc.AspNetCore.EndPoints.BaseEndPointServices.html",
    "title": "Class BaseEndPointServices | EasyRpc documentation website",
    "keywords": "Class BaseEndPointServices Collection of services Inheritance Object BaseEndPointServices Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : EasyRpc.AspNetCore.EndPoints Assembly : EasyRpc.AspNetCore.dll Syntax public class BaseEndPointServices Constructors | Improve this Doc View Source BaseEndPointServices(IEndPointAuthorizationService, IContentSerializationService, IParameterBinderDelegateBuilder, IMethodInvokerCreationService, IErrorHandler, IRawContentWriter, IResponseDelegateCreator) Default constructor Declaration public BaseEndPointServices(IEndPointAuthorizationService authorizationService, IContentSerializationService serializationService, IParameterBinderDelegateBuilder parameterBinderDelegateBuilder, IMethodInvokerCreationService methodInvokerCreationService, IErrorHandler errorHandler, IRawContentWriter rawContentWriter, IResponseDelegateCreator responseDelegateCreator) Parameters Type Name Description IEndPointAuthorizationService authorizationService IContentSerializationService serializationService IParameterBinderDelegateBuilder parameterBinderDelegateBuilder IMethodInvokerCreationService methodInvokerCreationService IErrorHandler errorHandler IRawContentWriter rawContentWriter IResponseDelegateCreator responseDelegateCreator Properties | Improve this Doc View Source AuthorizationService Authorization service Declaration public IEndPointAuthorizationService AuthorizationService { get; } Property Value Type Description IEndPointAuthorizationService | Improve this Doc View Source ErrorHandler Error handler service Declaration public IErrorHandler ErrorHandler { get; } Property Value Type Description IErrorHandler | Improve this Doc View Source MethodInvokerCreationService Method invoker creation service Declaration public IMethodInvokerCreationService MethodInvokerCreationService { get; } Property Value Type Description IMethodInvokerCreationService | Improve this Doc View Source ParameterBinderDelegateBuilder Parameter binding service Declaration public IParameterBinderDelegateBuilder ParameterBinderDelegateBuilder { get; } Property Value Type Description IParameterBinderDelegateBuilder | Improve this Doc View Source RawContentWriter Raw content writer service Declaration public IRawContentWriter RawContentWriter { get; } Property Value Type Description IRawContentWriter | Improve this Doc View Source ResponseDelegateCreator Response delegate creator Declaration public IResponseDelegateCreator ResponseDelegateCreator { get; } Property Value Type Description IResponseDelegateCreator | Improve this Doc View Source SerializationService Serialization service Declaration public IContentSerializationService SerializationService { get; } Property Value Type Description IContentSerializationService Methods | Improve this Doc View Source ConfigurationComplete(IServiceProvider) Configuration is complete Declaration public void ConfigurationComplete(IServiceProvider serviceScope) Parameters Type Name Description IServiceProvider serviceScope"
  },
  "api/EasyRpc.AspNetCore.EndPoints.CustomActionResultExecutor.html": {
    "href": "api/EasyRpc.AspNetCore.EndPoints.CustomActionResultExecutor.html",
    "title": "Class CustomActionResultExecutor | EasyRpc documentation website",
    "keywords": "Class CustomActionResultExecutor Executes IActionResult instances Inheritance Object CustomActionResultExecutor Implements ICustomActionResultExecutor Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : EasyRpc.AspNetCore.EndPoints Assembly : EasyRpc.AspNetCore.dll Syntax public class CustomActionResultExecutor : ICustomActionResultExecutor Methods | Improve this Doc View Source Execute(RequestExecutionContext, IActionResult) Execute the IActionResult Declaration public Task Execute(RequestExecutionContext context, IActionResult actionResult) Parameters Type Name Description RequestExecutionContext context IActionResult actionResult Returns Type Description Task | Improve this Doc View Source GenerateActionContext(RequestExecutionContext, IActionResult) Generate an action context for execution Declaration protected virtual ActionContext GenerateActionContext(RequestExecutionContext context, IActionResult actionResult) Parameters Type Name Description RequestExecutionContext context IActionResult actionResult Returns Type Description ActionContext | Improve this Doc View Source GenerateActionDescriptor(RequestExecutionContext, IActionResult) Generate action descriptor Declaration protected virtual ActionDescriptor GenerateActionDescriptor(RequestExecutionContext context, IActionResult actionResult) Parameters Type Name Description RequestExecutionContext context IActionResult actionResult Returns Type Description ActionDescriptor | Improve this Doc View Source GenerateRouteData(RequestExecutionContext, IActionResult) Generate route data for action Declaration protected virtual RouteData GenerateRouteData(RequestExecutionContext context, IActionResult actionResult) Parameters Type Name Description RequestExecutionContext context IActionResult actionResult Returns Type Description RouteData Implements ICustomActionResultExecutor"
  },
  "api/EasyRpc.AspNetCore.EndPoints.EndPointMethodConfiguration.html": {
    "href": "api/EasyRpc.AspNetCore.EndPoints.EndPointMethodConfiguration.html",
    "title": "Class EndPointMethodConfiguration | EasyRpc documentation website",
    "keywords": "Class EndPointMethodConfiguration EndPoint method configuration Inheritance Object EndPointMethodConfiguration Implements IEndPointMethodConfigurationReadOnly Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : EasyRpc.AspNetCore.EndPoints Assembly : EasyRpc.AspNetCore.dll Syntax public class EndPointMethodConfiguration : IEndPointMethodConfigurationReadOnly Constructors | Improve this Doc View Source EndPointMethodConfiguration(RpcRouteInformation, Func<RequestExecutionContext, Object>, MethodInvokeInformation, Type, Nullable<Boolean>) Default constructor Declaration public EndPointMethodConfiguration(RpcRouteInformation routeInformation, Func<RequestExecutionContext, object> activationFunc, MethodInvokeInformation invokeInformation, Type returnType, bool? supportsCompression) Parameters Type Name Description RpcRouteInformation routeInformation Func < RequestExecutionContext , Object > activationFunc MethodInvokeInformation invokeInformation Type returnType Nullable < Boolean > supportsCompression Properties | Improve this Doc View Source ActivationFunc Func used to activate instance Declaration public Func<RequestExecutionContext, object> ActivationFunc { get; } Property Value Type Description Func < RequestExecutionContext , Object > | Improve this Doc View Source Authorizations List of authorizations, can be null Declaration public IReadOnlyList<IEndPointMethodAuthorization> Authorizations { get; set; } Property Value Type Description IReadOnlyList < IEndPointMethodAuthorization > | Improve this Doc View Source Filters List of filters, can be null Declaration public IReadOnlyList<Func<RequestExecutionContext, IRequestFilter>> Filters { get; set; } Property Value Type Description IReadOnlyList < Func < RequestExecutionContext , IRequestFilter >> | Improve this Doc View Source InvokeInformation Invoke information for method Declaration public MethodInvokeInformation InvokeInformation { get; } Property Value Type Description MethodInvokeInformation | Improve this Doc View Source Parameters List of parameters for method Declaration public List<RpcParameterInfo> Parameters { get; } Property Value Type Description List < RpcParameterInfo > | Improve this Doc View Source RawContentEncoding Sets content encoding header if set Declaration public string RawContentEncoding { get; set; } Property Value Type Description String | Improve this Doc View Source RawContentType If set this call will return raw bytes on the response body with the specified content type Declaration public string RawContentType { get; set; } Property Value Type Description String | Improve this Doc View Source ResponseHeaders List of response headers to be applied to end point Declaration public IReadOnlyList<IResponseHeader> ResponseHeaders { get; set; } Property Value Type Description IReadOnlyList < IResponseHeader > | Improve this Doc View Source ReturnType Return type of method Declaration public Type ReturnType { get; } Property Value Type Description Type | Improve this Doc View Source RouteInformation Route information Declaration public RpcRouteInformation RouteInformation { get; } Property Value Type Description RpcRouteInformation | Improve this Doc View Source SuccessStatusCode Successful http status code (200 GET, 201 POST) Declaration public int SuccessStatusCode { get; set; } Property Value Type Description Int32 | Improve this Doc View Source SupportsCompression Should result support compression Declaration public bool? SupportsCompression { get; } Property Value Type Description Nullable < Boolean > | Improve this Doc View Source WrappedType Declaration public Type WrappedType { get; set; } Property Value Type Description Type Explicit Interface Implementations | Improve this Doc View Source IEndPointMethodConfigurationReadOnly.InvokeInformation Information about how end point should be invoked Declaration IMethodInvokeInformation IEndPointMethodConfigurationReadOnly.InvokeInformation { get; } Returns Type Description IMethodInvokeInformation | Improve this Doc View Source IEndPointMethodConfigurationReadOnly.Parameters List of parameters Declaration IReadOnlyList<RpcParameterInfo> IEndPointMethodConfigurationReadOnly.Parameters { get; } Returns Type Description IReadOnlyList < RpcParameterInfo > | Improve this Doc View Source IEndPointMethodConfigurationReadOnly.RouteInformation End point route information Declaration IRpcRouteInformation IEndPointMethodConfigurationReadOnly.RouteInformation { get; } Returns Type Description IRpcRouteInformation Implements IEndPointMethodConfigurationReadOnly"
  },
  "api/EasyRpc.AspNetCore.EndPoints.html": {
    "href": "api/EasyRpc.AspNetCore.EndPoints.html",
    "title": "Namespace EasyRpc.AspNetCore.EndPoints | EasyRpc documentation website",
    "keywords": "Namespace EasyRpc.AspNetCore.EndPoints Classes BaseEndPointServices Collection of services CustomActionResultExecutor Executes IActionResult instances EndPointMethodConfiguration EndPoint method configuration HttpMethodEndPointHandler Collection of end point method handlers MethodInvokeInformation Represents the method that needs to be invoked NamingConventions Naming convention UnmappedEndPointHandler Handles unmapped requests Interfaces ICustomActionResultExecutor Executes IActionResult instances IEndPointHandler End point handler IEndPointMethodHandler IMethodInvokeInformation information about the method to invoke IRequestParametersImplementations<T> Implementation for Clone on all generate types IUnmappedEndPointHandler Handles unmapped requests Delegates InvokeMethodDelegate<T> Delegate MethodEndPointDelegate Delegate that takes request execution and returns a task"
  },
  "api/EasyRpc.AspNetCore.EndPoints.HttpMethodEndPointHandler.html": {
    "href": "api/EasyRpc.AspNetCore.EndPoints.HttpMethodEndPointHandler.html",
    "title": "Class HttpMethodEndPointHandler | EasyRpc documentation website",
    "keywords": "Class HttpMethodEndPointHandler Collection of end point method handlers Inheritance Object HttpMethodEndPointHandler Implements IEndPointHandler Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : EasyRpc.AspNetCore.EndPoints Assembly : EasyRpc.AspNetCore.dll Syntax public class HttpMethodEndPointHandler : IEndPointHandler Constructors | Improve this Doc View Source HttpMethodEndPointHandler(String, Boolean, List<IEndPointMethodHandler>, IUnmappedEndPointHandler) Default constructor Declaration public HttpMethodEndPointHandler(string path, bool supportsLongerPaths, List<IEndPointMethodHandler> handlers, IUnmappedEndPointHandler unknownEndPointHandler) Parameters Type Name Description String path Boolean supportsLongerPaths List < IEndPointMethodHandler > handlers IUnmappedEndPointHandler unknownEndPointHandler Properties | Improve this Doc View Source Path Path for this Declaration public string Path { get; } Property Value Type Description String | Improve this Doc View Source SupportsLongerPaths True if the handler supports /service/method/argValue Declaration public bool SupportsLongerPaths { get; } Property Value Type Description Boolean Methods | Improve this Doc View Source HandleRequest(HttpContext, RequestDelegate) Handles http request to end point Declaration public Task HandleRequest(HttpContext context, RequestDelegate next) Parameters Type Name Description HttpContext context RequestDelegate next Returns Type Description Task Implements IEndPointHandler"
  },
  "api/EasyRpc.AspNetCore.EndPoints.ICustomActionResultExecutor.html": {
    "href": "api/EasyRpc.AspNetCore.EndPoints.ICustomActionResultExecutor.html",
    "title": "Interface ICustomActionResultExecutor | EasyRpc documentation website",
    "keywords": "Interface ICustomActionResultExecutor Executes IActionResult instances Namespace : EasyRpc.AspNetCore.EndPoints Assembly : EasyRpc.AspNetCore.dll Syntax public interface ICustomActionResultExecutor Methods | Improve this Doc View Source Execute(RequestExecutionContext, IActionResult) Execute the IActionResult Declaration Task Execute(RequestExecutionContext context, IActionResult actionResult) Parameters Type Name Description RequestExecutionContext context IActionResult actionResult Returns Type Description Task"
  },
  "api/EasyRpc.AspNetCore.EndPoints.IEndPointHandler.html": {
    "href": "api/EasyRpc.AspNetCore.EndPoints.IEndPointHandler.html",
    "title": "Interface IEndPointHandler | EasyRpc documentation website",
    "keywords": "Interface IEndPointHandler End point handler Namespace : EasyRpc.AspNetCore.EndPoints Assembly : EasyRpc.AspNetCore.dll Syntax public interface IEndPointHandler Properties | Improve this Doc View Source Path Path for this Declaration string Path { get; } Property Value Type Description String | Improve this Doc View Source SupportsLongerPaths True if the handler supports /service/method/argValue Declaration bool SupportsLongerPaths { get; } Property Value Type Description Boolean Methods | Improve this Doc View Source HandleRequest(HttpContext, RequestDelegate) Handles http request to end point Declaration Task HandleRequest(HttpContext context, RequestDelegate next) Parameters Type Name Description HttpContext context RequestDelegate next Returns Type Description Task"
  },
  "api/EasyRpc.AspNetCore.EndPoints.IEndPointMethodHandler.html": {
    "href": "api/EasyRpc.AspNetCore.EndPoints.IEndPointMethodHandler.html",
    "title": "Interface IEndPointMethodHandler | EasyRpc documentation website",
    "keywords": "Interface IEndPointMethodHandler Namespace : EasyRpc.AspNetCore.EndPoints Assembly : EasyRpc.AspNetCore.dll Syntax public interface IEndPointMethodHandler Properties | Improve this Doc View Source Configuration Configuration Declaration IEndPointMethodConfigurationReadOnly Configuration { get; } Property Value Type Description IEndPointMethodConfigurationReadOnly | Improve this Doc View Source HttpMethod HTTP method to handle Declaration string HttpMethod { get; } Property Value Type Description String | Improve this Doc View Source RouteInformation Route information for end point Declaration IRpcRouteInformation RouteInformation { get; } Property Value Type Description IRpcRouteInformation Methods | Improve this Doc View Source HandleRequest(HttpContext) Handles http request to end point Declaration Task HandleRequest(HttpContext context) Parameters Type Name Description HttpContext context Returns Type Description Task"
  },
  "api/EasyRpc.AspNetCore.EndPoints.IMethodInvokeInformation.html": {
    "href": "api/EasyRpc.AspNetCore.EndPoints.IMethodInvokeInformation.html",
    "title": "Interface IMethodInvokeInformation | EasyRpc documentation website",
    "keywords": "Interface IMethodInvokeInformation information about the method to invoke Namespace : EasyRpc.AspNetCore.EndPoints Assembly : EasyRpc.AspNetCore.dll Syntax public interface IMethodInvokeInformation Properties | Improve this Doc View Source DelegateToInvoke Delegate to invoke, will be null if MethodToInvoke is provided Declaration Delegate DelegateToInvoke { get; } Property Value Type Description Delegate | Improve this Doc View Source MethodInvokeDelegate Allows for custom method invoker to be provided Declaration InvokeMethodDelegate<object> MethodInvokeDelegate { get; } Property Value Type Description InvokeMethodDelegate < Object > | Improve this Doc View Source MethodToInvoke Method to invoke, will be null if DelegateToInvoke is provided Declaration MethodInfo MethodToInvoke { get; } Property Value Type Description MethodInfo | Improve this Doc View Source Signature Signature for method Declaration MethodInfo Signature { get; } Property Value Type Description MethodInfo"
  },
  "api/EasyRpc.AspNetCore.EndPoints.InvokeMethodDelegate-1.html": {
    "href": "api/EasyRpc.AspNetCore.EndPoints.InvokeMethodDelegate-1.html",
    "title": "Delegate InvokeMethodDelegate<T> | EasyRpc documentation website",
    "keywords": "Delegate InvokeMethodDelegate<T> Delegate Namespace : EasyRpc.AspNetCore.EndPoints Assembly : EasyRpc.AspNetCore.dll Syntax public delegate Task<T> InvokeMethodDelegate<T>(RequestExecutionContext context); Parameters Type Name Description RequestExecutionContext context Returns Type Description Task <T> Type Parameters Name Description T"
  },
  "api/EasyRpc.AspNetCore.EndPoints.IRequestParametersImplementations-1.html": {
    "href": "api/EasyRpc.AspNetCore.EndPoints.IRequestParametersImplementations-1.html",
    "title": "Interface IRequestParametersImplementations<T> | EasyRpc documentation website",
    "keywords": "Interface IRequestParametersImplementations<T> Implementation for Clone on all generate types Inherited Members IRequestParameters.TryGetParameter(String, Object) IRequestParameters.TrySetParameter(String, Object) IRequestParameters.ParameterInfos IRequestParameters.Item[Int32] IRequestParameters.ParameterCount IRequestParameters.Clone() IRequestParameters.Item[String] Namespace : EasyRpc.AspNetCore.EndPoints Assembly : EasyRpc.AspNetCore.dll Syntax public interface IRequestParametersImplementations<T> : IRequestParameters where T : IRequestParameters, new() Type Parameters Name Description T Explicit Interface Implementations | Improve this Doc View Source IRequestParameters.Clone() Declaration IRequestParameters IRequestParameters.Clone() Returns Type Description IRequestParameters"
  },
  "api/EasyRpc.AspNetCore.EndPoints.IUnmappedEndPointHandler.html": {
    "href": "api/EasyRpc.AspNetCore.EndPoints.IUnmappedEndPointHandler.html",
    "title": "Interface IUnmappedEndPointHandler | EasyRpc documentation website",
    "keywords": "Interface IUnmappedEndPointHandler Handles unmapped requests Namespace : EasyRpc.AspNetCore.EndPoints Assembly : EasyRpc.AspNetCore.dll Syntax public interface IUnmappedEndPointHandler Methods | Improve this Doc View Source Configure(IInternalApiConfiguration, IReadOnlyList<IEndPointMethodHandler>) Configure handler Declaration void Configure(IInternalApiConfiguration apiInformation, IReadOnlyList<IEndPointMethodHandler> endPointMethodHandlersList) Parameters Type Name Description IInternalApiConfiguration apiInformation IReadOnlyList < IEndPointMethodHandler > endPointMethodHandlersList | Improve this Doc View Source Execute(HttpContext, RequestDelegate, Boolean) Handle unmapped request Declaration Task Execute(HttpContext httpContext, RequestDelegate next, bool matchPathNotMethod = false) Parameters Type Name Description HttpContext httpContext RequestDelegate next Boolean matchPathNotMethod Returns Type Description Task"
  },
  "api/EasyRpc.AspNetCore.EndPoints.MethodEndPointDelegate.html": {
    "href": "api/EasyRpc.AspNetCore.EndPoints.MethodEndPointDelegate.html",
    "title": "Delegate MethodEndPointDelegate | EasyRpc documentation website",
    "keywords": "Delegate MethodEndPointDelegate Delegate that takes request execution and returns a task Namespace : EasyRpc.AspNetCore.EndPoints Assembly : EasyRpc.AspNetCore.dll Syntax public delegate Task MethodEndPointDelegate(RequestExecutionContext context); Parameters Type Name Description RequestExecutionContext context Returns Type Description Task"
  },
  "api/EasyRpc.AspNetCore.EndPoints.MethodHandlers.BaseContentEndPointMethodHandler-1.html": {
    "href": "api/EasyRpc.AspNetCore.EndPoints.MethodHandlers.BaseContentEndPointMethodHandler-1.html",
    "title": "Class BaseContentEndPointMethodHandler<TReturn> | EasyRpc documentation website",
    "keywords": "Class BaseContentEndPointMethodHandler<TReturn> Base end point method handler Inheritance Object BaseContentEndPointMethodHandler<TReturn> NoParamsEndPointMethodHandler<TReturn> StateBasedEndPointMethodHandler<TReturn> Implements IEndPointMethodHandler Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : EasyRpc.AspNetCore.EndPoints.MethodHandlers Assembly : EasyRpc.AspNetCore.dll Syntax public abstract class BaseContentEndPointMethodHandler<TReturn> : IEndPointMethodHandler Type Parameters Name Description TReturn Constructors | Improve this Doc View Source BaseContentEndPointMethodHandler(EndPointMethodConfiguration, BaseEndPointServices) Default constructor Declaration protected BaseContentEndPointMethodHandler(EndPointMethodConfiguration configuration, BaseEndPointServices services) Parameters Type Name Description EndPointMethodConfiguration configuration BaseEndPointServices services Fields | Improve this Doc View Source BindParametersDelegate Method for binding parameters Declaration protected MethodEndPointDelegate BindParametersDelegate Field Value Type Description MethodEndPointDelegate | Improve this Doc View Source InvokeMethodDelegate Invoke method delegate Declaration protected InvokeMethodDelegate<TReturn> InvokeMethodDelegate Field Value Type Description InvokeMethodDelegate <TReturn> | Improve this Doc View Source ResponseDelegate Response delegate Declaration protected MethodEndPointDelegate ResponseDelegate Field Value Type Description MethodEndPointDelegate | Improve this Doc View Source Services Services Declaration protected readonly BaseEndPointServices Services Field Value Type Description BaseEndPointServices Properties | Improve this Doc View Source Configuration Configuration Declaration public virtual IEndPointMethodConfigurationReadOnly Configuration { get; } Property Value Type Description IEndPointMethodConfigurationReadOnly | Improve this Doc View Source HttpMethod HTTP method to handle Declaration public virtual string HttpMethod { get; } Property Value Type Description String | Improve this Doc View Source RouteInformation Route information for end point Declaration public IRpcRouteInformation RouteInformation { get; } Property Value Type Description IRpcRouteInformation Methods | Improve this Doc View Source HandleRequest(HttpContext) Handles http request to end point Declaration public abstract Task HandleRequest(HttpContext context) Parameters Type Name Description HttpContext context Returns Type Description Task | Improve this Doc View Source SetupMethod() Builds method delegates Declaration protected virtual void SetupMethod() Implements IEndPointMethodHandler"
  },
  "api/EasyRpc.AspNetCore.EndPoints.MethodHandlers.html": {
    "href": "api/EasyRpc.AspNetCore.EndPoints.MethodHandlers.html",
    "title": "Namespace EasyRpc.AspNetCore.EndPoints.MethodHandlers | EasyRpc documentation website",
    "keywords": "Namespace EasyRpc.AspNetCore.EndPoints.MethodHandlers Classes BaseContentEndPointMethodHandler<TReturn> Base end point method handler NoParamsEndPointMethodHandler<TReturn> End point handler with no parameters, no authentication, no filters StateBasedEndPointMethodHandler<TReturn> Enums StateBasedEndPointMethodHandler<TReturn>.RequestState"
  },
  "api/EasyRpc.AspNetCore.EndPoints.MethodHandlers.NoParamsEndPointMethodHandler-1.html": {
    "href": "api/EasyRpc.AspNetCore.EndPoints.MethodHandlers.NoParamsEndPointMethodHandler-1.html",
    "title": "Class NoParamsEndPointMethodHandler<TReturn> | EasyRpc documentation website",
    "keywords": "Class NoParamsEndPointMethodHandler<TReturn> End point handler with no parameters, no authentication, no filters Inheritance Object BaseContentEndPointMethodHandler <TReturn> NoParamsEndPointMethodHandler<TReturn> Implements IEndPointMethodHandler Inherited Members BaseContentEndPointMethodHandler<TReturn>.Services BaseContentEndPointMethodHandler<TReturn>.BindParametersDelegate BaseContentEndPointMethodHandler<TReturn>.InvokeMethodDelegate BaseContentEndPointMethodHandler<TReturn>.ResponseDelegate BaseContentEndPointMethodHandler<TReturn>.RouteInformation BaseContentEndPointMethodHandler<TReturn>.Configuration BaseContentEndPointMethodHandler<TReturn>.HttpMethod BaseContentEndPointMethodHandler<TReturn>.SetupMethod() Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : EasyRpc.AspNetCore.EndPoints.MethodHandlers Assembly : EasyRpc.AspNetCore.dll Syntax public class NoParamsEndPointMethodHandler<TReturn> : BaseContentEndPointMethodHandler<TReturn>, IEndPointMethodHandler Type Parameters Name Description TReturn Constructors | Improve this Doc View Source NoParamsEndPointMethodHandler(EndPointMethodConfiguration, BaseEndPointServices) Default constructor Declaration public NoParamsEndPointMethodHandler(EndPointMethodConfiguration configuration, BaseEndPointServices services) Parameters Type Name Description EndPointMethodConfiguration configuration BaseEndPointServices services Methods | Improve this Doc View Source HandleRequest(HttpContext) Declaration public override Task HandleRequest(HttpContext context) Parameters Type Name Description HttpContext context Returns Type Description Task Overrides EasyRpc.AspNetCore.EndPoints.MethodHandlers.BaseContentEndPointMethodHandler<TReturn>.HandleRequest(Microsoft.AspNetCore.Http.HttpContext) Implements IEndPointMethodHandler"
  },
  "api/EasyRpc.AspNetCore.EndPoints.MethodHandlers.StateBasedEndPointMethodHandler-1.html": {
    "href": "api/EasyRpc.AspNetCore.EndPoints.MethodHandlers.StateBasedEndPointMethodHandler-1.html",
    "title": "Class StateBasedEndPointMethodHandler<TReturn> | EasyRpc documentation website",
    "keywords": "Class StateBasedEndPointMethodHandler<TReturn> Inheritance Object BaseContentEndPointMethodHandler <TReturn> StateBasedEndPointMethodHandler<TReturn> Implements IEndPointMethodHandler Inherited Members BaseContentEndPointMethodHandler<TReturn>.Services BaseContentEndPointMethodHandler<TReturn>.BindParametersDelegate BaseContentEndPointMethodHandler<TReturn>.InvokeMethodDelegate BaseContentEndPointMethodHandler<TReturn>.ResponseDelegate BaseContentEndPointMethodHandler<TReturn>.RouteInformation BaseContentEndPointMethodHandler<TReturn>.Configuration BaseContentEndPointMethodHandler<TReturn>.HttpMethod BaseContentEndPointMethodHandler<TReturn>.SetupMethod() Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : EasyRpc.AspNetCore.EndPoints.MethodHandlers Assembly : EasyRpc.AspNetCore.dll Syntax public class StateBasedEndPointMethodHandler<TReturn> : BaseContentEndPointMethodHandler<TReturn>, IEndPointMethodHandler Type Parameters Name Description TReturn Constructors | Improve this Doc View Source StateBasedEndPointMethodHandler(EndPointMethodConfiguration, BaseEndPointServices) Declaration public StateBasedEndPointMethodHandler(EndPointMethodConfiguration configuration, BaseEndPointServices services) Parameters Type Name Description EndPointMethodConfiguration configuration BaseEndPointServices services Methods | Improve this Doc View Source HandleRequest(HttpContext) Handles http request to end point Declaration public override Task HandleRequest(HttpContext context) Parameters Type Name Description HttpContext context Returns Type Description Task Overrides EasyRpc.AspNetCore.EndPoints.MethodHandlers.BaseContentEndPointMethodHandler<TReturn>.HandleRequest(Microsoft.AspNetCore.Http.HttpContext) Implements IEndPointMethodHandler"
  },
  "api/EasyRpc.AspNetCore.EndPoints.MethodHandlers.StateBasedEndPointMethodHandler-1.RequestState.html": {
    "href": "api/EasyRpc.AspNetCore.EndPoints.MethodHandlers.StateBasedEndPointMethodHandler-1.RequestState.html",
    "title": "Enum StateBasedEndPointMethodHandler<TReturn>.RequestState | EasyRpc documentation website",
    "keywords": "Enum StateBasedEndPointMethodHandler<TReturn>.RequestState Namespace : EasyRpc.AspNetCore.EndPoints.MethodHandlers Assembly : EasyRpc.AspNetCore.dll Syntax public enum RequestState Fields Name Description AfterExecuteTaskFilter BeforeExecuteTaskFilter BindParameters CheckAuth Complete ExecuteTask FinalizeFilter Response"
  },
  "api/EasyRpc.AspNetCore.EndPoints.MethodInvokeInformation.html": {
    "href": "api/EasyRpc.AspNetCore.EndPoints.MethodInvokeInformation.html",
    "title": "Class MethodInvokeInformation | EasyRpc documentation website",
    "keywords": "Class MethodInvokeInformation Represents the method that needs to be invoked Inheritance Object MethodInvokeInformation Implements IMethodInvokeInformation Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : EasyRpc.AspNetCore.EndPoints Assembly : EasyRpc.AspNetCore.dll Syntax public class MethodInvokeInformation : IMethodInvokeInformation Properties | Improve this Doc View Source DelegateToInvoke Delegate to invoke, will be null if MethodToInvoke is provided Declaration public Delegate DelegateToInvoke { get; set; } Property Value Type Description Delegate | Improve this Doc View Source MethodInvokeDelegate Allows for custom method invoker to be provided Declaration public InvokeMethodDelegate<object> MethodInvokeDelegate { get; set; } Property Value Type Description InvokeMethodDelegate < Object > | Improve this Doc View Source MethodToInvoke Method to invoke, will be null if DelegateToInvoke is provided Declaration public MethodInfo MethodToInvoke { get; set; } Property Value Type Description MethodInfo | Improve this Doc View Source Signature Invoke signature Declaration public MethodInfo Signature { get; } Property Value Type Description MethodInfo Implements IMethodInvokeInformation"
  },
  "api/EasyRpc.AspNetCore.EndPoints.NamingConventions.html": {
    "href": "api/EasyRpc.AspNetCore.EndPoints.NamingConventions.html",
    "title": "Class NamingConventions | EasyRpc documentation website",
    "keywords": "Class NamingConventions Naming convention Inheritance Object NamingConventions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : EasyRpc.AspNetCore.EndPoints Assembly : EasyRpc.AspNetCore.dll Syntax public class NamingConventions Properties | Improve this Doc View Source MethodNameGenerator Function used to generate method names, by default it's just the method name Declaration public Func<MethodInfo, string> MethodNameGenerator { get; set; } Property Value Type Description Func < MethodInfo , String > | Improve this Doc View Source RouteNameGenerator Function used to create route names for types, by default it's just the type name Declaration public Func<Type, IEnumerable<string>> RouteNameGenerator { get; set; } Property Value Type Description Func < Type , IEnumerable < String >> Methods | Improve this Doc View Source DefaultMethodNameGenerator(MethodInfo) Default method name generator Declaration public static string DefaultMethodNameGenerator(MethodInfo method) Parameters Type Name Description MethodInfo method Returns Type Description String | Improve this Doc View Source DefaultRouteNameGenerator(Type) Default route name generator Declaration public static IEnumerable<string> DefaultRouteNameGenerator(Type type) Parameters Type Name Description Type type Returns Type Description IEnumerable < String >"
  },
  "api/EasyRpc.AspNetCore.EndPoints.UnmappedEndPointHandler.html": {
    "href": "api/EasyRpc.AspNetCore.EndPoints.UnmappedEndPointHandler.html",
    "title": "Class UnmappedEndPointHandler | EasyRpc documentation website",
    "keywords": "Class UnmappedEndPointHandler Handles unmapped requests Inheritance Object UnmappedEndPointHandler Implements IUnmappedEndPointHandler Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : EasyRpc.AspNetCore.EndPoints Assembly : EasyRpc.AspNetCore.dll Syntax public class UnmappedEndPointHandler : IUnmappedEndPointHandler Constructors | Improve this Doc View Source UnmappedEndPointHandler(IDocumentationService) Default constructor Declaration public UnmappedEndPointHandler(IDocumentationService documentationService) Parameters Type Name Description IDocumentationService documentationService Methods | Improve this Doc View Source Configure(IInternalApiConfiguration, IReadOnlyList<IEndPointMethodHandler>) Configure handler Declaration public void Configure(IInternalApiConfiguration apiInformation, IReadOnlyList<IEndPointMethodHandler> endPointMethodHandlersList) Parameters Type Name Description IInternalApiConfiguration apiInformation IReadOnlyList < IEndPointMethodHandler > endPointMethodHandlersList | Improve this Doc View Source Execute(HttpContext, RequestDelegate, Boolean) Handle unmapped request Declaration public Task Execute(HttpContext httpContext, RequestDelegate next, bool matchPathNotMethod = false) Parameters Type Name Description HttpContext httpContext RequestDelegate next Boolean matchPathNotMethod Returns Type Description Task Implements IUnmappedEndPointHandler"
  },
  "api/EasyRpc.AspNetCore.Errors.DefaultErrorHandler.html": {
    "href": "api/EasyRpc.AspNetCore.Errors.DefaultErrorHandler.html",
    "title": "Class DefaultErrorHandler | EasyRpc documentation website",
    "keywords": "Class DefaultErrorHandler Default error handler Inheritance Object DefaultErrorHandler Implements IErrorHandler IApiConfigurationCompleteAware Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : EasyRpc.AspNetCore.Errors Assembly : EasyRpc.AspNetCore.dll Syntax public class DefaultErrorHandler : IErrorHandler, IApiConfigurationCompleteAware Constructors | Improve this Doc View Source DefaultErrorHandler(IErrorWrappingService) Default constructor Declaration public DefaultErrorHandler(IErrorWrappingService errorWrappingService) Parameters Type Name Description IErrorWrappingService errorWrappingService Fields | Improve this Doc View Source ContentSerializationService Content serialization service Declaration protected IContentSerializationService ContentSerializationService Field Value Type Description IContentSerializationService | Improve this Doc View Source ErrorWrappingService Error wrapping service Declaration protected IErrorWrappingService ErrorWrappingService Field Value Type Description IErrorWrappingService Methods | Improve this Doc View Source ApiConfigurationComplete(IServiceProvider) Declaration public void ApiConfigurationComplete(IServiceProvider serviceScope) Parameters Type Name Description IServiceProvider serviceScope | Improve this Doc View Source HandleDeserializeUnknownContentType<T>(RequestExecutionContext) Handle unknown content type error Declaration public virtual ValueTask<T> HandleDeserializeUnknownContentType<T>(RequestExecutionContext context) Parameters Type Name Description RequestExecutionContext context Returns Type Description ValueTask <T> Type Parameters Name Description T | Improve this Doc View Source HandleException(RequestExecutionContext, Exception) Handle exception from request Declaration public virtual Task HandleException(RequestExecutionContext context, Exception exception) Parameters Type Name Description RequestExecutionContext context Exception exception Returns Type Description Task | Improve this Doc View Source HandleSerializerUnknownContentType(RequestExecutionContext) Handle error where no content serializer can be found Declaration public virtual Task HandleSerializerUnknownContentType(RequestExecutionContext context) Parameters Type Name Description RequestExecutionContext context Returns Type Description Task | Improve this Doc View Source HandleUnauthorized(RequestExecutionContext) Handle unauthorized request Declaration public virtual Task HandleUnauthorized(RequestExecutionContext context) Parameters Type Name Description RequestExecutionContext context Returns Type Description Task | Improve this Doc View Source Return401(RequestExecutionContext) Return 401 error Declaration protected virtual Task Return401(RequestExecutionContext context) Parameters Type Name Description RequestExecutionContext context Returns Type Description Task | Improve this Doc View Source Return403(RequestExecutionContext) Return 403 error Declaration protected virtual Task Return403(RequestExecutionContext context) Parameters Type Name Description RequestExecutionContext context Returns Type Description Task Implements IErrorHandler IApiConfigurationCompleteAware"
  },
  "api/EasyRpc.AspNetCore.Errors.ErrorWrappingService.html": {
    "href": "api/EasyRpc.AspNetCore.Errors.ErrorWrappingService.html",
    "title": "Class ErrorWrappingService | EasyRpc documentation website",
    "keywords": "Class ErrorWrappingService Wraps exception with error class Inheritance Object ErrorWrappingService Implements IErrorWrappingService Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : EasyRpc.AspNetCore.Errors Assembly : EasyRpc.AspNetCore.dll Syntax public class ErrorWrappingService : IErrorWrappingService Constructors | Improve this Doc View Source ErrorWrappingService(IErrorResultTypeCreator) Default constructor Declaration public ErrorWrappingService(IErrorResultTypeCreator errorResultTypeCreator) Parameters Type Name Description IErrorResultTypeCreator errorResultTypeCreator Methods | Improve this Doc View Source GetErrorWrapper() Declaration public IErrorWrapper GetErrorWrapper() Returns Type Description IErrorWrapper | Improve this Doc View Source WrapError(RequestExecutionContext, Exception) Declaration public object WrapError(RequestExecutionContext context, Exception e) Parameters Type Name Description RequestExecutionContext context Exception e Returns Type Description Object Implements IErrorWrappingService"
  },
  "api/EasyRpc.AspNetCore.Errors.html": {
    "href": "api/EasyRpc.AspNetCore.Errors.html",
    "title": "Namespace EasyRpc.AspNetCore.Errors | EasyRpc documentation website",
    "keywords": "Namespace EasyRpc.AspNetCore.Errors Classes DefaultErrorHandler Default error handler ErrorWrappingService Wraps exception with error class Interfaces IErrorHandler Error handling service IErrorWrapper Error wrapping interface IErrorWrappingService Service that returns an error object given an exception"
  },
  "api/EasyRpc.AspNetCore.Errors.IErrorHandler.html": {
    "href": "api/EasyRpc.AspNetCore.Errors.IErrorHandler.html",
    "title": "Interface IErrorHandler | EasyRpc documentation website",
    "keywords": "Interface IErrorHandler Error handling service Namespace : EasyRpc.AspNetCore.Errors Assembly : EasyRpc.AspNetCore.dll Syntax public interface IErrorHandler Methods | Improve this Doc View Source HandleDeserializeUnknownContentType<T>(RequestExecutionContext) Handle unknown content type error Declaration ValueTask<T> HandleDeserializeUnknownContentType<T>(RequestExecutionContext context) Parameters Type Name Description RequestExecutionContext context Returns Type Description ValueTask <T> Type Parameters Name Description T | Improve this Doc View Source HandleException(RequestExecutionContext, Exception) Handle exception from request Declaration Task HandleException(RequestExecutionContext context, Exception e) Parameters Type Name Description RequestExecutionContext context Exception e Returns Type Description Task | Improve this Doc View Source HandleSerializerUnknownContentType(RequestExecutionContext) Handle error where no content serializer can be found Declaration Task HandleSerializerUnknownContentType(RequestExecutionContext context) Parameters Type Name Description RequestExecutionContext context Returns Type Description Task | Improve this Doc View Source HandleUnauthorized(RequestExecutionContext) Handle unauthorized request Declaration Task HandleUnauthorized(RequestExecutionContext context) Parameters Type Name Description RequestExecutionContext context Returns Type Description Task"
  },
  "api/EasyRpc.AspNetCore.Errors.IErrorWrapper.html": {
    "href": "api/EasyRpc.AspNetCore.Errors.IErrorWrapper.html",
    "title": "Interface IErrorWrapper | EasyRpc documentation website",
    "keywords": "Interface IErrorWrapper Error wrapping interface Namespace : EasyRpc.AspNetCore.Errors Assembly : EasyRpc.AspNetCore.dll Syntax public interface IErrorWrapper Properties | Improve this Doc View Source Message Error message Declaration string Message { get; set; } Property Value Type Description String"
  },
  "api/EasyRpc.AspNetCore.Errors.IErrorWrappingService.html": {
    "href": "api/EasyRpc.AspNetCore.Errors.IErrorWrappingService.html",
    "title": "Interface IErrorWrappingService | EasyRpc documentation website",
    "keywords": "Interface IErrorWrappingService Service that returns an error object given an exception Namespace : EasyRpc.AspNetCore.Errors Assembly : EasyRpc.AspNetCore.dll Syntax public interface IErrorWrappingService Methods | Improve this Doc View Source GetErrorWrapper() Declaration IErrorWrapper GetErrorWrapper() Returns Type Description IErrorWrapper | Improve this Doc View Source WrapError(RequestExecutionContext, Exception) Declaration object WrapError(RequestExecutionContext context, Exception e) Parameters Type Name Description RequestExecutionContext context Exception e Returns Type Description Object"
  },
  "api/EasyRpc.AspNetCore.Filters.html": {
    "href": "api/EasyRpc.AspNetCore.Filters.html",
    "title": "Namespace EasyRpc.AspNetCore.Filters | EasyRpc documentation website",
    "keywords": "Namespace EasyRpc.AspNetCore.Filters Classes InstanceFilterAttribute Attribute methods or classes with instance filter Interfaces IAsyncRequestExceptionFilter Async filter for handling exceptions IAsyncRequestExecutionFilter Asynchronous execution filter IAsyncRequestFinalizeFilter Request filter that will be called after the response has been written IBaseRequestFinalizerFilter Base filter interface IRequestExecutionFilter Synchronous execution filter IRequestFilter Base interface for all filters IRequestFilterAttribute Interface for attributes that produce a filter IRequestFinalizeFilter Request filter that will be called after the response has been written"
  },
  "api/EasyRpc.AspNetCore.Filters.IAsyncRequestExceptionFilter.html": {
    "href": "api/EasyRpc.AspNetCore.Filters.IAsyncRequestExceptionFilter.html",
    "title": "Interface IAsyncRequestExceptionFilter | EasyRpc documentation website",
    "keywords": "Interface IAsyncRequestExceptionFilter Async filter for handling exceptions Namespace : EasyRpc.AspNetCore.Filters Assembly : EasyRpc.AspNetCore.dll Syntax public interface IAsyncRequestExceptionFilter : IRequestFilter Methods | Improve this Doc View Source HandleException(RequestExecutionContext, Exception) Handle exception Declaration Task HandleException(RequestExecutionContext context, Exception exception) Parameters Type Name Description RequestExecutionContext context Exception exception Returns Type Description Task"
  },
  "api/EasyRpc.AspNetCore.Filters.IAsyncRequestExecutionFilter.html": {
    "href": "api/EasyRpc.AspNetCore.Filters.IAsyncRequestExecutionFilter.html",
    "title": "Interface IAsyncRequestExecutionFilter | EasyRpc documentation website",
    "keywords": "Interface IAsyncRequestExecutionFilter Asynchronous execution filter Namespace : EasyRpc.AspNetCore.Filters Assembly : EasyRpc.AspNetCore.dll Syntax public interface IAsyncRequestExecutionFilter : IRequestFilter Methods | Improve this Doc View Source AfterExecute(RequestExecutionContext) Called after the execution Declaration Task AfterExecute(RequestExecutionContext context) Parameters Type Name Description RequestExecutionContext context Returns Type Description Task | Improve this Doc View Source BeforeExecute(RequestExecutionContext) Called before the execution happens. Declaration Task BeforeExecute(RequestExecutionContext context) Parameters Type Name Description RequestExecutionContext context Returns Type Description Task"
  },
  "api/EasyRpc.AspNetCore.Filters.IAsyncRequestFinalizeFilter.html": {
    "href": "api/EasyRpc.AspNetCore.Filters.IAsyncRequestFinalizeFilter.html",
    "title": "Interface IAsyncRequestFinalizeFilter | EasyRpc documentation website",
    "keywords": "Interface IAsyncRequestFinalizeFilter Request filter that will be called after the response has been written Namespace : EasyRpc.AspNetCore.Filters Assembly : EasyRpc.AspNetCore.dll Syntax public interface IAsyncRequestFinalizeFilter : IBaseRequestFinalizerFilter, IRequestFilter Methods | Improve this Doc View Source Finalize(RequestExecutionContext) Finalize request, called after response has been written Declaration Task Finalize(RequestExecutionContext context) Parameters Type Name Description RequestExecutionContext context Returns Type Description Task"
  },
  "api/EasyRpc.AspNetCore.Filters.IBaseRequestFinalizerFilter.html": {
    "href": "api/EasyRpc.AspNetCore.Filters.IBaseRequestFinalizerFilter.html",
    "title": "Interface IBaseRequestFinalizerFilter | EasyRpc documentation website",
    "keywords": "Interface IBaseRequestFinalizerFilter Base filter interface Namespace : EasyRpc.AspNetCore.Filters Assembly : EasyRpc.AspNetCore.dll Syntax public interface IBaseRequestFinalizerFilter : IRequestFilter"
  },
  "api/EasyRpc.AspNetCore.Filters.InstanceFilterAttribute.html": {
    "href": "api/EasyRpc.AspNetCore.Filters.InstanceFilterAttribute.html",
    "title": "Class InstanceFilterAttribute | EasyRpc documentation website",
    "keywords": "Class InstanceFilterAttribute Attribute methods or classes with instance filter Inheritance Object Attribute InstanceFilterAttribute Implements IRequestFilterAttribute Inherited Members Attribute.Equals(Object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, Boolean) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, Boolean) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, Boolean) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, Boolean) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, Boolean) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, Boolean) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, Boolean) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, Boolean) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, Boolean) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Boolean) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, Boolean) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, Boolean) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, Boolean) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, Boolean) Attribute.Match(Object) Attribute.TypeId Object.Equals(Object, Object) Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : EasyRpc.AspNetCore.Filters Assembly : EasyRpc.AspNetCore.dll Syntax public class InstanceFilterAttribute : Attribute, IRequestFilterAttribute Constructors | Improve this Doc View Source InstanceFilterAttribute(Type) Default constructor Declaration public InstanceFilterAttribute(Type filterType) Parameters Type Name Description Type filterType Properties | Improve this Doc View Source Shared Is this filter shared Declaration public bool Shared { get; set; } Property Value Type Description Boolean Methods | Improve this Doc View Source ProvideFilters(ICurrentApiInformation, IEndPointMethodConfigurationReadOnly) Provide a list of filters Declaration public IEnumerable<Func<RequestExecutionContext, IRequestFilter>> ProvideFilters(ICurrentApiInformation currentApi, IEndPointMethodConfigurationReadOnly configurationReadOnly) Parameters Type Name Description ICurrentApiInformation currentApi IEndPointMethodConfigurationReadOnly configurationReadOnly Returns Type Description IEnumerable < Func < RequestExecutionContext , IRequestFilter >> Implements IRequestFilterAttribute"
  },
  "api/EasyRpc.AspNetCore.Filters.IRequestExecutionFilter.html": {
    "href": "api/EasyRpc.AspNetCore.Filters.IRequestExecutionFilter.html",
    "title": "Interface IRequestExecutionFilter | EasyRpc documentation website",
    "keywords": "Interface IRequestExecutionFilter Synchronous execution filter Namespace : EasyRpc.AspNetCore.Filters Assembly : EasyRpc.AspNetCore.dll Syntax public interface IRequestExecutionFilter : IRequestFilter Methods | Improve this Doc View Source AfterExecute(RequestExecutionContext) Called after the execution Declaration void AfterExecute(RequestExecutionContext context) Parameters Type Name Description RequestExecutionContext context | Improve this Doc View Source BeforeExecute(RequestExecutionContext) Called before the execution happens. Declaration void BeforeExecute(RequestExecutionContext context) Parameters Type Name Description RequestExecutionContext context"
  },
  "api/EasyRpc.AspNetCore.Filters.IRequestFilter.html": {
    "href": "api/EasyRpc.AspNetCore.Filters.IRequestFilter.html",
    "title": "Interface IRequestFilter | EasyRpc documentation website",
    "keywords": "Interface IRequestFilter Base interface for all filters Namespace : EasyRpc.AspNetCore.Filters Assembly : EasyRpc.AspNetCore.dll Syntax public interface IRequestFilter"
  },
  "api/EasyRpc.AspNetCore.Filters.IRequestFilterAttribute.html": {
    "href": "api/EasyRpc.AspNetCore.Filters.IRequestFilterAttribute.html",
    "title": "Interface IRequestFilterAttribute | EasyRpc documentation website",
    "keywords": "Interface IRequestFilterAttribute Interface for attributes that produce a filter Namespace : EasyRpc.AspNetCore.Filters Assembly : EasyRpc.AspNetCore.dll Syntax public interface IRequestFilterAttribute Methods | Improve this Doc View Source ProvideFilters(ICurrentApiInformation, IEndPointMethodConfigurationReadOnly) Provide a list of filters Declaration IEnumerable<Func<RequestExecutionContext, IRequestFilter>> ProvideFilters(ICurrentApiInformation currentApi, IEndPointMethodConfigurationReadOnly configurationReadOnly) Parameters Type Name Description ICurrentApiInformation currentApi IEndPointMethodConfigurationReadOnly configurationReadOnly Returns Type Description IEnumerable < Func < RequestExecutionContext , IRequestFilter >>"
  },
  "api/EasyRpc.AspNetCore.Filters.IRequestFinalizeFilter.html": {
    "href": "api/EasyRpc.AspNetCore.Filters.IRequestFinalizeFilter.html",
    "title": "Interface IRequestFinalizeFilter | EasyRpc documentation website",
    "keywords": "Interface IRequestFinalizeFilter Request filter that will be called after the response has been written Namespace : EasyRpc.AspNetCore.Filters Assembly : EasyRpc.AspNetCore.dll Syntax public interface IRequestFinalizeFilter : IBaseRequestFinalizerFilter, IRequestFilter Methods | Improve this Doc View Source Finalize(RequestExecutionContext) Finalize request, called after response has been written Declaration void Finalize(RequestExecutionContext context) Parameters Type Name Description RequestExecutionContext context"
  },
  "api/EasyRpc.AspNetCore.FluentValidation.ApiConfigurationExtensions.html": {
    "href": "api/EasyRpc.AspNetCore.FluentValidation.ApiConfigurationExtensions.html",
    "title": "Class ApiConfigurationExtensions | EasyRpc documentation website",
    "keywords": "Class ApiConfigurationExtensions Api configuration extension class Inheritance Object ApiConfigurationExtensions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : EasyRpc.AspNetCore.FluentValidation Assembly : EasyRpc.AspNetCore.FluentValidation.dll Syntax public static class ApiConfigurationExtensions Methods | Improve this Doc View Source ApplyFluentValidation(IApiConfiguration) Apply filter that locates validator for models Declaration public static IApiConfiguration ApplyFluentValidation(this IApiConfiguration configuration) Parameters Type Name Description IApiConfiguration configuration Returns Type Description IApiConfiguration"
  },
  "api/EasyRpc.AspNetCore.FluentValidation.html": {
    "href": "api/EasyRpc.AspNetCore.FluentValidation.html",
    "title": "Namespace EasyRpc.AspNetCore.FluentValidation | EasyRpc documentation website",
    "keywords": "Namespace EasyRpc.AspNetCore.FluentValidation Classes ApiConfigurationExtensions Api configuration extension class"
  },
  "api/EasyRpc.AspNetCore.FluentValidation.Impl.EasyRpcValidationFilter.html": {
    "href": "api/EasyRpc.AspNetCore.FluentValidation.Impl.EasyRpcValidationFilter.html",
    "title": "Class EasyRpcValidationFilter | EasyRpc documentation website",
    "keywords": "Class EasyRpcValidationFilter Inheritance Object EasyRpcValidationFilter Implements IAsyncRequestExecutionFilter IRequestFilter Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : EasyRpc.AspNetCore.FluentValidation.Impl Assembly : EasyRpc.AspNetCore.FluentValidation.dll Syntax public class EasyRpcValidationFilter : IAsyncRequestExecutionFilter, IRequestFilter Constructors | Improve this Doc View Source EasyRpcValidationFilter(IParameterValidator[]) Declaration public EasyRpcValidationFilter(IParameterValidator[] validators) Parameters Type Name Description IParameterValidator [] validators Methods | Improve this Doc View Source AfterExecute(RequestExecutionContext) Declaration public Task AfterExecute(RequestExecutionContext context) Parameters Type Name Description RequestExecutionContext context Returns Type Description Task | Improve this Doc View Source BeforeExecute(RequestExecutionContext) Declaration public Task BeforeExecute(RequestExecutionContext context) Parameters Type Name Description RequestExecutionContext context Returns Type Description Task Implements IAsyncRequestExecutionFilter IRequestFilter"
  },
  "api/EasyRpc.AspNetCore.FluentValidation.Impl.html": {
    "href": "api/EasyRpc.AspNetCore.FluentValidation.Impl.html",
    "title": "Namespace EasyRpc.AspNetCore.FluentValidation.Impl | EasyRpc documentation website",
    "keywords": "Namespace EasyRpc.AspNetCore.FluentValidation.Impl Classes EasyRpcValidationFilter ParameterValidator<T> ValidationFilterProvider Interfaces IParameterValidator"
  },
  "api/EasyRpc.AspNetCore.FluentValidation.Impl.IParameterValidator.html": {
    "href": "api/EasyRpc.AspNetCore.FluentValidation.Impl.IParameterValidator.html",
    "title": "Interface IParameterValidator | EasyRpc documentation website",
    "keywords": "Interface IParameterValidator Namespace : EasyRpc.AspNetCore.FluentValidation.Impl Assembly : EasyRpc.AspNetCore.FluentValidation.dll Syntax public interface IParameterValidator Methods | Improve this Doc View Source Execute(RequestExecutionContext) Declaration Task Execute(RequestExecutionContext context) Parameters Type Name Description RequestExecutionContext context Returns Type Description Task"
  },
  "api/EasyRpc.AspNetCore.FluentValidation.Impl.ParameterValidator-1.html": {
    "href": "api/EasyRpc.AspNetCore.FluentValidation.Impl.ParameterValidator-1.html",
    "title": "Class ParameterValidator<T> | EasyRpc documentation website",
    "keywords": "Class ParameterValidator<T> Inheritance Object ParameterValidator<T> Implements IParameterValidator Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : EasyRpc.AspNetCore.FluentValidation.Impl Assembly : EasyRpc.AspNetCore.FluentValidation.dll Syntax public class ParameterValidator<T> : IParameterValidator Type Parameters Name Description T Constructors | Improve this Doc View Source ParameterValidator(IErrorWrappingService, Int32) Declaration public ParameterValidator(IErrorWrappingService errorWrappingService, int position) Parameters Type Name Description IErrorWrappingService errorWrappingService Int32 position Methods | Improve this Doc View Source Execute(RequestExecutionContext) Declaration public Task Execute(RequestExecutionContext context) Parameters Type Name Description RequestExecutionContext context Returns Type Description Task Implements IParameterValidator"
  },
  "api/EasyRpc.AspNetCore.FluentValidation.Impl.ValidationFilterProvider.html": {
    "href": "api/EasyRpc.AspNetCore.FluentValidation.Impl.ValidationFilterProvider.html",
    "title": "Class ValidationFilterProvider | EasyRpc documentation website",
    "keywords": "Class ValidationFilterProvider Inheritance Object ValidationFilterProvider Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : EasyRpc.AspNetCore.FluentValidation.Impl Assembly : EasyRpc.AspNetCore.FluentValidation.dll Syntax public class ValidationFilterProvider Constructors | Improve this Doc View Source ValidationFilterProvider(IErrorWrappingService) Declaration public ValidationFilterProvider(IErrorWrappingService errorWrappingService) Parameters Type Name Description IErrorWrappingService errorWrappingService Methods | Improve this Doc View Source GetFilters(IEndPointMethodConfigurationReadOnly) Declaration public Func<RequestExecutionContext, IRequestFilter> GetFilters(IEndPointMethodConfigurationReadOnly method) Parameters Type Name Description IEndPointMethodConfigurationReadOnly method Returns Type Description Func < RequestExecutionContext , IRequestFilter >"
  },
  "api/EasyRpc.AspNetCore.html": {
    "href": "api/EasyRpc.AspNetCore.html",
    "title": "Namespace EasyRpc.AspNetCore | EasyRpc documentation website",
    "keywords": "Namespace EasyRpc.AspNetCore Classes AppBuilderExtensions C# extension methods for app building DocumentationOptions Documentation options IApiConfigurationExtensions static extension class for IApiConfiguration IEnvironmentConfigurationExtensions Static C# extensions for the configuration object RequestExecutionContext Context created for every request RpcParameterInfo Rpc parameter object TypesThat Static class that offers type filters Interfaces IApiConfiguration Api configuration interface IEndPointMethodConfigurationReadOnly EndPoint method configuration IEnvironmentConfiguration Interface for configuring rpc environment IExposureConfiguration Exposure configuration IExposureConfiguration<T> Typed Exposure configuration IExposureExpressionConfiguration configuration object for exposure expression IRequestParameters parameters for request IResultWrapper base interface for result wrapper IResultWrapper<T> Interface for wrapping result value IRpcParameterInfo Parameter info for method ITypeSetExposureConfiguration configuration for set of types Enums EndPointMethodParameterSource parameter sources"
  },
  "api/EasyRpc.AspNetCore.IApiConfiguration.html": {
    "href": "api/EasyRpc.AspNetCore.IApiConfiguration.html",
    "title": "Interface IApiConfiguration | EasyRpc documentation website",
    "keywords": "Interface IApiConfiguration Api configuration interface Namespace : EasyRpc.AspNetCore Assembly : EasyRpc.AspNetCore.dll Syntax public interface IApiConfiguration Properties | Improve this Doc View Source AppServices Application services Declaration IServiceProvider AppServices { get; } Property Value Type Description IServiceProvider | Improve this Doc View Source Configure Configuration options that apply for all end points Declaration IEnvironmentConfiguration Configure { get; } Property Value Type Description IEnvironmentConfiguration Methods | Improve this Doc View Source ApplyFilter(Func<IEndPointMethodConfigurationReadOnly, Func<RequestExecutionContext, IRequestFilter>>) Declaration IApiConfiguration ApplyFilter(Func<IEndPointMethodConfigurationReadOnly, Func<RequestExecutionContext, IRequestFilter>> filterFunc) Parameters Type Name Description Func < IEndPointMethodConfigurationReadOnly , Func < RequestExecutionContext , IRequestFilter >> filterFunc Returns Type Description IApiConfiguration | Improve this Doc View Source ApplyFilter<T>(Func<MethodInfo, Boolean>, Boolean) Apply call filter Declaration IApiConfiguration ApplyFilter<T>(Func<MethodInfo, bool> where = null, bool shared = false) where T : IRequestFilter Parameters Type Name Description Func < MethodInfo , Boolean > where Boolean shared Returns Type Description IApiConfiguration Type Parameters Name Description T | Improve this Doc View Source Authorize(Func<IEndPointMethodConfigurationReadOnly, IEnumerable<IEndPointMethodAuthorization>>) Apply authorize to types Declaration IApiConfiguration Authorize(Func<IEndPointMethodConfigurationReadOnly, IEnumerable<IEndPointMethodAuthorization>> authorizations) Parameters Type Name Description Func < IEndPointMethodConfigurationReadOnly , IEnumerable < IEndPointMethodAuthorization >> authorizations Returns Type Description IApiConfiguration | Improve this Doc View Source Authorize(String, String) Set default Authorize Declaration IApiConfiguration Authorize(string role = null, string policy = null) Parameters Type Name Description String role String policy Returns Type Description IApiConfiguration | Improve this Doc View Source ClearAuthorize() Clear authorize flags Declaration IApiConfiguration ClearAuthorize() Returns Type Description IApiConfiguration | Improve this Doc View Source ClearHeaders() Clear all global headers Declaration IApiConfiguration ClearHeaders() Returns Type Description IApiConfiguration | Improve this Doc View Source ClearMethodFilters() Clear method filters Declaration IApiConfiguration ClearMethodFilters() Returns Type Description IApiConfiguration | Improve this Doc View Source ClearPrefixes() Clear prefixes Declaration IApiConfiguration ClearPrefixes() Returns Type Description IApiConfiguration | Improve this Doc View Source DefaultHttpMethod(ExposeDefaultMethod) Set the default http method to be used when exposing method Declaration IApiConfiguration DefaultHttpMethod(ExposeDefaultMethod defaultMethod) Parameters Type Name Description ExposeDefaultMethod defaultMethod Returns Type Description IApiConfiguration | Improve this Doc View Source Expose(IEnumerable<Type>) Expose a set of types Declaration ITypeSetExposureConfiguration Expose(IEnumerable<Type> types) Parameters Type Name Description IEnumerable < Type > types Returns Type Description ITypeSetExposureConfiguration | Improve this Doc View Source Expose(Type) Expose type for RPC Declaration IExposureConfiguration Expose(Type type) Parameters Type Name Description Type type Returns Type Description IExposureConfiguration | Improve this Doc View Source Expose<T>() Expose type for RPC Declaration IExposureConfiguration<T> Expose<T>() Returns Type Description IExposureConfiguration <T> Type Parameters Name Description T | Improve this Doc View Source GetMethod<TResult>(String, Expression<Func<TResult>>) Register simple GET method Declaration IExposureExpressionConfiguration GetMethod<TResult>(string path, Expression<Func<TResult>> method) Parameters Type Name Description String path Expression < Func <TResult>> method Returns Type Description IExposureExpressionConfiguration Type Parameters Name Description TResult | Improve this Doc View Source GetMethod<TArg1, TResult>(String, Expression<Func<TArg1, TResult>>) Register simple GET method Declaration IExposureExpressionConfiguration GetMethod<TArg1, TResult>(string path, Expression<Func<TArg1, TResult>> method) Parameters Type Name Description String path Expression < Func <TArg1, TResult>> method Returns Type Description IExposureExpressionConfiguration Type Parameters Name Description TArg1 TResult | Improve this Doc View Source GetMethod<TArg1, TArg2, TResult>(String, Expression<Func<TArg1, TArg2, TResult>>) Register simple GET method Declaration IExposureExpressionConfiguration GetMethod<TArg1, TArg2, TResult>(string path, Expression<Func<TArg1, TArg2, TResult>> method) Parameters Type Name Description String path Expression < Func <TArg1, TArg2, TResult>> method Returns Type Description IExposureExpressionConfiguration Type Parameters Name Description TArg1 TArg2 TResult | Improve this Doc View Source GetMethod<TArg1, TArg2, TArg3, TResult>(String, Expression<Func<TArg1, TArg2, TArg3, TResult>>) Register simple GET method Declaration IExposureExpressionConfiguration GetMethod<TArg1, TArg2, TArg3, TResult>(string path, Expression<Func<TArg1, TArg2, TArg3, TResult>> method) Parameters Type Name Description String path Expression < Func <TArg1, TArg2, TArg3, TResult>> method Returns Type Description IExposureExpressionConfiguration Type Parameters Name Description TArg1 TArg2 TArg3 TResult | Improve this Doc View Source Header(String, String) Add header to all responses Declaration IApiConfiguration Header(string header, string value) Parameters Type Name Description String header String value Returns Type Description IApiConfiguration | Improve this Doc View Source HttpMethod<TResult>(String, String, Expression<Func<TResult>>) Register simple GET method Declaration IExposureExpressionConfiguration HttpMethod<TResult>(string httpMethod, string path, Expression<Func<TResult>> method) Parameters Type Name Description String httpMethod String path Expression < Func <TResult>> method Returns Type Description IExposureExpressionConfiguration Type Parameters Name Description TResult | Improve this Doc View Source HttpMethod<TArg1, TResult>(String, String, Expression<Func<TArg1, TResult>>) Register simple GET method Declaration IExposureExpressionConfiguration HttpMethod<TArg1, TResult>(string httpMethod, string path, Expression<Func<TArg1, TResult>> method) Parameters Type Name Description String httpMethod String path Expression < Func <TArg1, TResult>> method Returns Type Description IExposureExpressionConfiguration Type Parameters Name Description TArg1 TResult | Improve this Doc View Source HttpMethod<TArg1, TArg2, TResult>(String, String, Expression<Func<TArg1, TArg2, TResult>>) Register simple GET method Declaration IExposureExpressionConfiguration HttpMethod<TArg1, TArg2, TResult>(string httpMethod, string path, Expression<Func<TArg1, TArg2, TResult>> method) Parameters Type Name Description String httpMethod String path Expression < Func <TArg1, TArg2, TResult>> method Returns Type Description IExposureExpressionConfiguration Type Parameters Name Description TArg1 TArg2 TResult | Improve this Doc View Source HttpMethod<TArg1, TArg2, TArg3, TResult>(String, String, Expression<Func<TArg1, TArg2, TArg3, TResult>>) Register simple GET method Declaration IExposureExpressionConfiguration HttpMethod<TArg1, TArg2, TArg3, TResult>(string httpMethod, string path, Expression<Func<TArg1, TArg2, TArg3, TResult>> method) Parameters Type Name Description String httpMethod String path Expression < Func <TArg1, TArg2, TArg3, TResult>> method Returns Type Description IExposureExpressionConfiguration Type Parameters Name Description TArg1 TArg2 TArg3 TResult | Improve this Doc View Source MethodFilter(Func<MethodInfo, Boolean>) Add method filter Declaration IApiConfiguration MethodFilter(Func<MethodInfo, bool> methodFilter) Parameters Type Name Description Func < MethodInfo , Boolean > methodFilter Returns Type Description IApiConfiguration | Improve this Doc View Source PostMethod<TArg1, TResult>(String, Expression<Func<TArg1, TResult>>) Simple post method Declaration IExposureExpressionConfiguration PostMethod<TArg1, TResult>(string path, Expression<Func<TArg1, TResult>> postExpression) Parameters Type Name Description String path Expression < Func <TArg1, TResult>> postExpression Returns Type Description IExposureExpressionConfiguration Type Parameters Name Description TArg1 TResult | Improve this Doc View Source PostMethod<TArg1, TArg2, TResult>(String, Expression<Func<TArg1, TArg2, TResult>>) Simple post method with two arg Declaration IExposureExpressionConfiguration PostMethod<TArg1, TArg2, TResult>(string path, Expression<Func<TArg1, TArg2, TResult>> postExpression) Parameters Type Name Description String path Expression < Func <TArg1, TArg2, TResult>> postExpression Returns Type Description IExposureExpressionConfiguration Type Parameters Name Description TArg1 TArg2 TResult | Improve this Doc View Source PostMethod<TArg1, TArg2, TArg3, TResult>(String, Expression<Func<TArg1, TArg2, TArg3, TResult>>) Simple post method with two arg Declaration IExposureExpressionConfiguration PostMethod<TArg1, TArg2, TArg3, TResult>(string path, Expression<Func<TArg1, TArg2, TArg3, TResult>> postExpression) Parameters Type Name Description String path Expression < Func <TArg1, TArg2, TArg3, TResult>> postExpression Returns Type Description IExposureExpressionConfiguration Type Parameters Name Description TArg1 TArg2 TArg3 TResult | Improve this Doc View Source Prefix(Func<Type, IEnumerable<String>>) Prefix function returns list of prefixes based on type Declaration IApiConfiguration Prefix(Func<Type, IEnumerable<string>> prefixFunc) Parameters Type Name Description Func < Type , IEnumerable < String >> prefixFunc Returns Type Description IApiConfiguration | Improve this Doc View Source Prefix(String) Apply prefix Declaration IApiConfiguration Prefix(string prefix) Parameters Type Name Description String prefix Returns Type Description IApiConfiguration Extension Methods ApiConfigurationExtensions.ApplyFluentValidation(IApiConfiguration) IApiConfigurationExtensions.ExposeNamespaceContaining<T>(IApiConfiguration)"
  },
  "api/EasyRpc.AspNetCore.IApiConfigurationExtensions.html": {
    "href": "api/EasyRpc.AspNetCore.IApiConfigurationExtensions.html",
    "title": "Class IApiConfigurationExtensions | EasyRpc documentation website",
    "keywords": "Class IApiConfigurationExtensions static extension class for IApiConfiguration Inheritance Object IApiConfigurationExtensions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : EasyRpc.AspNetCore Assembly : EasyRpc.AspNetCore.dll Syntax public static class IApiConfigurationExtensions Methods | Improve this Doc View Source ExposeNamespaceContaining<T>(IApiConfiguration) Expose types in the same assembly and namespace as T Declaration public static ITypeSetExposureConfiguration ExposeNamespaceContaining<T>(this IApiConfiguration configuration) Parameters Type Name Description IApiConfiguration configuration Returns Type Description ITypeSetExposureConfiguration Type Parameters Name Description T"
  },
  "api/EasyRpc.AspNetCore.IEndPointMethodConfigurationReadOnly.html": {
    "href": "api/EasyRpc.AspNetCore.IEndPointMethodConfigurationReadOnly.html",
    "title": "Interface IEndPointMethodConfigurationReadOnly | EasyRpc documentation website",
    "keywords": "Interface IEndPointMethodConfigurationReadOnly EndPoint method configuration Namespace : EasyRpc.AspNetCore Assembly : EasyRpc.AspNetCore.dll Syntax public interface IEndPointMethodConfigurationReadOnly Properties | Improve this Doc View Source ActivationFunc Func used to activate instance Declaration Func<RequestExecutionContext, object> ActivationFunc { get; } Property Value Type Description Func < RequestExecutionContext , Object > | Improve this Doc View Source Authorizations List of authorizations, can be null Declaration IReadOnlyList<IEndPointMethodAuthorization> Authorizations { get; } Property Value Type Description IReadOnlyList < IEndPointMethodAuthorization > | Improve this Doc View Source Filters List of filters, can be null Declaration IReadOnlyList<Func<RequestExecutionContext, IRequestFilter>> Filters { get; } Property Value Type Description IReadOnlyList < Func < RequestExecutionContext , IRequestFilter >> | Improve this Doc View Source InvokeInformation Information about how end point should be invoked Declaration IMethodInvokeInformation InvokeInformation { get; } Property Value Type Description IMethodInvokeInformation | Improve this Doc View Source Parameters List of parameters Declaration IReadOnlyList<RpcParameterInfo> Parameters { get; } Property Value Type Description IReadOnlyList < RpcParameterInfo > | Improve this Doc View Source RawContentEncoding Sets content encoding header if set Declaration string RawContentEncoding { get; } Property Value Type Description String | Improve this Doc View Source RawContentType If set this call will return raw bytes on the response body with the specified content type Declaration string RawContentType { get; } Property Value Type Description String | Improve this Doc View Source ResponseHeaders List of response headers to be applied to end point Declaration IReadOnlyList<IResponseHeader> ResponseHeaders { get; } Property Value Type Description IReadOnlyList < IResponseHeader > | Improve this Doc View Source ReturnType Return type of method Declaration Type ReturnType { get; } Property Value Type Description Type | Improve this Doc View Source RouteInformation End point route information Declaration IRpcRouteInformation RouteInformation { get; } Property Value Type Description IRpcRouteInformation | Improve this Doc View Source SuccessStatusCode Successful http status code (200 GET, 201 POST) Declaration int SuccessStatusCode { get; } Property Value Type Description Int32 | Improve this Doc View Source SupportsCompression Should result support compression Declaration bool? SupportsCompression { get; } Property Value Type Description Nullable < Boolean > | Improve this Doc View Source WrappedType Declaration Type WrappedType { get; } Property Value Type Description Type"
  },
  "api/EasyRpc.AspNetCore.IEnvironmentConfiguration.html": {
    "href": "api/EasyRpc.AspNetCore.IEnvironmentConfiguration.html",
    "title": "Interface IEnvironmentConfiguration | EasyRpc documentation website",
    "keywords": "Interface IEnvironmentConfiguration Interface for configuring rpc environment Namespace : EasyRpc.AspNetCore Assembly : EasyRpc.AspNetCore.dll Syntax public interface IEnvironmentConfiguration Methods | Improve this Doc View Source Action<T>(Action<T>) Configuration action to be applied to the rpc environment Declaration IEnvironmentConfiguration Action<T>(Action<T> valueAction) Parameters Type Name Description Action <T> valueAction Returns Type Description IEnvironmentConfiguration Type Parameters Name Description T Extension Methods IEnvironmentConfigurationExtensions.BasePath(IEnvironmentConfiguration, String) IEnvironmentConfigurationExtensions.Documentation(IEnvironmentConfiguration, Action<DocumentationOptions>) IEnvironmentConfigurationExtensions.DisableDocumentation(IEnvironmentConfiguration) IEnvironmentConfigurationExtensions.Exposures(IEnvironmentConfiguration, Action<ExposeConfigurations>) IEnvironmentConfigurationExtensions.SystemTextJson(IEnvironmentConfiguration, Action<JsonSerializerOptions>) IEnvironmentConfigurationExtensions.UseAspNetRouting(IEnvironmentConfiguration) NewtonsoftExtensions.NewtonsoftJson(IEnvironmentConfiguration, Action<JsonSerializer>)"
  },
  "api/EasyRpc.AspNetCore.IEnvironmentConfigurationExtensions.html": {
    "href": "api/EasyRpc.AspNetCore.IEnvironmentConfigurationExtensions.html",
    "title": "Class IEnvironmentConfigurationExtensions | EasyRpc documentation website",
    "keywords": "Class IEnvironmentConfigurationExtensions Static C# extensions for the configuration object Inheritance Object IEnvironmentConfigurationExtensions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : EasyRpc.AspNetCore Assembly : EasyRpc.AspNetCore.dll Syntax public static class IEnvironmentConfigurationExtensions Methods | Improve this Doc View Source BasePath(IEnvironmentConfiguration, String) Configure api base path Declaration public static IEnvironmentConfiguration BasePath(this IEnvironmentConfiguration configuration, string path) Parameters Type Name Description IEnvironmentConfiguration configuration String path Returns Type Description IEnvironmentConfiguration | Improve this Doc View Source DisableDocumentation(IEnvironmentConfiguration) Disable documentation for api Declaration public static IEnvironmentConfiguration DisableDocumentation(this IEnvironmentConfiguration configuration) Parameters Type Name Description IEnvironmentConfiguration configuration Returns Type Description IEnvironmentConfiguration | Improve this Doc View Source Documentation(IEnvironmentConfiguration, Action<DocumentationOptions>) Configure open api documentation Declaration public static IEnvironmentConfiguration Documentation(this IEnvironmentConfiguration configuration, Action<DocumentationOptions> options) Parameters Type Name Description IEnvironmentConfiguration configuration Action < DocumentationOptions > options Returns Type Description IEnvironmentConfiguration | Improve this Doc View Source Exposures(IEnvironmentConfiguration, Action<ExposeConfigurations>) Configures default exposures Declaration public static IEnvironmentConfiguration Exposures(this IEnvironmentConfiguration configuration, Action<ExposeConfigurations> configurationAction) Parameters Type Name Description IEnvironmentConfiguration configuration Action < ExposeConfigurations > configurationAction Returns Type Description IEnvironmentConfiguration | Improve this Doc View Source SystemTextJson(IEnvironmentConfiguration, Action<JsonSerializerOptions>) Configure System.Text.Json serializer Declaration public static IEnvironmentConfiguration SystemTextJson(this IEnvironmentConfiguration configuration, Action<JsonSerializerOptions> options) Parameters Type Name Description IEnvironmentConfiguration configuration Action < JsonSerializerOptions > options Returns Type Description IEnvironmentConfiguration | Improve this Doc View Source UseAspNetRouting(IEnvironmentConfiguration) Use Asp.Net routing instead of internal routing. Declaration public static IEnvironmentConfiguration UseAspNetRouting(this IEnvironmentConfiguration configuration) Parameters Type Name Description IEnvironmentConfiguration configuration Returns Type Description IEnvironmentConfiguration"
  },
  "api/EasyRpc.AspNetCore.IExposureConfiguration.html": {
    "href": "api/EasyRpc.AspNetCore.IExposureConfiguration.html",
    "title": "Interface IExposureConfiguration | EasyRpc documentation website",
    "keywords": "Interface IExposureConfiguration Exposure configuration Namespace : EasyRpc.AspNetCore Assembly : EasyRpc.AspNetCore.dll Syntax public interface IExposureConfiguration Methods | Improve this Doc View Source As(String) Expose type as a particular name Declaration IExposureConfiguration As(string name) Parameters Type Name Description String name Returns Type Description IExposureConfiguration | Improve this Doc View Source Authorize(String, String) Assign authorization to particular exposed type Declaration IExposureConfiguration Authorize(string role = null, string policy = null) Parameters Type Name Description String role optional role String policy optional policy Returns Type Description IExposureConfiguration | Improve this Doc View Source Methods(Func<MethodInfo, Boolean>) Filter out methods Declaration IExposureConfiguration Methods(Func<MethodInfo, bool> methods) Parameters Type Name Description Func < MethodInfo , Boolean > methods Returns Type Description IExposureConfiguration | Improve this Doc View Source Obsolete(String) Mark services as obsolete Declaration IExposureConfiguration Obsolete(string message) Parameters Type Name Description String message Returns Type Description IExposureConfiguration"
  },
  "api/EasyRpc.AspNetCore.IExposureConfiguration-1.html": {
    "href": "api/EasyRpc.AspNetCore.IExposureConfiguration-1.html",
    "title": "Interface IExposureConfiguration<T> | EasyRpc documentation website",
    "keywords": "Interface IExposureConfiguration<T> Typed Exposure configuration Namespace : EasyRpc.AspNetCore Assembly : EasyRpc.AspNetCore.dll Syntax public interface IExposureConfiguration<T> Type Parameters Name Description T Methods | Improve this Doc View Source As(String) Expose type as a specific name Declaration IExposureConfiguration<T> As(string name) Parameters Type Name Description String name Returns Type Description IExposureConfiguration <T> | Improve this Doc View Source Authorize(String, String) Add authorization rule to export Declaration IExposureConfiguration<T> Authorize(string role = null, string policy = null) Parameters Type Name Description String role String policy Returns Type Description IExposureConfiguration <T> | Improve this Doc View Source Methods(Func<MethodInfo, Boolean>) Export only particular methods Declaration IExposureConfiguration<T> Methods(Func<MethodInfo, bool> methods) Parameters Type Name Description Func < MethodInfo , Boolean > methods Returns Type Description IExposureConfiguration <T> | Improve this Doc View Source Obsolete(String) Mark service as obsolete Declaration IExposureConfiguration<T> Obsolete(string message) Parameters Type Name Description String message Returns Type Description IExposureConfiguration <T>"
  },
  "api/EasyRpc.AspNetCore.IExposureExpressionConfiguration.html": {
    "href": "api/EasyRpc.AspNetCore.IExposureExpressionConfiguration.html",
    "title": "Interface IExposureExpressionConfiguration | EasyRpc documentation website",
    "keywords": "Interface IExposureExpressionConfiguration configuration object for exposure expression Namespace : EasyRpc.AspNetCore Assembly : EasyRpc.AspNetCore.dll Syntax public interface IExposureExpressionConfiguration Methods | Improve this Doc View Source Authorize(String, String) Require authorization for method Declaration IExposureExpressionConfiguration Authorize(string role = null, string policy = null) Parameters Type Name Description String role String policy Returns Type Description IExposureExpressionConfiguration | Improve this Doc View Source Header(String, String) Adds response header Declaration IExposureExpressionConfiguration Header(string header, string value) Parameters Type Name Description String header String value Returns Type Description IExposureExpressionConfiguration | Improve this Doc View Source Raw(String) Return raw content as a specific content type Declaration IExposureExpressionConfiguration Raw(string contentType) Parameters Type Name Description String contentType Content-Type header value (i.e. text/plain, etc.) Returns Type Description IExposureExpressionConfiguration"
  },
  "api/EasyRpc.AspNetCore.IRequestParameters.html": {
    "href": "api/EasyRpc.AspNetCore.IRequestParameters.html",
    "title": "Interface IRequestParameters | EasyRpc documentation website",
    "keywords": "Interface IRequestParameters parameters for request Namespace : EasyRpc.AspNetCore Assembly : EasyRpc.AspNetCore.dll Syntax public interface IRequestParameters Properties | Improve this Doc View Source Item[Int32] Access parameters based on index Declaration object this[int index] { get; set; } Parameters Type Name Description Int32 index Property Value Type Description Object | Improve this Doc View Source Item[String] Access parameters by name Declaration virtual object this[string parameterName] { get; set; } Parameters Type Name Description String parameterName Property Value Type Description Object | Improve this Doc View Source ParameterCount Count of parameters Declaration int ParameterCount { get; } Property Value Type Description Int32 | Improve this Doc View Source ParameterInfos List of parameter info object for the call Declaration IReadOnlyList<IRpcParameterInfo> ParameterInfos { get; } Property Value Type Description IReadOnlyList < IRpcParameterInfo > Methods | Improve this Doc View Source Clone() Clone parameters Declaration IRequestParameters Clone() Returns Type Description IRequestParameters | Improve this Doc View Source TryGetParameter(String, out Object) Try getting parameter by name Declaration bool TryGetParameter(string parameterName, out object parameterValue) Parameters Type Name Description String parameterName Object parameterValue Returns Type Description Boolean | Improve this Doc View Source TrySetParameter(String, Object) Try setting parameter value by name Declaration bool TrySetParameter(string parameterName, object parameterValue) Parameters Type Name Description String parameterName Object parameterValue Returns Type Description Boolean"
  },
  "api/EasyRpc.AspNetCore.IResultWrapper.html": {
    "href": "api/EasyRpc.AspNetCore.IResultWrapper.html",
    "title": "Interface IResultWrapper | EasyRpc documentation website",
    "keywords": "Interface IResultWrapper base interface for result wrapper Namespace : EasyRpc.AspNetCore Assembly : EasyRpc.AspNetCore.dll Syntax public interface IResultWrapper"
  },
  "api/EasyRpc.AspNetCore.IResultWrapper-1.html": {
    "href": "api/EasyRpc.AspNetCore.IResultWrapper-1.html",
    "title": "Interface IResultWrapper<T> | EasyRpc documentation website",
    "keywords": "Interface IResultWrapper<T> Interface for wrapping result value Namespace : EasyRpc.AspNetCore Assembly : EasyRpc.AspNetCore.dll Syntax public interface IResultWrapper<T> : IResultWrapper Type Parameters Name Description T Properties | Improve this Doc View Source Result Result for call Declaration T Result { get; set; } Property Value Type Description T"
  },
  "api/EasyRpc.AspNetCore.IRpcParameterInfo.html": {
    "href": "api/EasyRpc.AspNetCore.IRpcParameterInfo.html",
    "title": "Interface IRpcParameterInfo | EasyRpc documentation website",
    "keywords": "Interface IRpcParameterInfo Parameter info for method Namespace : EasyRpc.AspNetCore Assembly : EasyRpc.AspNetCore.dll Syntax public interface IRpcParameterInfo Properties | Improve this Doc View Source DefaultValue Default value for parameter Declaration object DefaultValue { get; } Property Value Type Description Object | Improve this Doc View Source HasDefaultValue Has default value Declaration bool HasDefaultValue { get; } Property Value Type Description Boolean | Improve this Doc View Source Name Name of parameter Declaration string Name { get; } Property Value Type Description String | Improve this Doc View Source ParameterSource Source for parameter Declaration EndPointMethodParameterSource ParameterSource { get; } Property Value Type Description EndPointMethodParameterSource | Improve this Doc View Source ParamType Parameter type Declaration Type ParamType { get; } Property Value Type Description Type | Improve this Doc View Source Position Parameter index Declaration int Position { get; } Property Value Type Description Int32"
  },
  "api/EasyRpc.AspNetCore.ITypeSetExposureConfiguration.html": {
    "href": "api/EasyRpc.AspNetCore.ITypeSetExposureConfiguration.html",
    "title": "Interface ITypeSetExposureConfiguration | EasyRpc documentation website",
    "keywords": "Interface ITypeSetExposureConfiguration configuration for set of types Namespace : EasyRpc.AspNetCore Assembly : EasyRpc.AspNetCore.dll Syntax public interface ITypeSetExposureConfiguration Methods | Improve this Doc View Source As(Func<Type, IEnumerable<String>>) Function for picking name Declaration ITypeSetExposureConfiguration As(Func<Type, IEnumerable<string>> nameFunc) Parameters Type Name Description Func < Type , IEnumerable < String >> nameFunc Returns Type Description ITypeSetExposureConfiguration | Improve this Doc View Source Authorize(Func<Type, IEnumerable<IEndPointMethodAuthorization>>) Use func for providing authorization Declaration ITypeSetExposureConfiguration Authorize(Func<Type, IEnumerable<IEndPointMethodAuthorization>> authorizationFunc) Parameters Type Name Description Func < Type , IEnumerable < IEndPointMethodAuthorization >> authorizationFunc Returns Type Description ITypeSetExposureConfiguration | Improve this Doc View Source Authorize(String, String) Authorize exposures Declaration ITypeSetExposureConfiguration Authorize(string role = null, string policy = null) Parameters Type Name Description String role String policy Returns Type Description ITypeSetExposureConfiguration | Improve this Doc View Source Interfaces(Func<Type, Boolean>) Expose interfaces from type set Declaration ITypeSetExposureConfiguration Interfaces(Func<Type, bool> filter = null) Parameters Type Name Description Func < Type , Boolean > filter Returns Type Description ITypeSetExposureConfiguration | Improve this Doc View Source Methods(Func<MethodInfo, Boolean>) Filter methods Declaration ITypeSetExposureConfiguration Methods(Func<MethodInfo, bool> methodFilter) Parameters Type Name Description Func < MethodInfo , Boolean > methodFilter Returns Type Description ITypeSetExposureConfiguration | Improve this Doc View Source OnlyAttributed() Only export attributed types Declaration ITypeSetExposureConfiguration OnlyAttributed() Returns Type Description ITypeSetExposureConfiguration | Improve this Doc View Source Where(Func<Type, Boolean>) Expose types that match filter Declaration ITypeSetExposureConfiguration Where(Func<Type, bool> filter) Parameters Type Name Description Func < Type , Boolean > filter Returns Type Description ITypeSetExposureConfiguration"
  },
  "api/EasyRpc.AspNetCore.MessagePack.html": {
    "href": "api/EasyRpc.AspNetCore.MessagePack.html",
    "title": "Namespace EasyRpc.AspNetCore.MessagePack | EasyRpc documentation website",
    "keywords": "Namespace EasyRpc.AspNetCore.MessagePack Classes MessagePackContentSerializer MessagePackExtensions MessagePackSerializationTypeAttributor"
  },
  "api/EasyRpc.AspNetCore.MessagePack.MessagePackContentSerializer.html": {
    "href": "api/EasyRpc.AspNetCore.MessagePack.MessagePackContentSerializer.html",
    "title": "Class MessagePackContentSerializer | EasyRpc documentation website",
    "keywords": "Class MessagePackContentSerializer Inheritance Object MessagePackContentSerializer Implements IContentSerializer Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : EasyRpc.AspNetCore.MessagePack Assembly : EasyRpc.AspNetCore.MessagePack.dll Syntax public class MessagePackContentSerializer : IContentSerializer Constructors | Improve this Doc View Source MessagePackContentSerializer() Declaration public MessagePackContentSerializer() Fields | Improve this Doc View Source ContentType Content type for content type Declaration protected string ContentType Field Value Type Description String Properties | Improve this Doc View Source IsDefault Should this serializer be user when no others match exactly. Declaration public bool IsDefault { get; } Property Value Type Description Boolean | Improve this Doc View Source SupportedContentTypes List of content types supported (mime types: application/json, etc) Declaration public IEnumerable<string> SupportedContentTypes { get; } Property Value Type Description IEnumerable < String > Methods | Improve this Doc View Source CanDeserialize(RequestExecutionContext, String) Serializer should be used for this call Declaration public bool CanDeserialize(RequestExecutionContext context, string contentType) Parameters Type Name Description RequestExecutionContext context String contentType Returns Type Description Boolean | Improve this Doc View Source CanSerialize(RequestExecutionContext, String) Declaration public bool CanSerialize(RequestExecutionContext context, string accepts) Parameters Type Name Description RequestExecutionContext context String accepts Returns Type Description Boolean | Improve this Doc View Source DeserializeFromRequest<T>(RequestExecutionContext) Deserialize http request body to rpc context Declaration public ValueTask<T> DeserializeFromRequest<T>(RequestExecutionContext context) Parameters Type Name Description RequestExecutionContext context Returns Type Description ValueTask <T> Type Parameters Name Description T | Improve this Doc View Source SerializeToResponse(RequestExecutionContext) Serialize the result on the rpc context to the http response Declaration public Task SerializeToResponse(RequestExecutionContext context) Parameters Type Name Description RequestExecutionContext context Returns Type Description Task Implements IContentSerializer"
  },
  "api/EasyRpc.AspNetCore.MessagePack.MessagePackExtensions.html": {
    "href": "api/EasyRpc.AspNetCore.MessagePack.MessagePackExtensions.html",
    "title": "Class MessagePackExtensions | EasyRpc documentation website",
    "keywords": "Class MessagePackExtensions Inheritance Object MessagePackExtensions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : EasyRpc.AspNetCore.MessagePack Assembly : EasyRpc.AspNetCore.MessagePack.dll Syntax public static class MessagePackExtensions"
  },
  "api/EasyRpc.AspNetCore.MessagePack.MessagePackSerializationTypeAttributor.html": {
    "href": "api/EasyRpc.AspNetCore.MessagePack.MessagePackSerializationTypeAttributor.html",
    "title": "Class MessagePackSerializationTypeAttributor | EasyRpc documentation website",
    "keywords": "Class MessagePackSerializationTypeAttributor Inheritance Object MessagePackSerializationTypeAttributor Implements ISerializationTypeAttributor Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : EasyRpc.AspNetCore.MessagePack Assembly : EasyRpc.AspNetCore.MessagePack.dll Syntax public class MessagePackSerializationTypeAttributor : ISerializationTypeAttributor Constructors | Improve this Doc View Source MessagePackSerializationTypeAttributor(Boolean) Declaration public MessagePackSerializationTypeAttributor(bool useNameAsKey = false) Parameters Type Name Description Boolean useNameAsKey Methods | Improve this Doc View Source AttributeMethodProperty(PropertyBuilder, IEndPointMethodConfigurationReadOnly, RpcParameterInfo) Declaration public void AttributeMethodProperty(PropertyBuilder propertyBuilder, IEndPointMethodConfigurationReadOnly methodConfiguration, RpcParameterInfo parameterInfoParameter) Parameters Type Name Description PropertyBuilder propertyBuilder IEndPointMethodConfigurationReadOnly methodConfiguration RpcParameterInfo parameterInfoParameter | Improve this Doc View Source AttributeMethodType(TypeBuilder, IEndPointMethodConfigurationReadOnly) Declaration public void AttributeMethodType(TypeBuilder typeBuilder, IEndPointMethodConfigurationReadOnly methodConfiguration) Parameters Type Name Description TypeBuilder typeBuilder IEndPointMethodConfigurationReadOnly methodConfiguration | Improve this Doc View Source AttributeProperty(PropertyBuilder, Int32) Declaration public void AttributeProperty(PropertyBuilder propertyBuilder, int index) Parameters Type Name Description PropertyBuilder propertyBuilder Int32 index | Improve this Doc View Source AttributeType(TypeBuilder, String) Declaration public void AttributeType(TypeBuilder typeBuilder, string classNameHint) Parameters Type Name Description TypeBuilder typeBuilder String classNameHint Implements ISerializationTypeAttributor"
  },
  "api/EasyRpc.AspNetCore.Middleware.html": {
    "href": "api/EasyRpc.AspNetCore.Middleware.html",
    "title": "Namespace EasyRpc.AspNetCore.Middleware | EasyRpc documentation website",
    "keywords": "Namespace EasyRpc.AspNetCore.Middleware Classes MiddlewareHandler Middleware handler interface Interfaces IMiddlewareHandler Middleware handler interface"
  },
  "api/EasyRpc.AspNetCore.Middleware.IMiddlewareHandler.html": {
    "href": "api/EasyRpc.AspNetCore.Middleware.IMiddlewareHandler.html",
    "title": "Interface IMiddlewareHandler | EasyRpc documentation website",
    "keywords": "Interface IMiddlewareHandler Middleware handler interface Namespace : EasyRpc.AspNetCore.Middleware Assembly : EasyRpc.AspNetCore.dll Syntax public interface IMiddlewareHandler Methods | Improve this Doc View Source Attach(IApplicationBuilder, Action<IApiConfiguration>) Attach api to application pipeline Declaration IApplicationBuilder Attach(IApplicationBuilder builder, Action<IApiConfiguration> configuration) Parameters Type Name Description IApplicationBuilder builder Action < IApiConfiguration > configuration Returns Type Description IApplicationBuilder"
  },
  "api/EasyRpc.AspNetCore.Middleware.MiddlewareHandler.html": {
    "href": "api/EasyRpc.AspNetCore.Middleware.MiddlewareHandler.html",
    "title": "Class MiddlewareHandler | EasyRpc documentation website",
    "keywords": "Class MiddlewareHandler Middleware handler interface Inheritance Object MiddlewareHandler Implements IMiddlewareHandler Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : EasyRpc.AspNetCore.Middleware Assembly : EasyRpc.AspNetCore.dll Syntax public class MiddlewareHandler : IMiddlewareHandler Methods | Improve this Doc View Source Attach(IApplicationBuilder, Action<IApiConfiguration>) Attach api to application pipeline Declaration public IApplicationBuilder Attach(IApplicationBuilder builder, Action<IApiConfiguration> configuration) Parameters Type Name Description IApplicationBuilder builder Action < IApiConfiguration > configuration Returns Type Description IApplicationBuilder | Improve this Doc View Source ConfigureApi(Action<IApiConfiguration>, IServiceProvider) Declaration protected virtual IInternalApiConfiguration ConfigureApi(Action<IApiConfiguration> configuration, IServiceProvider scope) Parameters Type Name Description Action < IApiConfiguration > configuration IServiceProvider scope Returns Type Description IInternalApiConfiguration | Improve this Doc View Source ConfigureEndPointRouting(IApplicationBuilder, IInternalApiConfiguration, IServiceProvider) Declaration protected virtual void ConfigureEndPointRouting(IApplicationBuilder builder, IInternalApiConfiguration apiConfig, IServiceProvider scope) Parameters Type Name Description IApplicationBuilder builder IInternalApiConfiguration apiConfig IServiceProvider scope | Improve this Doc View Source CreateServiceProvider(IApplicationBuilder) Declaration protected virtual IServiceProvider CreateServiceProvider(IApplicationBuilder builder) Parameters Type Name Description IApplicationBuilder builder Returns Type Description IServiceProvider Implements IMiddlewareHandler"
  },
  "api/EasyRpc.AspNetCore.ModelBinding.AspNetRouting.AspNetRoutingParameterBinder.html": {
    "href": "api/EasyRpc.AspNetCore.ModelBinding.AspNetRouting.AspNetRoutingParameterBinder.html",
    "title": "Class AspNetRoutingParameterBinder | EasyRpc documentation website",
    "keywords": "Class AspNetRoutingParameterBinder Parameter binder used for asp.net routing Inheritance Object AspNetRoutingParameterBinder Implements IAspNetRoutingParameterBinder IUrlParameterBinder Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : EasyRpc.AspNetCore.ModelBinding.AspNetRouting Assembly : EasyRpc.AspNetCore.dll Syntax public class AspNetRoutingParameterBinder : IAspNetRoutingParameterBinder, IUrlParameterBinder Constructors | Improve this Doc View Source AspNetRoutingParameterBinder(IStringValueModelBinder) Default constructor Declaration public AspNetRoutingParameterBinder(IStringValueModelBinder stringValueModelBinder) Parameters Type Name Description IStringValueModelBinder stringValueModelBinder Methods | Improve this Doc View Source BindUrlParameter(RequestExecutionContext, EndPointMethodConfiguration, IRpcParameterInfo, IRequestParameters, ref Int32, ReadOnlySpan<Char>) bind parameters Declaration public void BindUrlParameter(RequestExecutionContext context, EndPointMethodConfiguration configuration, IRpcParameterInfo parameter, IRequestParameters parameterContext, ref int currentIndex, in ReadOnlySpan<char> pathSpan) Parameters Type Name Description RequestExecutionContext context EndPointMethodConfiguration configuration IRpcParameterInfo parameter IRequestParameters parameterContext Int32 currentIndex ReadOnlySpan < Char > pathSpan | Improve this Doc View Source HandleMissingParameter(RequestExecutionContext, EndPointMethodConfiguration, IRpcParameterInfo, IRequestParameters) Handle missing parameter Declaration protected virtual void HandleMissingParameter(RequestExecutionContext context, EndPointMethodConfiguration configuration, IRpcParameterInfo parameter, IRequestParameters parameterContext) Parameters Type Name Description RequestExecutionContext context EndPointMethodConfiguration configuration IRpcParameterInfo parameter IRequestParameters parameterContext Implements IAspNetRoutingParameterBinder IUrlParameterBinder"
  },
  "api/EasyRpc.AspNetCore.ModelBinding.AspNetRouting.html": {
    "href": "api/EasyRpc.AspNetCore.ModelBinding.AspNetRouting.html",
    "title": "Namespace EasyRpc.AspNetCore.ModelBinding.AspNetRouting | EasyRpc documentation website",
    "keywords": "Namespace EasyRpc.AspNetCore.ModelBinding.AspNetRouting Classes AspNetRoutingParameterBinder Parameter binder used for asp.net routing Interfaces IAspNetRoutingParameterBinder Parameter binder used for asp.net routing"
  },
  "api/EasyRpc.AspNetCore.ModelBinding.AspNetRouting.IAspNetRoutingParameterBinder.html": {
    "href": "api/EasyRpc.AspNetCore.ModelBinding.AspNetRouting.IAspNetRoutingParameterBinder.html",
    "title": "Interface IAspNetRoutingParameterBinder | EasyRpc documentation website",
    "keywords": "Interface IAspNetRoutingParameterBinder Parameter binder used for asp.net routing Inherited Members IUrlParameterBinder.BindUrlParameter(RequestExecutionContext, EndPointMethodConfiguration, IRpcParameterInfo, IRequestParameters, Int32, ReadOnlySpan<Char>) Namespace : EasyRpc.AspNetCore.ModelBinding.AspNetRouting Assembly : EasyRpc.AspNetCore.dll Syntax public interface IAspNetRoutingParameterBinder : IUrlParameterBinder"
  },
  "api/EasyRpc.AspNetCore.ModelBinding.BaseParameterBinderDelegateBuilder.html": {
    "href": "api/EasyRpc.AspNetCore.ModelBinding.BaseParameterBinderDelegateBuilder.html",
    "title": "Class BaseParameterBinderDelegateBuilder | EasyRpc documentation website",
    "keywords": "Class BaseParameterBinderDelegateBuilder Abstract base class for parameter binding builders Inheritance Object BaseParameterBinderDelegateBuilder BodyParameterBinderDelegateBuilder BodySingleParameterBinderDelegateBuilder NoBodyParameterBinderDelegateBuilder Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : EasyRpc.AspNetCore.ModelBinding Assembly : EasyRpc.AspNetCore.dll Syntax public abstract class BaseParameterBinderDelegateBuilder Constructors | Improve this Doc View Source BaseParameterBinderDelegateBuilder(ISpecialParameterBinder, IStringValueModelBinder) Default constructor Declaration protected BaseParameterBinderDelegateBuilder(ISpecialParameterBinder specialParameterBinder, IStringValueModelBinder stringValueModelBinder) Parameters Type Name Description ISpecialParameterBinder specialParameterBinder IStringValueModelBinder stringValueModelBinder Fields | Improve this Doc View Source _stringValueModelBinder String value binder Declaration protected IStringValueModelBinder _stringValueModelBinder Field Value Type Description IStringValueModelBinder | Improve this Doc View Source SpecialParameterBinder Special parameter binder (CancellationToken, HttpContext, etc) Declaration protected ISpecialParameterBinder SpecialParameterBinder Field Value Type Description ISpecialParameterBinder | Improve this Doc View Source UrlParameterBinder Url parameter binder Declaration protected IUrlParameterBinder UrlParameterBinder Field Value Type Description IUrlParameterBinder Properties | Improve this Doc View Source BindParametersMethod Declaration protected virtual MethodInfo BindParametersMethod { get; } Property Value Type Description MethodInfo Methods | Improve this Doc View Source ApiConfigurationComplete(IServiceProvider) Api configuration has completed Declaration public void ApiConfigurationComplete(IServiceProvider serviceScope) Parameters Type Name Description IServiceProvider serviceScope | Improve this Doc View Source BindNonBodyParameters<T>(RequestExecutionContext, EndPointMethodConfiguration, IReadOnlyList<RpcParameterInfo>, T) Bind non body parameters (url, query string, etc) Declaration protected virtual Task BindNonBodyParameters<T>(RequestExecutionContext context, EndPointMethodConfiguration configuration, IReadOnlyList<RpcParameterInfo> parameters, T parameterContext) where T : IRequestParameters Parameters Type Name Description RequestExecutionContext context EndPointMethodConfiguration configuration IReadOnlyList < RpcParameterInfo > parameters T parameterContext Returns Type Description Task Type Parameters Name Description T | Improve this Doc View Source BindQueryStringParameter(RequestExecutionContext, EndPointMethodConfiguration, IRpcParameterInfo, IRequestParameters) Declaration protected virtual void BindQueryStringParameter(RequestExecutionContext context, EndPointMethodConfiguration configuration, IRpcParameterInfo parameter, IRequestParameters parameters) Parameters Type Name Description RequestExecutionContext context EndPointMethodConfiguration configuration IRpcParameterInfo parameter IRequestParameters parameters | Improve this Doc View Source GenerateOrderedParameterList(IEndPointMethodConfigurationReadOnly) Declaration protected virtual IReadOnlyList<RpcParameterInfo> GenerateOrderedParameterList(IEndPointMethodConfigurationReadOnly configuration) Parameters Type Name Description IEndPointMethodConfigurationReadOnly configuration Returns Type Description IReadOnlyList < RpcParameterInfo >"
  },
  "api/EasyRpc.AspNetCore.ModelBinding.BodyParameterBinderDelegateBuilder.html": {
    "href": "api/EasyRpc.AspNetCore.ModelBinding.BodyParameterBinderDelegateBuilder.html",
    "title": "Class BodyParameterBinderDelegateBuilder | EasyRpc documentation website",
    "keywords": "Class BodyParameterBinderDelegateBuilder Inheritance Object BaseParameterBinderDelegateBuilder BodyParameterBinderDelegateBuilder Implements IBodyParameterBinderDelegateBuilder IApiConfigurationCompleteAware Inherited Members BaseParameterBinderDelegateBuilder.UrlParameterBinder BaseParameterBinderDelegateBuilder.SpecialParameterBinder BaseParameterBinderDelegateBuilder._stringValueModelBinder BaseParameterBinderDelegateBuilder.ApiConfigurationComplete(IServiceProvider) BaseParameterBinderDelegateBuilder.BindNonBodyParameters<T>(RequestExecutionContext, EndPointMethodConfiguration, IReadOnlyList<RpcParameterInfo>, T) BaseParameterBinderDelegateBuilder.BindParametersMethod BaseParameterBinderDelegateBuilder.BindQueryStringParameter(RequestExecutionContext, EndPointMethodConfiguration, IRpcParameterInfo, IRequestParameters) BaseParameterBinderDelegateBuilder.GenerateOrderedParameterList(IEndPointMethodConfigurationReadOnly) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : EasyRpc.AspNetCore.ModelBinding Assembly : EasyRpc.AspNetCore.dll Syntax public class BodyParameterBinderDelegateBuilder : BaseParameterBinderDelegateBuilder, IBodyParameterBinderDelegateBuilder, IApiConfigurationCompleteAware Constructors | Improve this Doc View Source BodyParameterBinderDelegateBuilder(ISpecialParameterBinder, IContentSerializationService, IStringValueModelBinder) Declaration public BodyParameterBinderDelegateBuilder(ISpecialParameterBinder specialParameterBinder, IContentSerializationService contentSerializationService, IStringValueModelBinder stringValueModelBinder) Parameters Type Name Description ISpecialParameterBinder specialParameterBinder IContentSerializationService contentSerializationService IStringValueModelBinder stringValueModelBinder Methods | Improve this Doc View Source BindParameters<T>(RequestExecutionContext, EndPointMethodConfiguration, List<RpcParameterInfo>) Declaration protected virtual Task BindParameters<T>(RequestExecutionContext context, EndPointMethodConfiguration configuration, List<RpcParameterInfo> parameters) where T : IRequestParameters Parameters Type Name Description RequestExecutionContext context EndPointMethodConfiguration configuration List < RpcParameterInfo > parameters Returns Type Description Task Type Parameters Name Description T | Improve this Doc View Source CreateMethodExpression(IEndPointMethodConfigurationReadOnly, Type) Declaration protected virtual Expression<MethodEndPointDelegate> CreateMethodExpression(IEndPointMethodConfigurationReadOnly configuration, Type parametersType) Parameters Type Name Description IEndPointMethodConfigurationReadOnly configuration Type parametersType Returns Type Description Expression < MethodEndPointDelegate > | Improve this Doc View Source CreateParameterBindingMethod(IEndPointMethodConfigurationReadOnly, Type) Declaration public MethodEndPointDelegate CreateParameterBindingMethod(IEndPointMethodConfigurationReadOnly configuration, Type parametersType) Parameters Type Name Description IEndPointMethodConfigurationReadOnly configuration Type parametersType Returns Type Description MethodEndPointDelegate Implements IBodyParameterBinderDelegateBuilder IApiConfigurationCompleteAware"
  },
  "api/EasyRpc.AspNetCore.ModelBinding.BodySingleParameterBinderDelegateBuilder.html": {
    "href": "api/EasyRpc.AspNetCore.ModelBinding.BodySingleParameterBinderDelegateBuilder.html",
    "title": "Class BodySingleParameterBinderDelegateBuilder | EasyRpc documentation website",
    "keywords": "Class BodySingleParameterBinderDelegateBuilder Inheritance Object BaseParameterBinderDelegateBuilder BodySingleParameterBinderDelegateBuilder Implements IBodySingleParameterBinderDelegateBuilder IApiConfigurationCompleteAware Inherited Members BaseParameterBinderDelegateBuilder.UrlParameterBinder BaseParameterBinderDelegateBuilder.SpecialParameterBinder BaseParameterBinderDelegateBuilder._stringValueModelBinder BaseParameterBinderDelegateBuilder.ApiConfigurationComplete(IServiceProvider) BaseParameterBinderDelegateBuilder.BindNonBodyParameters<T>(RequestExecutionContext, EndPointMethodConfiguration, IReadOnlyList<RpcParameterInfo>, T) BaseParameterBinderDelegateBuilder.BindParametersMethod BaseParameterBinderDelegateBuilder.BindQueryStringParameter(RequestExecutionContext, EndPointMethodConfiguration, IRpcParameterInfo, IRequestParameters) BaseParameterBinderDelegateBuilder.GenerateOrderedParameterList(IEndPointMethodConfigurationReadOnly) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : EasyRpc.AspNetCore.ModelBinding Assembly : EasyRpc.AspNetCore.dll Syntax public class BodySingleParameterBinderDelegateBuilder : BaseParameterBinderDelegateBuilder, IBodySingleParameterBinderDelegateBuilder, IApiConfigurationCompleteAware Constructors | Improve this Doc View Source BodySingleParameterBinderDelegateBuilder(ISpecialParameterBinder, IContentSerializationService, IStringValueModelBinder) Declaration public BodySingleParameterBinderDelegateBuilder(ISpecialParameterBinder specialParameterBinder, IContentSerializationService contentSerializationService, IStringValueModelBinder stringValueModelBinder) Parameters Type Name Description ISpecialParameterBinder specialParameterBinder IContentSerializationService contentSerializationService IStringValueModelBinder stringValueModelBinder Methods | Improve this Doc View Source BindParameters<T, TContext>(RequestExecutionContext, EndPointMethodConfiguration, List<RpcParameterInfo>, Int32) Declaration protected virtual Task BindParameters<T, TContext>(RequestExecutionContext context, EndPointMethodConfiguration configuration, List<RpcParameterInfo> parameters, int parameterPosition) where TContext : IRequestParameters, new() Parameters Type Name Description RequestExecutionContext context EndPointMethodConfiguration configuration List < RpcParameterInfo > parameters Int32 parameterPosition Returns Type Description Task Type Parameters Name Description T TContext | Improve this Doc View Source CreateMethodExpression(IEndPointMethodConfigurationReadOnly, Type) Declaration protected virtual Expression<MethodEndPointDelegate> CreateMethodExpression(IEndPointMethodConfigurationReadOnly configuration, Type parametersType) Parameters Type Name Description IEndPointMethodConfigurationReadOnly configuration Type parametersType Returns Type Description Expression < MethodEndPointDelegate > | Improve this Doc View Source CreateParameterBindingMethod(IEndPointMethodConfigurationReadOnly, Type) Declaration public MethodEndPointDelegate CreateParameterBindingMethod(IEndPointMethodConfigurationReadOnly configuration, Type parametersType) Parameters Type Name Description IEndPointMethodConfigurationReadOnly configuration Type parametersType Returns Type Description MethodEndPointDelegate Implements IBodySingleParameterBinderDelegateBuilder IApiConfigurationCompleteAware"
  },
  "api/EasyRpc.AspNetCore.ModelBinding.EmptyParameters.html": {
    "href": "api/EasyRpc.AspNetCore.ModelBinding.EmptyParameters.html",
    "title": "Class EmptyParameters | EasyRpc documentation website",
    "keywords": "Class EmptyParameters parameters for request Inheritance Object EmptyParameters Implements IRequestParameters Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : EasyRpc.AspNetCore.ModelBinding Assembly : EasyRpc.AspNetCore.dll Syntax public class EmptyParameters : IRequestParameters Fields | Improve this Doc View Source Instance Instance of empty parameters Declaration public static readonly EmptyParameters Instance Field Value Type Description EmptyParameters Properties | Improve this Doc View Source Item[Int32] Access parameters based on index Declaration public object this[int index] { get; set; } Parameters Type Name Description Int32 index Property Value Type Description Object | Improve this Doc View Source ParameterCount Count of parameters Declaration public int ParameterCount { get; } Property Value Type Description Int32 | Improve this Doc View Source ParameterInfos List of parameter info object for the call Declaration public IReadOnlyList<IRpcParameterInfo> ParameterInfos { get; } Property Value Type Description IReadOnlyList < IRpcParameterInfo > Methods | Improve this Doc View Source Clone() Clone parameters Declaration public IRequestParameters Clone() Returns Type Description IRequestParameters | Improve this Doc View Source TryGetParameter(String, out Object) Try getting parameter by name Declaration public bool TryGetParameter(string parameterName, out object parameterValue) Parameters Type Name Description String parameterName Object parameterValue Returns Type Description Boolean | Improve this Doc View Source TrySetParameter(String, Object) Try setting parameter value by name Declaration public bool TrySetParameter(string parameterName, object parameterValue) Parameters Type Name Description String parameterName Object parameterValue Returns Type Description Boolean Implements IRequestParameters"
  },
  "api/EasyRpc.AspNetCore.ModelBinding.html": {
    "href": "api/EasyRpc.AspNetCore.ModelBinding.html",
    "title": "Namespace EasyRpc.AspNetCore.ModelBinding | EasyRpc documentation website",
    "keywords": "Namespace EasyRpc.AspNetCore.ModelBinding Classes BaseParameterBinderDelegateBuilder Abstract base class for parameter binding builders BodyParameterBinderDelegateBuilder BodySingleParameterBinderDelegateBuilder EmptyParameters parameters for request NoBodyParameterBinderDelegateBuilder ParameterBinderDelegateBuilder Builds a delegate that can be used to bind a request parameter object SpecialParameterBinder StringValueModelBinder Interfaces IBodyParameterBinderDelegateBuilder IBodySingleParameterBinderDelegateBuilder Binds the body of the request to one parameter INoBodyParameterBinderDelegateBuilder IParameterBinderDelegateBuilder Interface for building a delegate that can be used to create a bound request parameter object ISpecialParameterBinder IStringValueModelBinder IUrlParameterBinder Interface for binding url/query string values to a request parameter object"
  },
  "api/EasyRpc.AspNetCore.ModelBinding.IBodyParameterBinderDelegateBuilder.html": {
    "href": "api/EasyRpc.AspNetCore.ModelBinding.IBodyParameterBinderDelegateBuilder.html",
    "title": "Interface IBodyParameterBinderDelegateBuilder | EasyRpc documentation website",
    "keywords": "Interface IBodyParameterBinderDelegateBuilder Inherited Members IApiConfigurationCompleteAware.ApiConfigurationComplete(IServiceProvider) Namespace : EasyRpc.AspNetCore.ModelBinding Assembly : EasyRpc.AspNetCore.dll Syntax public interface IBodyParameterBinderDelegateBuilder : IApiConfigurationCompleteAware Methods | Improve this Doc View Source CreateParameterBindingMethod(IEndPointMethodConfigurationReadOnly, Type) Declaration MethodEndPointDelegate CreateParameterBindingMethod(IEndPointMethodConfigurationReadOnly configuration, Type parametersType) Parameters Type Name Description IEndPointMethodConfigurationReadOnly configuration Type parametersType Returns Type Description MethodEndPointDelegate"
  },
  "api/EasyRpc.AspNetCore.ModelBinding.IBodySingleParameterBinderDelegateBuilder.html": {
    "href": "api/EasyRpc.AspNetCore.ModelBinding.IBodySingleParameterBinderDelegateBuilder.html",
    "title": "Interface IBodySingleParameterBinderDelegateBuilder | EasyRpc documentation website",
    "keywords": "Interface IBodySingleParameterBinderDelegateBuilder Binds the body of the request to one parameter Inherited Members IApiConfigurationCompleteAware.ApiConfigurationComplete(IServiceProvider) Namespace : EasyRpc.AspNetCore.ModelBinding Assembly : EasyRpc.AspNetCore.dll Syntax public interface IBodySingleParameterBinderDelegateBuilder : IApiConfigurationCompleteAware Methods | Improve this Doc View Source CreateParameterBindingMethod(IEndPointMethodConfigurationReadOnly, Type) Declaration MethodEndPointDelegate CreateParameterBindingMethod(IEndPointMethodConfigurationReadOnly configuration, Type parametersType) Parameters Type Name Description IEndPointMethodConfigurationReadOnly configuration Type parametersType Returns Type Description MethodEndPointDelegate"
  },
  "api/EasyRpc.AspNetCore.ModelBinding.INoBodyParameterBinderDelegateBuilder.html": {
    "href": "api/EasyRpc.AspNetCore.ModelBinding.INoBodyParameterBinderDelegateBuilder.html",
    "title": "Interface INoBodyParameterBinderDelegateBuilder | EasyRpc documentation website",
    "keywords": "Interface INoBodyParameterBinderDelegateBuilder Inherited Members IApiConfigurationCompleteAware.ApiConfigurationComplete(IServiceProvider) Namespace : EasyRpc.AspNetCore.ModelBinding Assembly : EasyRpc.AspNetCore.dll Syntax public interface INoBodyParameterBinderDelegateBuilder : IApiConfigurationCompleteAware Methods | Improve this Doc View Source CreateParameterBindingMethod(IEndPointMethodConfigurationReadOnly, Type) Declaration MethodEndPointDelegate CreateParameterBindingMethod(IEndPointMethodConfigurationReadOnly configuration, Type parametersType) Parameters Type Name Description IEndPointMethodConfigurationReadOnly configuration Type parametersType Returns Type Description MethodEndPointDelegate"
  },
  "api/EasyRpc.AspNetCore.ModelBinding.InternalRouting.html": {
    "href": "api/EasyRpc.AspNetCore.ModelBinding.InternalRouting.html",
    "title": "Namespace EasyRpc.AspNetCore.ModelBinding.InternalRouting | EasyRpc documentation website",
    "keywords": "Namespace EasyRpc.AspNetCore.ModelBinding.InternalRouting Classes InternalRoutingParameterBinder Interfaces IInternalRoutingParameterBinder"
  },
  "api/EasyRpc.AspNetCore.ModelBinding.InternalRouting.IInternalRoutingParameterBinder.html": {
    "href": "api/EasyRpc.AspNetCore.ModelBinding.InternalRouting.IInternalRoutingParameterBinder.html",
    "title": "Interface IInternalRoutingParameterBinder | EasyRpc documentation website",
    "keywords": "Interface IInternalRoutingParameterBinder Inherited Members IUrlParameterBinder.BindUrlParameter(RequestExecutionContext, EndPointMethodConfiguration, IRpcParameterInfo, IRequestParameters, Int32, ReadOnlySpan<Char>) Namespace : EasyRpc.AspNetCore.ModelBinding.InternalRouting Assembly : EasyRpc.AspNetCore.dll Syntax public interface IInternalRoutingParameterBinder : IUrlParameterBinder"
  },
  "api/EasyRpc.AspNetCore.ModelBinding.InternalRouting.InternalRoutingParameterBinder.html": {
    "href": "api/EasyRpc.AspNetCore.ModelBinding.InternalRouting.InternalRoutingParameterBinder.html",
    "title": "Class InternalRoutingParameterBinder | EasyRpc documentation website",
    "keywords": "Class InternalRoutingParameterBinder Inheritance Object InternalRoutingParameterBinder Implements IInternalRoutingParameterBinder IUrlParameterBinder Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : EasyRpc.AspNetCore.ModelBinding.InternalRouting Assembly : EasyRpc.AspNetCore.dll Syntax public class InternalRoutingParameterBinder : IInternalRoutingParameterBinder, IUrlParameterBinder Methods | Improve this Doc View Source BindUrlParameter(RequestExecutionContext, EndPointMethodConfiguration, IRpcParameterInfo, IRequestParameters, ref Int32, ReadOnlySpan<Char>) Declaration public void BindUrlParameter(RequestExecutionContext context, EndPointMethodConfiguration configuration, IRpcParameterInfo parameter, IRequestParameters parameterContext, ref int currentIndex, in ReadOnlySpan<char> pathSpan) Parameters Type Name Description RequestExecutionContext context EndPointMethodConfiguration configuration IRpcParameterInfo parameter IRequestParameters parameterContext Int32 currentIndex ReadOnlySpan < Char > pathSpan | Improve this Doc View Source HandleParameterNotFound(RequestExecutionContext, EndPointMethodConfiguration, IRpcParameterInfo, IRequestParameters, Int32, ReadOnlySpan<Char>) Declaration protected virtual object HandleParameterNotFound(RequestExecutionContext context, EndPointMethodConfiguration configuration, IRpcParameterInfo parameter, IRequestParameters parameterContext, in int currentIndex, in ReadOnlySpan<char> pathSpan) Parameters Type Name Description RequestExecutionContext context EndPointMethodConfiguration configuration IRpcParameterInfo parameter IRequestParameters parameterContext Int32 currentIndex ReadOnlySpan < Char > pathSpan Returns Type Description Object | Improve this Doc View Source HandleUnknownParameterType(RequestExecutionContext, EndPointMethodConfiguration, IRpcParameterInfo, IRequestParameters, ref Int32, ReadOnlySpan<Char>) Declaration protected virtual void HandleUnknownParameterType(RequestExecutionContext requestExecutionContext, EndPointMethodConfiguration configuration, IRpcParameterInfo parameter, IRequestParameters parameterContext, ref int currentIndex, in ReadOnlySpan<char> pathSpan) Parameters Type Name Description RequestExecutionContext requestExecutionContext EndPointMethodConfiguration configuration IRpcParameterInfo parameter IRequestParameters parameterContext Int32 currentIndex ReadOnlySpan < Char > pathSpan | Improve this Doc View Source ParseDecimal(RequestExecutionContext, EndPointMethodConfiguration, IRpcParameterInfo, IRequestParameters, ref Int32, ReadOnlySpan<Char>) Declaration protected virtual object ParseDecimal(RequestExecutionContext context, EndPointMethodConfiguration configuration, IRpcParameterInfo parameter, IRequestParameters parameterContext, ref int currentIndex, in ReadOnlySpan<char> pathSpan) Parameters Type Name Description RequestExecutionContext context EndPointMethodConfiguration configuration IRpcParameterInfo parameter IRequestParameters parameterContext Int32 currentIndex ReadOnlySpan < Char > pathSpan Returns Type Description Object | Improve this Doc View Source ParseDouble(RequestExecutionContext, EndPointMethodConfiguration, IRpcParameterInfo, IRequestParameters, ref Int32, ReadOnlySpan<Char>) Declaration protected virtual object ParseDouble(RequestExecutionContext context, EndPointMethodConfiguration configuration, IRpcParameterInfo parameter, IRequestParameters parameterContext, ref int currentIndex, in ReadOnlySpan<char> pathSpan) Parameters Type Name Description RequestExecutionContext context EndPointMethodConfiguration configuration IRpcParameterInfo parameter IRequestParameters parameterContext Int32 currentIndex ReadOnlySpan < Char > pathSpan Returns Type Description Object | Improve this Doc View Source ParseInt(RequestExecutionContext, EndPointMethodConfiguration, IRpcParameterInfo, IRequestParameters, ref Int32, ReadOnlySpan<Char>) Declaration protected virtual object ParseInt(RequestExecutionContext context, EndPointMethodConfiguration configuration, IRpcParameterInfo parameter, IRequestParameters parameterContext, ref int currentIndex, in ReadOnlySpan<char> pathSpan) Parameters Type Name Description RequestExecutionContext context EndPointMethodConfiguration configuration IRpcParameterInfo parameter IRequestParameters parameterContext Int32 currentIndex ReadOnlySpan < Char > pathSpan Returns Type Description Object | Improve this Doc View Source ParseString(RequestExecutionContext, EndPointMethodConfiguration, IRpcParameterInfo, IRequestParameters, ref Int32, ReadOnlySpan<Char>) Declaration protected virtual string ParseString(RequestExecutionContext context, EndPointMethodConfiguration configuration, IRpcParameterInfo parameter, IRequestParameters parameterContext, ref int currentIndex, in ReadOnlySpan<char> pathSpan) Parameters Type Name Description RequestExecutionContext context EndPointMethodConfiguration configuration IRpcParameterInfo parameter IRequestParameters parameterContext Int32 currentIndex ReadOnlySpan < Char > pathSpan Returns Type Description String Implements IInternalRoutingParameterBinder IUrlParameterBinder"
  },
  "api/EasyRpc.AspNetCore.ModelBinding.IParameterBinderDelegateBuilder.html": {
    "href": "api/EasyRpc.AspNetCore.ModelBinding.IParameterBinderDelegateBuilder.html",
    "title": "Interface IParameterBinderDelegateBuilder | EasyRpc documentation website",
    "keywords": "Interface IParameterBinderDelegateBuilder Interface for building a delegate that can be used to create a bound request parameter object Namespace : EasyRpc.AspNetCore.ModelBinding Assembly : EasyRpc.AspNetCore.dll Syntax public interface IParameterBinderDelegateBuilder Methods | Improve this Doc View Source CreateParameterBindingMethod(IEndPointMethodConfigurationReadOnly, out Type) Create delegate that instantiates a request parameter object using values found in the request url and body Declaration MethodEndPointDelegate CreateParameterBindingMethod(IEndPointMethodConfigurationReadOnly configuration, out Type parametersType) Parameters Type Name Description IEndPointMethodConfigurationReadOnly configuration Type parametersType Returns Type Description MethodEndPointDelegate"
  },
  "api/EasyRpc.AspNetCore.ModelBinding.ISpecialParameterBinder.html": {
    "href": "api/EasyRpc.AspNetCore.ModelBinding.ISpecialParameterBinder.html",
    "title": "Interface ISpecialParameterBinder | EasyRpc documentation website",
    "keywords": "Interface ISpecialParameterBinder Namespace : EasyRpc.AspNetCore.ModelBinding Assembly : EasyRpc.AspNetCore.dll Syntax public interface ISpecialParameterBinder Methods | Improve this Doc View Source BindHttpCancellationTokenParameter(RequestExecutionContext, RpcParameterInfo, IRequestParameters) Declaration void BindHttpCancellationTokenParameter(RequestExecutionContext context, RpcParameterInfo parameter, IRequestParameters parameterContext) Parameters Type Name Description RequestExecutionContext context RpcParameterInfo parameter IRequestParameters parameterContext | Improve this Doc View Source BindHttpContextParameter(RequestExecutionContext, RpcParameterInfo, IRequestParameters) Declaration void BindHttpContextParameter(RequestExecutionContext context, RpcParameterInfo parameter, IRequestParameters parameterContext) Parameters Type Name Description RequestExecutionContext context RpcParameterInfo parameter IRequestParameters parameterContext | Improve this Doc View Source BindHttpRequestParameter(RequestExecutionContext, RpcParameterInfo, IRequestParameters) Declaration void BindHttpRequestParameter(RequestExecutionContext context, RpcParameterInfo parameter, IRequestParameters parameterContext) Parameters Type Name Description RequestExecutionContext context RpcParameterInfo parameter IRequestParameters parameterContext | Improve this Doc View Source BindHttpResponseParameter(RequestExecutionContext, RpcParameterInfo, IRequestParameters) Declaration void BindHttpResponseParameter(RequestExecutionContext context, RpcParameterInfo parameter, IRequestParameters parameterContext) Parameters Type Name Description RequestExecutionContext context RpcParameterInfo parameter IRequestParameters parameterContext | Improve this Doc View Source BindRequestExecutionContextParameter(RequestExecutionContext, RpcParameterInfo, IRequestParameters) Declaration void BindRequestExecutionContextParameter(RequestExecutionContext context, RpcParameterInfo parameter, IRequestParameters parameterContext) Parameters Type Name Description RequestExecutionContext context RpcParameterInfo parameter IRequestParameters parameterContext | Improve this Doc View Source BindRequestServicesParameter(RequestExecutionContext, RpcParameterInfo, IRequestParameters) Declaration void BindRequestServicesParameter(RequestExecutionContext context, RpcParameterInfo parameter, IRequestParameters parameterContext) Parameters Type Name Description RequestExecutionContext context RpcParameterInfo parameter IRequestParameters parameterContext"
  },
  "api/EasyRpc.AspNetCore.ModelBinding.IStringValueModelBinder.html": {
    "href": "api/EasyRpc.AspNetCore.ModelBinding.IStringValueModelBinder.html",
    "title": "Interface IStringValueModelBinder | EasyRpc documentation website",
    "keywords": "Interface IStringValueModelBinder Namespace : EasyRpc.AspNetCore.ModelBinding Assembly : EasyRpc.AspNetCore.dll Syntax public interface IStringValueModelBinder Methods | Improve this Doc View Source ConvertString(IRpcParameterInfo, String) Declaration object ConvertString(IRpcParameterInfo parameter, string stringValue) Parameters Type Name Description IRpcParameterInfo parameter String stringValue Returns Type Description Object"
  },
  "api/EasyRpc.AspNetCore.ModelBinding.IUrlParameterBinder.html": {
    "href": "api/EasyRpc.AspNetCore.ModelBinding.IUrlParameterBinder.html",
    "title": "Interface IUrlParameterBinder | EasyRpc documentation website",
    "keywords": "Interface IUrlParameterBinder Interface for binding url/query string values to a request parameter object Namespace : EasyRpc.AspNetCore.ModelBinding Assembly : EasyRpc.AspNetCore.dll Syntax public interface IUrlParameterBinder Methods | Improve this Doc View Source BindUrlParameter(RequestExecutionContext, EndPointMethodConfiguration, IRpcParameterInfo, IRequestParameters, ref Int32, ReadOnlySpan<Char>) bind parameters Declaration void BindUrlParameter(RequestExecutionContext context, EndPointMethodConfiguration configuration, IRpcParameterInfo parameter, IRequestParameters parameterContext, ref int currentIndex, in ReadOnlySpan<char> pathSpan) Parameters Type Name Description RequestExecutionContext context EndPointMethodConfiguration configuration IRpcParameterInfo parameter IRequestParameters parameterContext Int32 currentIndex ReadOnlySpan < Char > pathSpan"
  },
  "api/EasyRpc.AspNetCore.ModelBinding.NoBodyParameterBinderDelegateBuilder.html": {
    "href": "api/EasyRpc.AspNetCore.ModelBinding.NoBodyParameterBinderDelegateBuilder.html",
    "title": "Class NoBodyParameterBinderDelegateBuilder | EasyRpc documentation website",
    "keywords": "Class NoBodyParameterBinderDelegateBuilder Inheritance Object BaseParameterBinderDelegateBuilder NoBodyParameterBinderDelegateBuilder Implements INoBodyParameterBinderDelegateBuilder IApiConfigurationCompleteAware Inherited Members BaseParameterBinderDelegateBuilder.UrlParameterBinder BaseParameterBinderDelegateBuilder.SpecialParameterBinder BaseParameterBinderDelegateBuilder._stringValueModelBinder BaseParameterBinderDelegateBuilder.ApiConfigurationComplete(IServiceProvider) BaseParameterBinderDelegateBuilder.BindNonBodyParameters<T>(RequestExecutionContext, EndPointMethodConfiguration, IReadOnlyList<RpcParameterInfo>, T) BaseParameterBinderDelegateBuilder.BindParametersMethod BaseParameterBinderDelegateBuilder.BindQueryStringParameter(RequestExecutionContext, EndPointMethodConfiguration, IRpcParameterInfo, IRequestParameters) BaseParameterBinderDelegateBuilder.GenerateOrderedParameterList(IEndPointMethodConfigurationReadOnly) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : EasyRpc.AspNetCore.ModelBinding Assembly : EasyRpc.AspNetCore.dll Syntax public class NoBodyParameterBinderDelegateBuilder : BaseParameterBinderDelegateBuilder, INoBodyParameterBinderDelegateBuilder, IApiConfigurationCompleteAware Constructors | Improve this Doc View Source NoBodyParameterBinderDelegateBuilder(ISpecialParameterBinder, IStringValueModelBinder) Declaration public NoBodyParameterBinderDelegateBuilder(ISpecialParameterBinder specialParameterBinder, IStringValueModelBinder stringValueModelBinder) Parameters Type Name Description ISpecialParameterBinder specialParameterBinder IStringValueModelBinder stringValueModelBinder Methods | Improve this Doc View Source BindParameters<T>(RequestExecutionContext, EndPointMethodConfiguration, IReadOnlyList<RpcParameterInfo>) Declaration protected virtual Task BindParameters<T>(RequestExecutionContext context, EndPointMethodConfiguration configuration, IReadOnlyList<RpcParameterInfo> parameters) where T : IRequestParameters, new() Parameters Type Name Description RequestExecutionContext context EndPointMethodConfiguration configuration IReadOnlyList < RpcParameterInfo > parameters Returns Type Description Task Type Parameters Name Description T | Improve this Doc View Source CreateMethodExpression(IEndPointMethodConfigurationReadOnly, Type) Declaration protected virtual Expression<MethodEndPointDelegate> CreateMethodExpression(IEndPointMethodConfigurationReadOnly configuration, Type parametersType) Parameters Type Name Description IEndPointMethodConfigurationReadOnly configuration Type parametersType Returns Type Description Expression < MethodEndPointDelegate > | Improve this Doc View Source CreateParameterBindingMethod(IEndPointMethodConfigurationReadOnly, Type) Declaration public virtual MethodEndPointDelegate CreateParameterBindingMethod(IEndPointMethodConfigurationReadOnly configuration, Type parametersType) Parameters Type Name Description IEndPointMethodConfigurationReadOnly configuration Type parametersType Returns Type Description MethodEndPointDelegate Implements INoBodyParameterBinderDelegateBuilder IApiConfigurationCompleteAware"
  },
  "api/EasyRpc.AspNetCore.ModelBinding.ParameterBinderDelegateBuilder.html": {
    "href": "api/EasyRpc.AspNetCore.ModelBinding.ParameterBinderDelegateBuilder.html",
    "title": "Class ParameterBinderDelegateBuilder | EasyRpc documentation website",
    "keywords": "Class ParameterBinderDelegateBuilder Builds a delegate that can be used to bind a request parameter object Inheritance Object ParameterBinderDelegateBuilder Implements IParameterBinderDelegateBuilder IApiConfigurationCompleteAware Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : EasyRpc.AspNetCore.ModelBinding Assembly : EasyRpc.AspNetCore.dll Syntax public class ParameterBinderDelegateBuilder : IParameterBinderDelegateBuilder, IApiConfigurationCompleteAware Constructors | Improve this Doc View Source ParameterBinderDelegateBuilder(IContentSerializationService, IDeserializationTypeCreator, INoBodyParameterBinderDelegateBuilder, IBodyParameterBinderDelegateBuilder, IBodySingleParameterBinderDelegateBuilder) Default constructor Declaration public ParameterBinderDelegateBuilder(IContentSerializationService serializationService, IDeserializationTypeCreator deserializationTypeCreator, INoBodyParameterBinderDelegateBuilder noBodyParameterBinder, IBodyParameterBinderDelegateBuilder bodyParameterBinder, IBodySingleParameterBinderDelegateBuilder bodySingleParameterBinder) Parameters Type Name Description IContentSerializationService serializationService IDeserializationTypeCreator deserializationTypeCreator INoBodyParameterBinderDelegateBuilder noBodyParameterBinder IBodyParameterBinderDelegateBuilder bodyParameterBinder IBodySingleParameterBinderDelegateBuilder bodySingleParameterBinder Methods | Improve this Doc View Source ApiConfigurationComplete(IServiceProvider) Declaration public void ApiConfigurationComplete(IServiceProvider serviceScope) Parameters Type Name Description IServiceProvider serviceScope | Improve this Doc View Source CreateDefaultBodyBinding(IEndPointMethodConfigurationReadOnly, Type) Declaration protected virtual MethodEndPointDelegate CreateDefaultBodyBinding(IEndPointMethodConfigurationReadOnly configuration, Type parametersType) Parameters Type Name Description IEndPointMethodConfigurationReadOnly configuration Type parametersType Returns Type Description MethodEndPointDelegate | Improve this Doc View Source CreateNoBodyParameterBinding(IEndPointMethodConfigurationReadOnly, Type) Declaration protected virtual MethodEndPointDelegate CreateNoBodyParameterBinding(IEndPointMethodConfigurationReadOnly configuration, Type parametersType) Parameters Type Name Description IEndPointMethodConfigurationReadOnly configuration Type parametersType Returns Type Description MethodEndPointDelegate | Improve this Doc View Source CreateParameterBindingMethod(IEndPointMethodConfigurationReadOnly, out Type) Create delegate that instantiates a request parameter object using values found in the request url and body Declaration public MethodEndPointDelegate CreateParameterBindingMethod(IEndPointMethodConfigurationReadOnly configuration, out Type parametersType) Parameters Type Name Description IEndPointMethodConfigurationReadOnly configuration Type parametersType Returns Type Description MethodEndPointDelegate | Improve this Doc View Source DefaultBodyDeserialize<T>(RequestExecutionContext) Declaration protected Task DefaultBodyDeserialize<T>(RequestExecutionContext context) where T : IRequestParameters Parameters Type Name Description RequestExecutionContext context Returns Type Description Task Type Parameters Name Description T | Improve this Doc View Source EmptyParameterBinding(IEndPointMethodConfigurationReadOnly, out Type) Declaration protected virtual MethodEndPointDelegate EmptyParameterBinding(IEndPointMethodConfigurationReadOnly configuration, out Type parametersType) Parameters Type Name Description IEndPointMethodConfigurationReadOnly configuration Type parametersType Returns Type Description MethodEndPointDelegate | Improve this Doc View Source EmptyParameterFunc(RequestExecutionContext) Declaration protected static Task EmptyParameterFunc(RequestExecutionContext context) Parameters Type Name Description RequestExecutionContext context Returns Type Description Task Implements IParameterBinderDelegateBuilder IApiConfigurationCompleteAware"
  },
  "api/EasyRpc.AspNetCore.ModelBinding.SpecialParameterBinder.html": {
    "href": "api/EasyRpc.AspNetCore.ModelBinding.SpecialParameterBinder.html",
    "title": "Class SpecialParameterBinder | EasyRpc documentation website",
    "keywords": "Class SpecialParameterBinder Inheritance Object SpecialParameterBinder Implements ISpecialParameterBinder Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : EasyRpc.AspNetCore.ModelBinding Assembly : EasyRpc.AspNetCore.dll Syntax public class SpecialParameterBinder : ISpecialParameterBinder Methods | Improve this Doc View Source BindHttpCancellationTokenParameter(RequestExecutionContext, RpcParameterInfo, IRequestParameters) Declaration public virtual void BindHttpCancellationTokenParameter(RequestExecutionContext context, RpcParameterInfo parameter, IRequestParameters parameterContext) Parameters Type Name Description RequestExecutionContext context RpcParameterInfo parameter IRequestParameters parameterContext | Improve this Doc View Source BindHttpContextParameter(RequestExecutionContext, RpcParameterInfo, IRequestParameters) Declaration public virtual void BindHttpContextParameter(RequestExecutionContext context, RpcParameterInfo parameter, IRequestParameters parameterContext) Parameters Type Name Description RequestExecutionContext context RpcParameterInfo parameter IRequestParameters parameterContext | Improve this Doc View Source BindHttpRequestParameter(RequestExecutionContext, RpcParameterInfo, IRequestParameters) Declaration public virtual void BindHttpRequestParameter(RequestExecutionContext context, RpcParameterInfo parameter, IRequestParameters parameterContext) Parameters Type Name Description RequestExecutionContext context RpcParameterInfo parameter IRequestParameters parameterContext | Improve this Doc View Source BindHttpResponseParameter(RequestExecutionContext, RpcParameterInfo, IRequestParameters) Declaration public virtual void BindHttpResponseParameter(RequestExecutionContext context, RpcParameterInfo parameter, IRequestParameters parameterContext) Parameters Type Name Description RequestExecutionContext context RpcParameterInfo parameter IRequestParameters parameterContext | Improve this Doc View Source BindRequestExecutionContextParameter(RequestExecutionContext, RpcParameterInfo, IRequestParameters) Declaration public virtual void BindRequestExecutionContextParameter(RequestExecutionContext context, RpcParameterInfo parameter, IRequestParameters parameterContext) Parameters Type Name Description RequestExecutionContext context RpcParameterInfo parameter IRequestParameters parameterContext | Improve this Doc View Source BindRequestServicesParameter(RequestExecutionContext, RpcParameterInfo, IRequestParameters) Declaration public virtual void BindRequestServicesParameter(RequestExecutionContext context, RpcParameterInfo parameter, IRequestParameters parameterContext) Parameters Type Name Description RequestExecutionContext context RpcParameterInfo parameter IRequestParameters parameterContext Implements ISpecialParameterBinder"
  },
  "api/EasyRpc.AspNetCore.ModelBinding.StringValueModelBinder.html": {
    "href": "api/EasyRpc.AspNetCore.ModelBinding.StringValueModelBinder.html",
    "title": "Class StringValueModelBinder | EasyRpc documentation website",
    "keywords": "Class StringValueModelBinder Inheritance Object StringValueModelBinder Implements IStringValueModelBinder Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : EasyRpc.AspNetCore.ModelBinding Assembly : EasyRpc.AspNetCore.dll Syntax public class StringValueModelBinder : IStringValueModelBinder Methods | Improve this Doc View Source ConvertString(IRpcParameterInfo, String) Declaration public object ConvertString(IRpcParameterInfo parameter, string stringValue) Parameters Type Name Description IRpcParameterInfo parameter String stringValue Returns Type Description Object | Improve this Doc View Source ParameterBooleanValue(IRpcParameterInfo, String, Type) Declaration protected virtual object ParameterBooleanValue(IRpcParameterInfo parameter, string stringValue, Type parameterType) Parameters Type Name Description IRpcParameterInfo parameter String stringValue Type parameterType Returns Type Description Object | Improve this Doc View Source ParameterDecimalValue(IRpcParameterInfo, String, Type) Declaration protected virtual object ParameterDecimalValue(IRpcParameterInfo parameter, string stringValue, Type parameterType) Parameters Type Name Description IRpcParameterInfo parameter String stringValue Type parameterType Returns Type Description Object | Improve this Doc View Source ParameterDoubleValue(IRpcParameterInfo, String, Type) Declaration protected virtual object ParameterDoubleValue(IRpcParameterInfo parameter, string stringValue, Type parameterType) Parameters Type Name Description IRpcParameterInfo parameter String stringValue Type parameterType Returns Type Description Object | Improve this Doc View Source ParameterIntegerValue(IRpcParameterInfo, String, Type) Declaration protected virtual object ParameterIntegerValue(IRpcParameterInfo parameter, string stringValue, Type parameterType) Parameters Type Name Description IRpcParameterInfo parameter String stringValue Type parameterType Returns Type Description Object Implements IStringValueModelBinder"
  },
  "api/EasyRpc.AspNetCore.Newtonsoft.html": {
    "href": "api/EasyRpc.AspNetCore.Newtonsoft.html",
    "title": "Namespace EasyRpc.AspNetCore.Newtonsoft | EasyRpc documentation website",
    "keywords": "Namespace EasyRpc.AspNetCore.Newtonsoft Classes NewtonsoftContentSerializer NewtonsoftExtensions"
  },
  "api/EasyRpc.AspNetCore.Newtonsoft.NewtonsoftContentSerializer.html": {
    "href": "api/EasyRpc.AspNetCore.Newtonsoft.NewtonsoftContentSerializer.html",
    "title": "Class NewtonsoftContentSerializer | EasyRpc documentation website",
    "keywords": "Class NewtonsoftContentSerializer Inheritance Object BaseSerializer NewtonsoftContentSerializer Implements IContentSerializer Inherited Members BaseSerializer.ErrorHandler BaseSerializer.SetStatusAndContent(RequestExecutionContext, String) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : EasyRpc.AspNetCore.Newtonsoft Assembly : EasyRpc.AspNetCore.Newtonsoft.dll Syntax public class NewtonsoftContentSerializer : BaseSerializer, IContentSerializer Constructors | Improve this Doc View Source NewtonsoftContentSerializer(IErrorHandler, IConfigurationManager) Default constructor Declaration public NewtonsoftContentSerializer(IErrorHandler errorHandler, IConfigurationManager configurationManager) Parameters Type Name Description IErrorHandler errorHandler IConfigurationManager configurationManager Fields | Improve this Doc View Source ConfigurationManager Declaration protected readonly IConfigurationManager ConfigurationManager Field Value Type Description IConfigurationManager | Improve this Doc View Source JsonSerializer Declaration protected readonly JsonSerializer JsonSerializer Field Value Type Description Newtonsoft.Json.JsonSerializer Properties | Improve this Doc View Source IsDefault Should this serializer be user when no others match exactly. Declaration public override bool IsDefault { get; } Property Value Type Description Boolean Overrides BaseSerializer.IsDefault | Improve this Doc View Source SupportedContentTypes List of content types supported (mime types: application/json, etc) Declaration public override IEnumerable<string> SupportedContentTypes { get; } Property Value Type Description IEnumerable < String > Overrides BaseSerializer.SupportedContentTypes Methods | Improve this Doc View Source CanDeserialize(RequestExecutionContext, String) Serializer should be used for this call Declaration public override bool CanDeserialize(RequestExecutionContext context, string contentType) Parameters Type Name Description RequestExecutionContext context String contentType Returns Type Description Boolean Overrides BaseSerializer.CanDeserialize(RequestExecutionContext, String) | Improve this Doc View Source CanSerialize(RequestExecutionContext, String) Declaration public override bool CanSerialize(RequestExecutionContext context, string accepts) Parameters Type Name Description RequestExecutionContext context String accepts Returns Type Description Boolean Overrides BaseSerializer.CanSerialize(RequestExecutionContext, String) | Improve this Doc View Source DeserializeFromRequest<T>(RequestExecutionContext) Deserialize http request body to rpc context Declaration public override ValueTask<T> DeserializeFromRequest<T>(RequestExecutionContext context) Parameters Type Name Description RequestExecutionContext context Returns Type Description ValueTask <T> Type Parameters Name Description T Overrides BaseSerializer.DeserializeFromRequest<T>(RequestExecutionContext) | Improve this Doc View Source HandleContentEncoding<T>(RequestExecutionContext, String) Declaration protected ValueTask<T> HandleContentEncoding<T>(RequestExecutionContext context, string encoding) Parameters Type Name Description RequestExecutionContext context String encoding Returns Type Description ValueTask <T> Type Parameters Name Description T | Improve this Doc View Source SerializeToResponse(RequestExecutionContext) Serialize the result on the rpc context to the http response Declaration public override Task SerializeToResponse(RequestExecutionContext context) Parameters Type Name Description RequestExecutionContext context Returns Type Description Task Overrides BaseSerializer.SerializeToResponse(RequestExecutionContext) Implements IContentSerializer"
  },
  "api/EasyRpc.AspNetCore.Newtonsoft.NewtonsoftExtensions.html": {
    "href": "api/EasyRpc.AspNetCore.Newtonsoft.NewtonsoftExtensions.html",
    "title": "Class NewtonsoftExtensions | EasyRpc documentation website",
    "keywords": "Class NewtonsoftExtensions Inheritance Object NewtonsoftExtensions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : EasyRpc.AspNetCore.Newtonsoft Assembly : EasyRpc.AspNetCore.Newtonsoft.dll Syntax public static class NewtonsoftExtensions Methods | Improve this Doc View Source NewtonsoftJson(IEnvironmentConfiguration, Action<JsonSerializer>) Configure Newtonsoft json serializer Declaration public static IEnvironmentConfiguration NewtonsoftJson(this IEnvironmentConfiguration configuration, Action<JsonSerializer> configurationAction) Parameters Type Name Description IEnvironmentConfiguration configuration Action < Newtonsoft.Json.JsonSerializer > configurationAction Returns Type Description IEnvironmentConfiguration"
  },
  "api/EasyRpc.AspNetCore.RequestExecutionContext.html": {
    "href": "api/EasyRpc.AspNetCore.RequestExecutionContext.html",
    "title": "Class RequestExecutionContext | EasyRpc documentation website",
    "keywords": "Class RequestExecutionContext Context created for every request Inheritance Object RequestExecutionContext Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : EasyRpc.AspNetCore Assembly : EasyRpc.AspNetCore.dll Syntax public class RequestExecutionContext Constructors | Improve this Doc View Source RequestExecutionContext(HttpContext, IEndPointMethodHandler, Int32) Default constructor Declaration public RequestExecutionContext(HttpContext httpContext, IEndPointMethodHandler handler, int httpStatusCode) Parameters Type Name Description HttpContext httpContext IEndPointMethodHandler handler Int32 httpStatusCode Properties | Improve this Doc View Source CallFilters List of call filters for the request, can be null Declaration public List<IRequestFilter> CallFilters { get; set; } Property Value Type Description List < IRequestFilter > | Improve this Doc View Source CanCompress can call request be compressed Declaration public bool CanCompress { get; set; } Property Value Type Description Boolean | Improve this Doc View Source ContentSerializer Content serializer if available Declaration public IContentSerializer ContentSerializer { get; set; } Property Value Type Description IContentSerializer | Improve this Doc View Source ContinueRequest Continue request Declaration public bool ContinueRequest { get; set; } Property Value Type Description Boolean | Improve this Doc View Source Handler handle method for request Declaration public IEndPointMethodHandler Handler { get; } Property Value Type Description IEndPointMethodHandler | Improve this Doc View Source HttpContext HttpContext associated with request Declaration public HttpContext HttpContext { get; } Property Value Type Description HttpContext | Improve this Doc View Source HttpStatusCode Http success status Declaration public int HttpStatusCode { get; set; } Property Value Type Description Int32 | Improve this Doc View Source Parameters Parameters for rpc call Declaration public IRequestParameters Parameters { get; set; } Property Value Type Description IRequestParameters | Improve this Doc View Source ResponseHasStarted Response has started based on http context Declaration public bool ResponseHasStarted { get; } Property Value Type Description Boolean | Improve this Doc View Source Result Result property to be returned to client Declaration public object Result { get; set; } Property Value Type Description Object | Improve this Doc View Source ServiceInstance Service instance when available Declaration public object ServiceInstance { get; set; } Property Value Type Description Object"
  },
  "api/EasyRpc.AspNetCore.ResponseHeader.html": {
    "href": "api/EasyRpc.AspNetCore.ResponseHeader.html",
    "title": "Namespace EasyRpc.AspNetCore.ResponseHeader | EasyRpc documentation website",
    "keywords": "Namespace EasyRpc.AspNetCore.ResponseHeader Classes ResponseHeader Interface to apply headers on response Interfaces IResponseHeader Interface to apply headers on response"
  },
  "api/EasyRpc.AspNetCore.ResponseHeader.IResponseHeader.html": {
    "href": "api/EasyRpc.AspNetCore.ResponseHeader.IResponseHeader.html",
    "title": "Interface IResponseHeader | EasyRpc documentation website",
    "keywords": "Interface IResponseHeader Interface to apply headers on response Namespace : EasyRpc.AspNetCore.ResponseHeader Assembly : EasyRpc.AspNetCore.dll Syntax public interface IResponseHeader Properties | Improve this Doc View Source DocumentationHeader Example header used for documentation purposes Declaration KeyValuePair<string, string> DocumentationHeader { get; } Property Value Type Description KeyValuePair < String , String > Methods | Improve this Doc View Source ApplyHeader(RequestExecutionContext, IHeaderDictionary) Apply header to HttpResponse Declaration void ApplyHeader(RequestExecutionContext context, IHeaderDictionary headers) Parameters Type Name Description RequestExecutionContext context request context IHeaderDictionary headers response headers"
  },
  "api/EasyRpc.AspNetCore.ResponseHeader.ResponseHeader.html": {
    "href": "api/EasyRpc.AspNetCore.ResponseHeader.ResponseHeader.html",
    "title": "Class ResponseHeader | EasyRpc documentation website",
    "keywords": "Class ResponseHeader Interface to apply headers on response Inheritance Object ResponseHeader Implements IResponseHeader Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : EasyRpc.AspNetCore.ResponseHeader Assembly : EasyRpc.AspNetCore.dll Syntax public class ResponseHeader : IResponseHeader Constructors | Improve this Doc View Source ResponseHeader(String, String) Default constructor Declaration public ResponseHeader(string headerName, string headerValue) Parameters Type Name Description String headerName String headerValue Properties | Improve this Doc View Source DocumentationHeader Example header used for documentation purposes Declaration public KeyValuePair<string, string> DocumentationHeader { get; } Property Value Type Description KeyValuePair < String , String > Methods | Improve this Doc View Source ApplyHeader(RequestExecutionContext, IHeaderDictionary) Apply header to HttpResponse Declaration public void ApplyHeader(RequestExecutionContext context, IHeaderDictionary headers) Parameters Type Name Description RequestExecutionContext context request context IHeaderDictionary headers response headers Implements IResponseHeader"
  },
  "api/EasyRpc.AspNetCore.Routing.AspNetRoutingHandler.html": {
    "href": "api/EasyRpc.AspNetCore.Routing.AspNetRoutingHandler.html",
    "title": "Class AspNetRoutingHandler | EasyRpc documentation website",
    "keywords": "Class AspNetRoutingHandler ASP.Net routing handler Inheritance Object AspNetRoutingHandler Implements IAspNetRoutingHandler Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : EasyRpc.AspNetCore.Routing Assembly : EasyRpc.AspNetCore.dll Syntax public class AspNetRoutingHandler : IAspNetRoutingHandler Methods | Improve this Doc View Source Attach(IApplicationBuilder, IInternalApiConfiguration, IServiceProvider) Attach asp.net routing handler to asp.net pipeline Declaration public void Attach(IApplicationBuilder builder, IInternalApiConfiguration apiConfig, IServiceProvider scopedProvider) Parameters Type Name Description IApplicationBuilder builder IInternalApiConfiguration apiConfig IServiceProvider scopedProvider Implements IAspNetRoutingHandler"
  },
  "api/EasyRpc.AspNetCore.Routing.BasePathOptions.html": {
    "href": "api/EasyRpc.AspNetCore.Routing.BasePathOptions.html",
    "title": "Class BasePathOptions | EasyRpc documentation website",
    "keywords": "Class BasePathOptions Inheritance Object BasePathOptions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : EasyRpc.AspNetCore.Routing Assembly : EasyRpc.AspNetCore.dll Syntax public class BasePathOptions Properties | Improve this Doc View Source Path Declaration public string Path { get; set; } Property Value Type Description String"
  },
  "api/EasyRpc.AspNetCore.Routing.EndPointRouteBuilder.html": {
    "href": "api/EasyRpc.AspNetCore.Routing.EndPointRouteBuilder.html",
    "title": "Class EndPointRouteBuilder | EasyRpc documentation website",
    "keywords": "Class EndPointRouteBuilder Internal route building service Inheritance Object EndPointRouteBuilder Implements IEndPointRouteBuilder Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : EasyRpc.AspNetCore.Routing Assembly : EasyRpc.AspNetCore.dll Syntax public class EndPointRouteBuilder : IEndPointRouteBuilder Methods | Improve this Doc View Source BuildRouteFunc(IDictionary<String, IEndPointHandler>) Builds routing function given a dictionary of handlers Declaration public Func<string, IEndPointHandler> BuildRouteFunc(IDictionary<string, IEndPointHandler> handlers) Parameters Type Name Description IDictionary < String , IEndPointHandler > handlers Returns Type Description Func < String , IEndPointHandler > Implements IEndPointRouteBuilder"
  },
  "api/EasyRpc.AspNetCore.Routing.html": {
    "href": "api/EasyRpc.AspNetCore.Routing.html",
    "title": "Namespace EasyRpc.AspNetCore.Routing | EasyRpc documentation website",
    "keywords": "Namespace EasyRpc.AspNetCore.Routing Classes AspNetRoutingHandler ASP.Net routing handler BasePathOptions EndPointRouteBuilder Internal route building service InternalRoutingHandler Internal routing handler RegisteredEndPoints RoutingConfiguration RpcRouteInformation RpcRouteToken Interfaces IAspNetRoutingHandler ASP.Net routing handler IEndPointRouteBuilder Service that provides an internal routing method path => IEndPointHandler IInternalRoutingHandler Internal routing handler IRegisteredEndPoints IRpcRouteInformation IRpcRouteToken Enums RpcRouteTokenParseType Represents how the token should be parsed RpcRouteTokenType Represents what type of token either parameter or just a match"
  },
  "api/EasyRpc.AspNetCore.Routing.IAspNetRoutingHandler.html": {
    "href": "api/EasyRpc.AspNetCore.Routing.IAspNetRoutingHandler.html",
    "title": "Interface IAspNetRoutingHandler | EasyRpc documentation website",
    "keywords": "Interface IAspNetRoutingHandler ASP.Net routing handler Namespace : EasyRpc.AspNetCore.Routing Assembly : EasyRpc.AspNetCore.dll Syntax public interface IAspNetRoutingHandler Methods | Improve this Doc View Source Attach(IApplicationBuilder, IInternalApiConfiguration, IServiceProvider) Attach asp.net routing handler to asp.net pipeline Declaration void Attach(IApplicationBuilder builder, IInternalApiConfiguration apiConfig, IServiceProvider scopedProvider) Parameters Type Name Description IApplicationBuilder builder IInternalApiConfiguration apiConfig IServiceProvider scopedProvider"
  },
  "api/EasyRpc.AspNetCore.Routing.IEndPointRouteBuilder.html": {
    "href": "api/EasyRpc.AspNetCore.Routing.IEndPointRouteBuilder.html",
    "title": "Interface IEndPointRouteBuilder | EasyRpc documentation website",
    "keywords": "Interface IEndPointRouteBuilder Service that provides an internal routing method path => IEndPointHandler Namespace : EasyRpc.AspNetCore.Routing Assembly : EasyRpc.AspNetCore.dll Syntax public interface IEndPointRouteBuilder Methods | Improve this Doc View Source BuildRouteFunc(IDictionary<String, IEndPointHandler>) Builds routing function given a dictionary of handlers Declaration Func<string, IEndPointHandler> BuildRouteFunc(IDictionary<string, IEndPointHandler> handlers) Parameters Type Name Description IDictionary < String , IEndPointHandler > handlers Returns Type Description Func < String , IEndPointHandler >"
  },
  "api/EasyRpc.AspNetCore.Routing.IInternalRoutingHandler.html": {
    "href": "api/EasyRpc.AspNetCore.Routing.IInternalRoutingHandler.html",
    "title": "Interface IInternalRoutingHandler | EasyRpc documentation website",
    "keywords": "Interface IInternalRoutingHandler Internal routing handler Namespace : EasyRpc.AspNetCore.Routing Assembly : EasyRpc.AspNetCore.dll Syntax public interface IInternalRoutingHandler Methods | Improve this Doc View Source Attach(IApplicationBuilder, IInternalApiConfiguration, IServiceProvider) Attaches routing handler to asp.net pipeline Declaration void Attach(IApplicationBuilder builder, IInternalApiConfiguration apiConfig, IServiceProvider scopedProvider) Parameters Type Name Description IApplicationBuilder builder IInternalApiConfiguration apiConfig IServiceProvider scopedProvider"
  },
  "api/EasyRpc.AspNetCore.Routing.InternalRoutingHandler.html": {
    "href": "api/EasyRpc.AspNetCore.Routing.InternalRoutingHandler.html",
    "title": "Class InternalRoutingHandler | EasyRpc documentation website",
    "keywords": "Class InternalRoutingHandler Internal routing handler Inheritance Object InternalRoutingHandler Implements IInternalRoutingHandler Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : EasyRpc.AspNetCore.Routing Assembly : EasyRpc.AspNetCore.dll Syntax public class InternalRoutingHandler : IInternalRoutingHandler Fields | Improve this Doc View Source _endPointHandlers Declaration protected Func<string, IEndPointHandler> _endPointHandlers Field Value Type Description Func < String , IEndPointHandler > | Improve this Doc View Source _requestDelegate Declaration protected RequestDelegate _requestDelegate Field Value Type Description RequestDelegate | Improve this Doc View Source _unmappedEndPointHandler Declaration protected IUnmappedEndPointHandler _unmappedEndPointHandler Field Value Type Description IUnmappedEndPointHandler Methods | Improve this Doc View Source Attach(IApplicationBuilder, IInternalApiConfiguration, IServiceProvider) Attaches routing handler to asp.net pipeline Declaration public virtual void Attach(IApplicationBuilder builder, IInternalApiConfiguration apiConfig, IServiceProvider scopedProvider) Parameters Type Name Description IApplicationBuilder builder IInternalApiConfiguration apiConfig IServiceProvider scopedProvider | Improve this Doc View Source CreateEndPointDictionary(IInternalApiConfiguration, IUnmappedEndPointHandler) Declaration protected virtual IDictionary<string, IEndPointHandler> CreateEndPointDictionary(IInternalApiConfiguration apiConfig, IUnmappedEndPointHandler unmappedEndPointHandler) Parameters Type Name Description IInternalApiConfiguration apiConfig IUnmappedEndPointHandler unmappedEndPointHandler Returns Type Description IDictionary < String , IEndPointHandler > | Improve this Doc View Source Execute(HttpContext) Declaration protected virtual Task Execute(HttpContext context) Parameters Type Name Description HttpContext context Returns Type Description Task Implements IInternalRoutingHandler"
  },
  "api/EasyRpc.AspNetCore.Routing.IRegisteredEndPoints.html": {
    "href": "api/EasyRpc.AspNetCore.Routing.IRegisteredEndPoints.html",
    "title": "Interface IRegisteredEndPoints | EasyRpc documentation website",
    "keywords": "Interface IRegisteredEndPoints Namespace : EasyRpc.AspNetCore.Routing Assembly : EasyRpc.AspNetCore.dll Syntax public interface IRegisteredEndPoints Properties | Improve this Doc View Source EndPoints Declaration IReadOnlyList<IEndPointMethodHandler> EndPoints { get; set; } Property Value Type Description IReadOnlyList < IEndPointMethodHandler >"
  },
  "api/EasyRpc.AspNetCore.Routing.IRpcRouteInformation.html": {
    "href": "api/EasyRpc.AspNetCore.Routing.IRpcRouteInformation.html",
    "title": "Interface IRpcRouteInformation | EasyRpc documentation website",
    "keywords": "Interface IRpcRouteInformation Namespace : EasyRpc.AspNetCore.Routing Assembly : EasyRpc.AspNetCore.dll Syntax public interface IRpcRouteInformation Properties | Improve this Doc View Source HasBody Declaration bool HasBody { get; } Property Value Type Description Boolean | Improve this Doc View Source Method Declaration string Method { get; } Property Value Type Description String | Improve this Doc View Source RouteBasePath Declaration string RouteBasePath { get; } Property Value Type Description String | Improve this Doc View Source RouteTemplate Declaration string RouteTemplate { get; } Property Value Type Description String | Improve this Doc View Source Tokens Declaration IReadOnlyList<IRpcRouteToken> Tokens { get; } Property Value Type Description IReadOnlyList < IRpcRouteToken >"
  },
  "api/EasyRpc.AspNetCore.Routing.IRpcRouteToken.html": {
    "href": "api/EasyRpc.AspNetCore.Routing.IRpcRouteToken.html",
    "title": "Interface IRpcRouteToken | EasyRpc documentation website",
    "keywords": "Interface IRpcRouteToken Namespace : EasyRpc.AspNetCore.Routing Assembly : EasyRpc.AspNetCore.dll Syntax public interface IRpcRouteToken Properties | Improve this Doc View Source Name Declaration string Name { get; set; } Property Value Type Description String | Improve this Doc View Source Optional Declaration bool? Optional { get; set; } Property Value Type Description Nullable < Boolean > | Improve this Doc View Source ParameterIndex Declaration int ParameterIndex { get; set; } Property Value Type Description Int32 | Improve this Doc View Source ParseType Declaration RpcRouteTokenParseType ParseType { get; set; } Property Value Type Description RpcRouteTokenParseType | Improve this Doc View Source TokenType Declaration RpcRouteTokenType TokenType { get; set; } Property Value Type Description RpcRouteTokenType"
  },
  "api/EasyRpc.AspNetCore.Routing.RegisteredEndPoints.html": {
    "href": "api/EasyRpc.AspNetCore.Routing.RegisteredEndPoints.html",
    "title": "Class RegisteredEndPoints | EasyRpc documentation website",
    "keywords": "Class RegisteredEndPoints Inheritance Object RegisteredEndPoints Implements IRegisteredEndPoints Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : EasyRpc.AspNetCore.Routing Assembly : EasyRpc.AspNetCore.dll Syntax public class RegisteredEndPoints : IRegisteredEndPoints Properties | Improve this Doc View Source EndPoints Declaration public IReadOnlyList<IEndPointMethodHandler> EndPoints { get; set; } Property Value Type Description IReadOnlyList < IEndPointMethodHandler > Implements IRegisteredEndPoints"
  },
  "api/EasyRpc.AspNetCore.Routing.RoutingConfiguration.html": {
    "href": "api/EasyRpc.AspNetCore.Routing.RoutingConfiguration.html",
    "title": "Class RoutingConfiguration | EasyRpc documentation website",
    "keywords": "Class RoutingConfiguration Inheritance Object RoutingConfiguration Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : EasyRpc.AspNetCore.Routing Assembly : EasyRpc.AspNetCore.dll Syntax public class RoutingConfiguration Properties | Improve this Doc View Source UseAspNetCoreRouting Declaration public bool UseAspNetCoreRouting { get; set; } Property Value Type Description Boolean"
  },
  "api/EasyRpc.AspNetCore.Routing.RpcRouteInformation.html": {
    "href": "api/EasyRpc.AspNetCore.Routing.RpcRouteInformation.html",
    "title": "Class RpcRouteInformation | EasyRpc documentation website",
    "keywords": "Class RpcRouteInformation Inheritance Object RpcRouteInformation Implements IRpcRouteInformation Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : EasyRpc.AspNetCore.Routing Assembly : EasyRpc.AspNetCore.dll Syntax public class RpcRouteInformation : IRpcRouteInformation Properties | Improve this Doc View Source HasBody Declaration public bool HasBody { get; set; } Property Value Type Description Boolean | Improve this Doc View Source Method Declaration public string Method { get; set; } Property Value Type Description String | Improve this Doc View Source RouteBasePath Declaration public string RouteBasePath { get; set; } Property Value Type Description String | Improve this Doc View Source RouteTemplate Declaration public string RouteTemplate { get; set; } Property Value Type Description String | Improve this Doc View Source Tokens Declaration public IReadOnlyList<IRpcRouteToken> Tokens { get; set; } Property Value Type Description IReadOnlyList < IRpcRouteToken > Implements IRpcRouteInformation"
  },
  "api/EasyRpc.AspNetCore.Routing.RpcRouteToken.html": {
    "href": "api/EasyRpc.AspNetCore.Routing.RpcRouteToken.html",
    "title": "Class RpcRouteToken | EasyRpc documentation website",
    "keywords": "Class RpcRouteToken Inheritance Object RpcRouteToken Implements IRpcRouteToken Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : EasyRpc.AspNetCore.Routing Assembly : EasyRpc.AspNetCore.dll Syntax public class RpcRouteToken : IRpcRouteToken Properties | Improve this Doc View Source Name Declaration public string Name { get; set; } Property Value Type Description String | Improve this Doc View Source Optional Declaration public bool? Optional { get; set; } Property Value Type Description Nullable < Boolean > | Improve this Doc View Source ParameterIndex Declaration public int ParameterIndex { get; set; } Property Value Type Description Int32 | Improve this Doc View Source ParseType Declaration public RpcRouteTokenParseType ParseType { get; set; } Property Value Type Description RpcRouteTokenParseType | Improve this Doc View Source TokenType Declaration public RpcRouteTokenType TokenType { get; set; } Property Value Type Description RpcRouteTokenType Implements IRpcRouteToken"
  },
  "api/EasyRpc.AspNetCore.Routing.RpcRouteTokenParseType.html": {
    "href": "api/EasyRpc.AspNetCore.Routing.RpcRouteTokenParseType.html",
    "title": "Enum RpcRouteTokenParseType | EasyRpc documentation website",
    "keywords": "Enum RpcRouteTokenParseType Represents how the token should be parsed Namespace : EasyRpc.AspNetCore.Routing Assembly : EasyRpc.AspNetCore.dll Syntax public enum RpcRouteTokenParseType Fields Name Description DateTime Decimal Double GUID Integer String"
  },
  "api/EasyRpc.AspNetCore.Routing.RpcRouteTokenType.html": {
    "href": "api/EasyRpc.AspNetCore.Routing.RpcRouteTokenType.html",
    "title": "Enum RpcRouteTokenType | EasyRpc documentation website",
    "keywords": "Enum RpcRouteTokenType Represents what type of token either parameter or just a match Namespace : EasyRpc.AspNetCore.Routing Assembly : EasyRpc.AspNetCore.dll Syntax public enum RpcRouteTokenType Fields Name Description MatchPath Token must match a portion of the path but is not a parameter to the method Parameter Is parameter that needs to be bound"
  },
  "api/EasyRpc.AspNetCore.RpcParameterInfo.html": {
    "href": "api/EasyRpc.AspNetCore.RpcParameterInfo.html",
    "title": "Class RpcParameterInfo | EasyRpc documentation website",
    "keywords": "Class RpcParameterInfo Rpc parameter object Inheritance Object RpcParameterInfo Implements IRpcParameterInfo Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : EasyRpc.AspNetCore Assembly : EasyRpc.AspNetCore.dll Syntax public class RpcParameterInfo : IRpcParameterInfo Properties | Improve this Doc View Source DefaultValue Default value for parameter Declaration public object DefaultValue { get; set; } Property Value Type Description Object | Improve this Doc View Source HasDefaultValue Has default value Declaration public bool HasDefaultValue { get; set; } Property Value Type Description Boolean | Improve this Doc View Source Name Name of parameter Declaration public string Name { get; set; } Property Value Type Description String | Improve this Doc View Source ParameterSource Source for parameter Declaration public EndPointMethodParameterSource ParameterSource { get; set; } Property Value Type Description EndPointMethodParameterSource | Improve this Doc View Source ParamType Parameter type Declaration [JsonIgnore] public Type ParamType { get; set; } Property Value Type Description Type | Improve this Doc View Source Position Parameter index Declaration public int Position { get; set; } Property Value Type Description Int32 | Improve this Doc View Source TypeName Type name of property Declaration public string TypeName { get; set; } Property Value Type Description String Implements IRpcParameterInfo"
  },
  "api/EasyRpc.AspNetCore.Serializers.BaseSerializer.html": {
    "href": "api/EasyRpc.AspNetCore.Serializers.BaseSerializer.html",
    "title": "Class BaseSerializer | EasyRpc documentation website",
    "keywords": "Class BaseSerializer Abstract base class for content serializer Inheritance Object BaseSerializer NewtonsoftContentSerializer JsonContentSerializer XmlContentSerializer Utf8JsonContentSerializer Implements IContentSerializer Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : EasyRpc.AspNetCore.Serializers Assembly : EasyRpc.AspNetCore.dll Syntax public abstract class BaseSerializer : IContentSerializer Constructors | Improve this Doc View Source BaseSerializer(IErrorHandler) Default constructor Declaration protected BaseSerializer(IErrorHandler errorHandler) Parameters Type Name Description IErrorHandler errorHandler Fields | Improve this Doc View Source ErrorHandler Error handler for serializer Declaration protected IErrorHandler ErrorHandler Field Value Type Description IErrorHandler Properties | Improve this Doc View Source IsDefault Should this serializer be user when no others match exactly. Declaration public abstract bool IsDefault { get; } Property Value Type Description Boolean | Improve this Doc View Source SupportedContentTypes List of content types supported (mime types: application/json, etc) Declaration public abstract IEnumerable<string> SupportedContentTypes { get; } Property Value Type Description IEnumerable < String > Methods | Improve this Doc View Source CanDeserialize(RequestExecutionContext, String) Serializer should be used for this call Declaration public abstract bool CanDeserialize(RequestExecutionContext context, string contentType) Parameters Type Name Description RequestExecutionContext context String contentType Returns Type Description Boolean | Improve this Doc View Source CanSerialize(RequestExecutionContext, String) Declaration public abstract bool CanSerialize(RequestExecutionContext context, string accepts) Parameters Type Name Description RequestExecutionContext context String accepts Returns Type Description Boolean | Improve this Doc View Source DeserializeFromRequest<T>(RequestExecutionContext) Deserialize http request body to rpc context Declaration public abstract ValueTask<T> DeserializeFromRequest<T>(RequestExecutionContext context) Parameters Type Name Description RequestExecutionContext context Returns Type Description ValueTask <T> Type Parameters Name Description T | Improve this Doc View Source SerializeToResponse(RequestExecutionContext) Serialize the result on the rpc context to the http response Declaration public abstract Task SerializeToResponse(RequestExecutionContext context) Parameters Type Name Description RequestExecutionContext context Returns Type Description Task | Improve this Doc View Source SetStatusAndContent(RequestExecutionContext, String) Set success code and content type in response Declaration protected void SetStatusAndContent(RequestExecutionContext context, string contentType) Parameters Type Name Description RequestExecutionContext context String contentType Implements IContentSerializer"
  },
  "api/EasyRpc.AspNetCore.Serializers.ContentSerializationService.html": {
    "href": "api/EasyRpc.AspNetCore.Serializers.ContentSerializationService.html",
    "title": "Class ContentSerializationService | EasyRpc documentation website",
    "keywords": "Class ContentSerializationService Content serialization service Inheritance Object ContentSerializationService Implements IContentSerializationService IApiConfigurationCompleteAware Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : EasyRpc.AspNetCore.Serializers Assembly : EasyRpc.AspNetCore.dll Syntax public class ContentSerializationService : IContentSerializationService, IApiConfigurationCompleteAware Constructors | Improve this Doc View Source ContentSerializationService(ICustomActionResultExecutor, IErrorHandler, IEnumerable<IContentSerializer>) Default constructor Declaration public ContentSerializationService(ICustomActionResultExecutor actionResultExecutor, IErrorHandler errorHandler, IEnumerable<IContentSerializer> contentSerializers) Parameters Type Name Description ICustomActionResultExecutor actionResultExecutor IErrorHandler errorHandler IEnumerable < IContentSerializer > contentSerializers Properties | Improve this Doc View Source SupportedContentTypes List of content types supported but serialization service Declaration public IEnumerable<string> SupportedContentTypes { get; } Property Value Type Description IEnumerable < String > Methods | Improve this Doc View Source ApiConfigurationComplete(IServiceProvider) Declaration public void ApiConfigurationComplete(IServiceProvider serviceScope) Parameters Type Name Description IServiceProvider serviceScope | Improve this Doc View Source DeserializeFromRequest<T>(RequestExecutionContext) Deserialize request stream to a specific type Declaration public ValueTask<T> DeserializeFromRequest<T>(RequestExecutionContext context) Parameters Type Name Description RequestExecutionContext context Returns Type Description ValueTask <T> Type Parameters Name Description T | Improve this Doc View Source GenerateSupportedContentTypesList() Generates a list of content types from the content serializer Declaration protected virtual List<string> GenerateSupportedContentTypesList() Returns Type Description List < String > | Improve this Doc View Source NegotiateDeserialize<T>(RequestExecutionContext, String) Deserializes content using Content-Type Declaration protected virtual ValueTask<T> NegotiateDeserialize<T>(RequestExecutionContext context, string contentType) Parameters Type Name Description RequestExecutionContext context String contentType Returns Type Description ValueTask <T> Type Parameters Name Description T | Improve this Doc View Source NegotiateSerialization(RequestExecutionContext) Negotiate serialization Declaration protected virtual Task NegotiateSerialization(RequestExecutionContext context) Parameters Type Name Description RequestExecutionContext context Returns Type Description Task | Improve this Doc View Source NullResult(RequestExecutionContext) Return a null result value based Declaration protected virtual Task NullResult(RequestExecutionContext context) Parameters Type Name Description RequestExecutionContext context Returns Type Description Task | Improve this Doc View Source SerializeToResponse(RequestExecutionContext) Serialize result on context to response stream Declaration public Task SerializeToResponse(RequestExecutionContext context) Parameters Type Name Description RequestExecutionContext context Returns Type Description Task Implements IContentSerializationService IApiConfigurationCompleteAware"
  },
  "api/EasyRpc.AspNetCore.Serializers.html": {
    "href": "api/EasyRpc.AspNetCore.Serializers.html",
    "title": "Namespace EasyRpc.AspNetCore.Serializers | EasyRpc documentation website",
    "keywords": "Namespace EasyRpc.AspNetCore.Serializers Classes BaseSerializer Abstract base class for content serializer ContentSerializationService Content serialization service JsonContentSerializer Default json content serializer based on System.Text.Json RawContentWriter Raw content writing service XmlContentSerializer XmlContentSerializerTypeAttributor Interfaces IContentSerializationService Service that can be used to serialize content to the response stream IContentSerializer Interface for content serializer IRawContentWriter Interface for service that writes raw content to response stream"
  },
  "api/EasyRpc.AspNetCore.Serializers.IContentSerializationService.html": {
    "href": "api/EasyRpc.AspNetCore.Serializers.IContentSerializationService.html",
    "title": "Interface IContentSerializationService | EasyRpc documentation website",
    "keywords": "Interface IContentSerializationService Service that can be used to serialize content to the response stream Namespace : EasyRpc.AspNetCore.Serializers Assembly : EasyRpc.AspNetCore.dll Syntax public interface IContentSerializationService Properties | Improve this Doc View Source SupportedContentTypes List of content types supported but serialization service Declaration IEnumerable<string> SupportedContentTypes { get; } Property Value Type Description IEnumerable < String > Methods | Improve this Doc View Source DeserializeFromRequest<T>(RequestExecutionContext) Deserialize request stream to a specific type Declaration ValueTask<T> DeserializeFromRequest<T>(RequestExecutionContext context) Parameters Type Name Description RequestExecutionContext context Returns Type Description ValueTask <T> Type Parameters Name Description T | Improve this Doc View Source SerializeToResponse(RequestExecutionContext) Serialize result on context to response stream Declaration Task SerializeToResponse(RequestExecutionContext context) Parameters Type Name Description RequestExecutionContext context Returns Type Description Task"
  },
  "api/EasyRpc.AspNetCore.Serializers.IContentSerializer.html": {
    "href": "api/EasyRpc.AspNetCore.Serializers.IContentSerializer.html",
    "title": "Interface IContentSerializer | EasyRpc documentation website",
    "keywords": "Interface IContentSerializer Interface for content serializer Namespace : EasyRpc.AspNetCore.Serializers Assembly : EasyRpc.AspNetCore.dll Syntax public interface IContentSerializer Properties | Improve this Doc View Source IsDefault Should this serializer be user when no others match exactly. Declaration bool IsDefault { get; } Property Value Type Description Boolean | Improve this Doc View Source SupportedContentTypes List of content types supported (mime types: application/json, etc) Declaration IEnumerable<string> SupportedContentTypes { get; } Property Value Type Description IEnumerable < String > Methods | Improve this Doc View Source CanDeserialize(RequestExecutionContext, String) Serializer should be used for this call Declaration bool CanDeserialize(RequestExecutionContext context, string contentType) Parameters Type Name Description RequestExecutionContext context String contentType Returns Type Description Boolean | Improve this Doc View Source CanSerialize(RequestExecutionContext, String) Declaration bool CanSerialize(RequestExecutionContext context, string accepts) Parameters Type Name Description RequestExecutionContext context String accepts Returns Type Description Boolean | Improve this Doc View Source DeserializeFromRequest<T>(RequestExecutionContext) Deserialize http request body to rpc context Declaration ValueTask<T> DeserializeFromRequest<T>(RequestExecutionContext context) Parameters Type Name Description RequestExecutionContext context Returns Type Description ValueTask <T> Type Parameters Name Description T | Improve this Doc View Source SerializeToResponse(RequestExecutionContext) Serialize the result on the rpc context to the http response Declaration Task SerializeToResponse(RequestExecutionContext context) Parameters Type Name Description RequestExecutionContext context Returns Type Description Task"
  },
  "api/EasyRpc.AspNetCore.Serializers.IRawContentWriter.html": {
    "href": "api/EasyRpc.AspNetCore.Serializers.IRawContentWriter.html",
    "title": "Interface IRawContentWriter | EasyRpc documentation website",
    "keywords": "Interface IRawContentWriter Interface for service that writes raw content to response stream Namespace : EasyRpc.AspNetCore.Serializers Assembly : EasyRpc.AspNetCore.dll Syntax public interface IRawContentWriter Methods | Improve this Doc View Source WriteRawContent(RequestExecutionContext, String, String) Write result from requestContext to response stream as raw bytes without serialization Declaration Task WriteRawContent(RequestExecutionContext requestContext, string contentType, string contentEncoding) Parameters Type Name Description RequestExecutionContext requestContext String contentType String contentEncoding Returns Type Description Task"
  },
  "api/EasyRpc.AspNetCore.Serializers.JsonContentSerializer.html": {
    "href": "api/EasyRpc.AspNetCore.Serializers.JsonContentSerializer.html",
    "title": "Class JsonContentSerializer | EasyRpc documentation website",
    "keywords": "Class JsonContentSerializer Default json content serializer based on System.Text.Json Inheritance Object BaseSerializer JsonContentSerializer Implements IContentSerializer IApiConfigurationCompleteAware Inherited Members BaseSerializer.ErrorHandler BaseSerializer.SetStatusAndContent(RequestExecutionContext, String) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : EasyRpc.AspNetCore.Serializers Assembly : EasyRpc.AspNetCore.dll Syntax public class JsonContentSerializer : BaseSerializer, IContentSerializer, IApiConfigurationCompleteAware Constructors | Improve this Doc View Source JsonContentSerializer(IErrorHandler, IConfigurationManager) Default constructor Declaration public JsonContentSerializer(IErrorHandler errorHandler, IConfigurationManager configurationManager) Parameters Type Name Description IErrorHandler errorHandler IConfigurationManager configurationManager Properties | Improve this Doc View Source IsDefault Should this serializer be user when no others match exactly. Declaration public override bool IsDefault { get; } Property Value Type Description Boolean Overrides BaseSerializer.IsDefault | Improve this Doc View Source SupportedContentTypes List of content types supported (mime types: application/json, etc) Declaration public override IEnumerable<string> SupportedContentTypes { get; } Property Value Type Description IEnumerable < String > Overrides BaseSerializer.SupportedContentTypes Methods | Improve this Doc View Source ApiConfigurationComplete(IServiceProvider) Declaration public void ApiConfigurationComplete(IServiceProvider serviceScope) Parameters Type Name Description IServiceProvider serviceScope | Improve this Doc View Source CanDeserialize(RequestExecutionContext, String) Serializer should be used for this call Declaration public override bool CanDeserialize(RequestExecutionContext context, string contentType) Parameters Type Name Description RequestExecutionContext context String contentType Returns Type Description Boolean Overrides BaseSerializer.CanDeserialize(RequestExecutionContext, String) | Improve this Doc View Source CanSerialize(RequestExecutionContext, String) Declaration public override bool CanSerialize(RequestExecutionContext context, string accepts) Parameters Type Name Description RequestExecutionContext context String accepts Returns Type Description Boolean Overrides BaseSerializer.CanSerialize(RequestExecutionContext, String) | Improve this Doc View Source DefaultJsonSerializerOptions() Method that provides default json settings Declaration public static Func<JsonSerializerOptions> DefaultJsonSerializerOptions() Returns Type Description Func < JsonSerializerOptions > | Improve this Doc View Source DeserializeFromRequest<T>(RequestExecutionContext) Deserialize http request body to rpc context Declaration public override ValueTask<T> DeserializeFromRequest<T>(RequestExecutionContext context) Parameters Type Name Description RequestExecutionContext context Returns Type Description ValueTask <T> Type Parameters Name Description T Overrides BaseSerializer.DeserializeFromRequest<T>(RequestExecutionContext) | Improve this Doc View Source SerializeToResponse(RequestExecutionContext) Serialize the result on the rpc context to the http response Declaration public override Task SerializeToResponse(RequestExecutionContext context) Parameters Type Name Description RequestExecutionContext context Returns Type Description Task Overrides BaseSerializer.SerializeToResponse(RequestExecutionContext) Implements IContentSerializer IApiConfigurationCompleteAware"
  },
  "api/EasyRpc.AspNetCore.Serializers.RawContentWriter.html": {
    "href": "api/EasyRpc.AspNetCore.Serializers.RawContentWriter.html",
    "title": "Class RawContentWriter | EasyRpc documentation website",
    "keywords": "Class RawContentWriter Raw content writing service Inheritance Object RawContentWriter Implements IRawContentWriter Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : EasyRpc.AspNetCore.Serializers Assembly : EasyRpc.AspNetCore.dll Syntax public class RawContentWriter : IRawContentWriter Constructors | Improve this Doc View Source RawContentWriter(ICustomActionResultExecutor) Default constructor Declaration public RawContentWriter(ICustomActionResultExecutor actionResultExecutor) Parameters Type Name Description ICustomActionResultExecutor actionResultExecutor Methods | Improve this Doc View Source WriteRawContent(RequestExecutionContext, String, String) Write result from requestContext to response stream as raw bytes without serialization Declaration public Task WriteRawContent(RequestExecutionContext requestContext, string contentType, string contentEncoding) Parameters Type Name Description RequestExecutionContext requestContext String contentType String contentEncoding Returns Type Description Task Implements IRawContentWriter"
  },
  "api/EasyRpc.AspNetCore.Serializers.XmlContentSerializer.html": {
    "href": "api/EasyRpc.AspNetCore.Serializers.XmlContentSerializer.html",
    "title": "Class XmlContentSerializer | EasyRpc documentation website",
    "keywords": "Class XmlContentSerializer Inheritance Object BaseSerializer XmlContentSerializer Implements IContentSerializer Inherited Members BaseSerializer.ErrorHandler BaseSerializer.SetStatusAndContent(RequestExecutionContext, String) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : EasyRpc.AspNetCore.Serializers Assembly : EasyRpc.AspNetCore.dll Syntax public class XmlContentSerializer : BaseSerializer, IContentSerializer Constructors | Improve this Doc View Source XmlContentSerializer(IErrorHandler) Default constructor Declaration public XmlContentSerializer(IErrorHandler errorHandler) Parameters Type Name Description IErrorHandler errorHandler Properties | Improve this Doc View Source IsDefault Should this serializer be user when no others match exactly. Declaration public override bool IsDefault { get; } Property Value Type Description Boolean Overrides BaseSerializer.IsDefault | Improve this Doc View Source SupportedContentTypes List of content types supported (mime types: application/json, etc) Declaration public override IEnumerable<string> SupportedContentTypes { get; } Property Value Type Description IEnumerable < String > Overrides BaseSerializer.SupportedContentTypes Methods | Improve this Doc View Source CanDeserialize(RequestExecutionContext, String) Serializer should be used for this call Declaration public override bool CanDeserialize(RequestExecutionContext context, string contentType) Parameters Type Name Description RequestExecutionContext context String contentType Returns Type Description Boolean Overrides BaseSerializer.CanDeserialize(RequestExecutionContext, String) | Improve this Doc View Source CanSerialize(RequestExecutionContext, String) Declaration public override bool CanSerialize(RequestExecutionContext context, string accepts) Parameters Type Name Description RequestExecutionContext context String accepts Returns Type Description Boolean Overrides BaseSerializer.CanSerialize(RequestExecutionContext, String) | Improve this Doc View Source DeserializeFromRequest<T>(RequestExecutionContext) Deserialize http request body to rpc context Declaration public override ValueTask<T> DeserializeFromRequest<T>(RequestExecutionContext context) Parameters Type Name Description RequestExecutionContext context Returns Type Description ValueTask <T> Type Parameters Name Description T Overrides BaseSerializer.DeserializeFromRequest<T>(RequestExecutionContext) | Improve this Doc View Source SerializeToResponse(RequestExecutionContext) Serialize the result on the rpc context to the http response Declaration public override Task SerializeToResponse(RequestExecutionContext context) Parameters Type Name Description RequestExecutionContext context Returns Type Description Task Overrides BaseSerializer.SerializeToResponse(RequestExecutionContext) Implements IContentSerializer"
  },
  "api/EasyRpc.AspNetCore.Serializers.XmlContentSerializerTypeAttributor.html": {
    "href": "api/EasyRpc.AspNetCore.Serializers.XmlContentSerializerTypeAttributor.html",
    "title": "Class XmlContentSerializerTypeAttributor | EasyRpc documentation website",
    "keywords": "Class XmlContentSerializerTypeAttributor Inheritance Object XmlContentSerializerTypeAttributor Implements ISerializationTypeAttributor Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : EasyRpc.AspNetCore.Serializers Assembly : EasyRpc.AspNetCore.dll Syntax public class XmlContentSerializerTypeAttributor : ISerializationTypeAttributor Methods | Improve this Doc View Source AttributeMethodProperty(PropertyBuilder, IEndPointMethodConfigurationReadOnly, RpcParameterInfo) Declaration public void AttributeMethodProperty(PropertyBuilder propertyBuilder, IEndPointMethodConfigurationReadOnly methodConfiguration, RpcParameterInfo parameterInfoParameter) Parameters Type Name Description PropertyBuilder propertyBuilder IEndPointMethodConfigurationReadOnly methodConfiguration RpcParameterInfo parameterInfoParameter | Improve this Doc View Source AttributeMethodType(TypeBuilder, IEndPointMethodConfigurationReadOnly) Declaration public void AttributeMethodType(TypeBuilder typeBuilder, IEndPointMethodConfigurationReadOnly methodConfiguration) Parameters Type Name Description TypeBuilder typeBuilder IEndPointMethodConfigurationReadOnly methodConfiguration | Improve this Doc View Source AttributeProperty(PropertyBuilder, Int32) Declaration public void AttributeProperty(PropertyBuilder propertyBuilder, int index) Parameters Type Name Description PropertyBuilder propertyBuilder Int32 index | Improve this Doc View Source AttributeType(TypeBuilder, String) Declaration public void AttributeType(TypeBuilder typeBuilder, string classNameHint) Parameters Type Name Description TypeBuilder typeBuilder String classNameHint Implements ISerializationTypeAttributor"
  },
  "api/EasyRpc.AspNetCore.TypesThat.html": {
    "href": "api/EasyRpc.AspNetCore.TypesThat.html",
    "title": "Class TypesThat | EasyRpc documentation website",
    "keywords": "Class TypesThat Static class that offers type filters Inheritance Object TypesThat Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : EasyRpc.AspNetCore Assembly : EasyRpc.AspNetCore.dll Syntax public static class TypesThat Methods | Improve this Doc View Source AreBasedOn(Func<Type, Boolean>) Adds a type filter that filters a type based on it base type or interfaces Declaration public static TypesThatConfiguration AreBasedOn(Func<Type, bool> typeFilter) Parameters Type Name Description Func < Type , Boolean > typeFilter type filter Returns Type Description TypesThatConfiguration type filter | Improve this Doc View Source AreBasedOn(Type) Adds a type filter that returns true when a class is based on the specified type Declaration public static TypesThatConfiguration AreBasedOn(Type type) Parameters Type Name Description Type type based on type Returns Type Description TypesThatConfiguration type filter | Improve this Doc View Source AreBasedOn<T>() Adds a type filter that returns true when a class is based on the specified type Declaration public static TypesThatConfiguration AreBasedOn<T>() Returns Type Description TypesThatConfiguration type filter Type Parameters Name Description T based on type | Improve this Doc View Source AreConstructedGeneric() Adds a type filter that returns true if the type is constructed generic Declaration public static TypesThatConfiguration AreConstructedGeneric() Returns Type Description TypesThatConfiguration configuration object | Improve this Doc View Source AreInTheSameNamespace(String, Boolean) Creates a new type filter based on the types namespace Declaration public static TypesThatConfiguration AreInTheSameNamespace(string namespace, bool includeSubnamespaces = false) Parameters Type Name Description String namespace Boolean includeSubnamespaces Returns Type Description TypesThatConfiguration | Improve this Doc View Source AreInTheSameNamespaceAs(Type, Boolean) Creates a new type filter that fiters based on if it's in the same namespace as another class Declaration public static TypesThatConfiguration AreInTheSameNamespaceAs(Type type, bool includeSubnamespaces = false) Parameters Type Name Description Type type Boolean includeSubnamespaces Returns Type Description TypesThatConfiguration | Improve this Doc View Source AreInTheSameNamespaceAs<T>(Boolean) Creates a new type filter that fiters based on if it's in the same namespace as another class Declaration public static TypesThatConfiguration AreInTheSameNamespaceAs<T>(bool includeSubnamespaces = false) Parameters Type Name Description Boolean includeSubnamespaces Returns Type Description TypesThatConfiguration Type Parameters Name Description T | Improve this Doc View Source AreNotPublic() Adds a type filter that returns true if the type is private Declaration public static TypesThatConfiguration AreNotPublic() Returns Type Description TypesThatConfiguration configuration object | Improve this Doc View Source AreOpenGeneric() Adds a type filter that returns true if the type is an open generic Declaration public static TypesThatConfiguration AreOpenGeneric() Returns Type Description TypesThatConfiguration configuration object | Improve this Doc View Source ArePublic() Adds a type filter that returns true if the type is public Declaration public static TypesThatConfiguration ArePublic() Returns Type Description TypesThatConfiguration configuration object | Improve this Doc View Source Contains(String) Creates a new type filter that returns true if the Name contains the provided string Declaration public static TypesThatConfiguration Contains(string name) Parameters Type Name Description String name Returns Type Description TypesThatConfiguration | Improve this Doc View Source EndWith(String) Creates a new type filter that returns true if the Name ends with the provided string Declaration public static TypesThatConfiguration EndWith(string name) Parameters Type Name Description String name Returns Type Description TypesThatConfiguration | Improve this Doc View Source HaveAttribute(Func<Type, Boolean>) Provides a type filter for attributes, if true then the type will be used Declaration public static TypesThatConfiguration HaveAttribute(Func<Type, bool> consider) Parameters Type Name Description Func < Type , Boolean > consider Returns Type Description TypesThatConfiguration | Improve this Doc View Source HaveAttribute(Type, Func<Attribute, Boolean>) Tests to see if a type has an attribute Declaration public static TypesThatConfiguration HaveAttribute(Type attributeType, Func<Attribute, bool> attributeFilter = null) Parameters Type Name Description Type attributeType Func < Attribute , Boolean > attributeFilter Returns Type Description TypesThatConfiguration | Improve this Doc View Source HaveAttribute<TAttribute>(Func<TAttribute, Boolean>) Tests to see if a type has an attribute Declaration public static TypesThatConfiguration HaveAttribute<TAttribute>(Func<TAttribute, bool> attributeFilter = null) where TAttribute : Attribute Parameters Type Name Description Func <TAttribute, Boolean > attributeFilter Returns Type Description TypesThatConfiguration Type Parameters Name Description TAttribute | Improve this Doc View Source HaveProperty(String) Creates a type filter that returns true if a type has a particular property name Declaration public static TypesThatConfiguration HaveProperty(string propertyName) Parameters Type Name Description String propertyName property name Returns Type Description TypesThatConfiguration configuration object | Improve this Doc View Source HaveProperty(Type, String) Creates a type filter that returns true if a type has a particular property name Declaration public static TypesThatConfiguration HaveProperty(Type propertyType, string propertyName = null) Parameters Type Name Description Type propertyType property type String propertyName property name Returns Type Description TypesThatConfiguration configuration object | Improve this Doc View Source HaveProperty<T>(String) Creates a type filter that returns true if a type has a particular property name Declaration public static TypesThatConfiguration HaveProperty<T>(string propertyName = null) Parameters Type Name Description String propertyName property name Returns Type Description TypesThatConfiguration configuration object Type Parameters Name Description T property type | Improve this Doc View Source Match(Func<Type, Boolean>) Adds a type filter Declaration public static TypesThatConfiguration Match(Func<Type, bool> matchFilter) Parameters Type Name Description Func < Type , Boolean > matchFilter Returns Type Description TypesThatConfiguration type filter | Improve this Doc View Source StartWith(String) Creates a new type filter method that returns true if the Name of the type starts with name Declaration public static TypesThatConfiguration StartWith(string name) Parameters Type Name Description String name Returns Type Description TypesThatConfiguration"
  },
  "api/EasyRpc.AspNetCore.Utf8Json.html": {
    "href": "api/EasyRpc.AspNetCore.Utf8Json.html",
    "title": "Namespace EasyRpc.AspNetCore.Utf8Json | EasyRpc documentation website",
    "keywords": "Namespace EasyRpc.AspNetCore.Utf8Json Classes Utf8JsonContentSerializer Utf8Json serializer"
  },
  "api/EasyRpc.AspNetCore.Utf8Json.Utf8JsonContentSerializer.html": {
    "href": "api/EasyRpc.AspNetCore.Utf8Json.Utf8JsonContentSerializer.html",
    "title": "Class Utf8JsonContentSerializer | EasyRpc documentation website",
    "keywords": "Class Utf8JsonContentSerializer Utf8Json serializer Inheritance Object BaseSerializer Utf8JsonContentSerializer Implements IContentSerializer Inherited Members BaseSerializer.ErrorHandler BaseSerializer.SetStatusAndContent(RequestExecutionContext, String) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : EasyRpc.AspNetCore.Utf8Json Assembly : EasyRpc.AspNetCore.Utf8Json.dll Syntax public class Utf8JsonContentSerializer : BaseSerializer, IContentSerializer Constructors | Improve this Doc View Source Utf8JsonContentSerializer(IErrorHandler) Default constructor Declaration public Utf8JsonContentSerializer(IErrorHandler errorHandler) Parameters Type Name Description IErrorHandler errorHandler Fields | Improve this Doc View Source ContentType Content type for content type Declaration protected string ContentType Field Value Type Description String Properties | Improve this Doc View Source IsDefault This is a default serializer Declaration public override bool IsDefault { get; } Property Value Type Description Boolean Overrides BaseSerializer.IsDefault | Improve this Doc View Source SupportedContentTypes Supports application/json Declaration public override IEnumerable<string> SupportedContentTypes { get; } Property Value Type Description IEnumerable < String > Overrides BaseSerializer.SupportedContentTypes Methods | Improve this Doc View Source CanDeserialize(RequestExecutionContext, String) Serializer should be used for this call Declaration public override bool CanDeserialize(RequestExecutionContext context, string contentType) Parameters Type Name Description RequestExecutionContext context String contentType Returns Type Description Boolean Overrides BaseSerializer.CanDeserialize(RequestExecutionContext, String) | Improve this Doc View Source CanSerialize(RequestExecutionContext, String) Declaration public override bool CanSerialize(RequestExecutionContext context, string accepts) Parameters Type Name Description RequestExecutionContext context String accepts Returns Type Description Boolean Overrides BaseSerializer.CanSerialize(RequestExecutionContext, String) | Improve this Doc View Source DeserializeFromRequest<T>(RequestExecutionContext) Deserialize http request body to rpc context Declaration public override ValueTask<T> DeserializeFromRequest<T>(RequestExecutionContext context) Parameters Type Name Description RequestExecutionContext context Returns Type Description ValueTask <T> Type Parameters Name Description T Overrides BaseSerializer.DeserializeFromRequest<T>(RequestExecutionContext) | Improve this Doc View Source SerializeToResponse(RequestExecutionContext) Serialize the result on the rpc context to the http response Declaration public override Task SerializeToResponse(RequestExecutionContext context) Parameters Type Name Description RequestExecutionContext context Returns Type Description Task Overrides BaseSerializer.SerializeToResponse(RequestExecutionContext) Implements IContentSerializer"
  },
  "api/EasyRpc.AspNetCore.Utilities.GenericFilterGroup-1.html": {
    "href": "api/EasyRpc.AspNetCore.Utilities.GenericFilterGroup-1.html",
    "title": "Class GenericFilterGroup<T> | EasyRpc documentation website",
    "keywords": "Class GenericFilterGroup<T> Generic filter group Inheritance Object GenericFilterGroup<T> TypesThatConfiguration Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : EasyRpc.AspNetCore.Utilities Assembly : EasyRpc.AspNetCore.dll Syntax public class GenericFilterGroup<T> Type Parameters Name Description T Constructors | Improve this Doc View Source GenericFilterGroup(Func<T, Boolean>[]) Default Constructor Declaration public GenericFilterGroup(params Func<T, bool>[] typeFilters) Parameters Type Name Description Func <T, Boolean >[] typeFilters Properties | Improve this Doc View Source UseOr Or together the filters rather than And them Declaration public bool UseOr { get; set; } Property Value Type Description Boolean Methods | Improve this Doc View Source Add(Func<T, Boolean>) Add filter to filter group Declaration public void Add(Func<T, bool> filter) Parameters Type Name Description Func <T, Boolean > filter | Improve this Doc View Source Execute(T) Internal method that does the filtering Declaration public bool Execute(T type) Parameters Type Name Description T type Returns Type Description Boolean Operators | Improve this Doc View Source Implicit(GenericFilterGroup<T> to Func<T, Boolean>) Automatically convert from GenericFilterGroup to Func(T,bool) Declaration public static implicit operator Func<T, bool>(GenericFilterGroup<T> group) Parameters Type Name Description GenericFilterGroup <T> group Returns Type Description Func <T, Boolean >"
  },
  "api/EasyRpc.AspNetCore.Utilities.html": {
    "href": "api/EasyRpc.AspNetCore.Utilities.html",
    "title": "Namespace EasyRpc.AspNetCore.Utilities | EasyRpc documentation website",
    "keywords": "Namespace EasyRpc.AspNetCore.Utilities Classes GenericFilterGroup<T> Generic filter group TypesThatConfiguration Represents a configuration for a type filter"
  },
  "api/EasyRpc.AspNetCore.Utilities.TypesThatConfiguration.html": {
    "href": "api/EasyRpc.AspNetCore.Utilities.TypesThatConfiguration.html",
    "title": "Class TypesThatConfiguration | EasyRpc documentation website",
    "keywords": "Class TypesThatConfiguration Represents a configuration for a type filter Inheritance Object GenericFilterGroup < Type > TypesThatConfiguration Inherited Members GenericFilterGroup<Type>.UseOr GenericFilterGroup<Type>.Add(Func<Type, Boolean>) GenericFilterGroup<Type>.Execute(Type) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : EasyRpc.AspNetCore.Utilities Assembly : EasyRpc.AspNetCore.dll Syntax public class TypesThatConfiguration : GenericFilterGroup<Type> Properties | Improve this Doc View Source And And together filters rather than using Or Declaration public TypesThatConfiguration And { get; } Property Value Type Description TypesThatConfiguration | Improve this Doc View Source Not Reverses the logic for the next type filter Declaration public TypesThatConfiguration Not { get; } Property Value Type Description TypesThatConfiguration | Improve this Doc View Source Or Or together the filters rather than using And Declaration public TypesThatConfiguration Or { get; } Property Value Type Description TypesThatConfiguration Methods | Improve this Doc View Source AreBasedOn(Func<Type, Boolean>) Allows you to provide a method that will test a classes base classes (base class and interfaces) Declaration public TypesThatConfiguration AreBasedOn(Func<Type, bool> typeFilter) Parameters Type Name Description Func < Type , Boolean > typeFilter based on type filter Returns Type Description TypesThatConfiguration type filter | Improve this Doc View Source AreBasedOn(Type) Filters types that are based on Declaration public TypesThatConfiguration AreBasedOn(Type baseType) Parameters Type Name Description Type baseType Returns Type Description TypesThatConfiguration | Improve this Doc View Source AreBasedOn<T>() Filters types based on a particular Declaration public TypesThatConfiguration AreBasedOn<T>() Returns Type Description TypesThatConfiguration Type Parameters Name Description T | Improve this Doc View Source AreConstructedGeneric() Adds a type filter that returns true if the type is constructed generic Declaration public TypesThatConfiguration AreConstructedGeneric() Returns Type Description TypesThatConfiguration configuration object | Improve this Doc View Source AreInTheSameNamespace(String, Boolean) Creates a new type filter based on the types namespace Declaration public TypesThatConfiguration AreInTheSameNamespace(string namespace, bool includeSubnamespaces = false) Parameters Type Name Description String namespace Boolean includeSubnamespaces Returns Type Description TypesThatConfiguration | Improve this Doc View Source AreInTheSameNamespaceAs(Type, Boolean) Creates a new type filter that fiters based on if it's in the same namespace as another class Declaration public TypesThatConfiguration AreInTheSameNamespaceAs(Type type, bool includeSubnamespaces = false) Parameters Type Name Description Type type Boolean includeSubnamespaces Returns Type Description TypesThatConfiguration | Improve this Doc View Source AreInTheSameNamespaceAs<T>(Boolean) Creates a new type filter that fiters based on if it's in the same namespace as another class Declaration public TypesThatConfiguration AreInTheSameNamespaceAs<T>(bool includeSubnamespaces = false) Parameters Type Name Description Boolean includeSubnamespaces Returns Type Description TypesThatConfiguration Type Parameters Name Description T | Improve this Doc View Source AreNotPublic() Adds a type filter that returns true if the type is private Declaration public TypesThatConfiguration AreNotPublic() Returns Type Description TypesThatConfiguration configuration object | Improve this Doc View Source AreOpenGeneric() Adds a type filter that returns true if the type is an open generic Declaration public TypesThatConfiguration AreOpenGeneric() Returns Type Description TypesThatConfiguration configuration object | Improve this Doc View Source ArePublic() Adds a type filter that returns true if the type is public Declaration public TypesThatConfiguration ArePublic() Returns Type Description TypesThatConfiguration configuration object | Improve this Doc View Source Contains(String) Creates a new type filter that returns true if the name contains the provided string Declaration public TypesThatConfiguration Contains(string name) Parameters Type Name Description String name string to test for Returns Type Description TypesThatConfiguration configuration object | Improve this Doc View Source EndWith(String) Creates a new type filter that returns true if the Name ends with the provided string Declaration public TypesThatConfiguration EndWith(string name) Parameters Type Name Description String name test string Returns Type Description TypesThatConfiguration configuration object | Improve this Doc View Source HaveAttribute(Func<Type, Boolean>) Adds type filter that filters based uppon a classes attribute Declaration public TypesThatConfiguration HaveAttribute(Func<Type, bool> consider) Parameters Type Name Description Func < Type , Boolean > consider Returns Type Description TypesThatConfiguration | Improve this Doc View Source HaveAttribute(Type, Func<Attribute, Boolean>) Tests to see if a type has an attribute Declaration public TypesThatConfiguration HaveAttribute(Type attributeType, Func<Attribute, bool> attributeFilter = null) Parameters Type Name Description Type attributeType Func < Attribute , Boolean > attributeFilter Returns Type Description TypesThatConfiguration | Improve this Doc View Source HaveAttribute<TAttribute>(Func<TAttribute, Boolean>) Tests to see if a type has an attribute Declaration public TypesThatConfiguration HaveAttribute<TAttribute>(Func<TAttribute, bool> attributeFilter = null) where TAttribute : Attribute Parameters Type Name Description Func <TAttribute, Boolean > attributeFilter Returns Type Description TypesThatConfiguration Type Parameters Name Description TAttribute | Improve this Doc View Source HaveProperty(String) Creates a type filter that returns true if a type has a particular property name Declaration public TypesThatConfiguration HaveProperty(string propertyName) Parameters Type Name Description String propertyName property name Returns Type Description TypesThatConfiguration configuration object | Improve this Doc View Source HaveProperty(Type, String) Creates a type filter that returns true if a type has a particular property name Declaration public TypesThatConfiguration HaveProperty(Type propertyType, string propertyName = null) Parameters Type Name Description Type propertyType property type String propertyName property name Returns Type Description TypesThatConfiguration configuration object | Improve this Doc View Source HaveProperty<T>(String) Creates a type filter that returns true if a type has a particular property name Declaration public TypesThatConfiguration HaveProperty<T>(string propertyName = null) Parameters Type Name Description String propertyName property name Returns Type Description TypesThatConfiguration configuration object Type Parameters Name Description T property type | Improve this Doc View Source Match(Func<Type, Boolean>) Adds a type filter directly Declaration public TypesThatConfiguration Match(Func<Type, bool> typeFilter) Parameters Type Name Description Func < Type , Boolean > typeFilter type filter Returns Type Description TypesThatConfiguration type filter | Improve this Doc View Source StartWith(String) Creates a new type filter method that returns true if the Name of the type starts with name Declaration public TypesThatConfiguration StartWith(string name) Parameters Type Name Description String name Returns Type Description TypesThatConfiguration"
  },
  "api/EasyRpc.AspNetCore.Views.html": {
    "href": "api/EasyRpc.AspNetCore.Views.html",
    "title": "Namespace EasyRpc.AspNetCore.Views | EasyRpc documentation website",
    "keywords": "Namespace EasyRpc.AspNetCore.Views Classes ReturnViewAttribute Methods marked with this will return a view instead of serialized data ViewActionResult Action result for views ViewFilter Rpc method filter Interfaces IViewNameGenerator"
  },
  "api/EasyRpc.AspNetCore.Views.IViewNameGenerator.html": {
    "href": "api/EasyRpc.AspNetCore.Views.IViewNameGenerator.html",
    "title": "Interface IViewNameGenerator | EasyRpc documentation website",
    "keywords": "Interface IViewNameGenerator Namespace : EasyRpc.AspNetCore.Views Assembly : EasyRpc.AspNetCore.Views.dll Syntax public interface IViewNameGenerator Methods | Improve this Doc View Source GenerateName(ICurrentApiInformation, IEndPointMethodConfigurationReadOnly) Generate view name based off an endpoint Declaration string GenerateName(ICurrentApiInformation currentApi, IEndPointMethodConfigurationReadOnly configurationReadOnly) Parameters Type Name Description ICurrentApiInformation currentApi IEndPointMethodConfigurationReadOnly configurationReadOnly Returns Type Description String"
  },
  "api/EasyRpc.AspNetCore.Views.ReturnViewAttribute.html": {
    "href": "api/EasyRpc.AspNetCore.Views.ReturnViewAttribute.html",
    "title": "Class ReturnViewAttribute | EasyRpc documentation website",
    "keywords": "Class ReturnViewAttribute Methods marked with this will return a view instead of serialized data Inheritance Object Attribute ReturnViewAttribute Implements IRequestFilterAttribute IRawContentAttribute Inherited Members Attribute.Equals(Object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, Boolean) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, Boolean) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, Boolean) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, Boolean) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, Boolean) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, Boolean) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, Boolean) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, Boolean) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, Boolean) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Boolean) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, Boolean) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, Boolean) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, Boolean) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, Boolean) Attribute.Match(Object) Attribute.TypeId Object.Equals(Object, Object) Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : EasyRpc.AspNetCore.Views Assembly : EasyRpc.AspNetCore.Views.dll Syntax public class ReturnViewAttribute : Attribute, IRequestFilterAttribute, IRawContentAttribute Properties | Improve this Doc View Source ContentEncoding Content encoding if applicable Declaration public string ContentEncoding { get; set; } Property Value Type Description String | Improve this Doc View Source ContentType Content type returned Declaration public string ContentType { get; set; } Property Value Type Description String | Improve this Doc View Source IsPartial Is view a partial Declaration public bool IsPartial { get; set; } Property Value Type Description Boolean | Improve this Doc View Source ViewName View name to return Declaration public string ViewName { get; set; } Property Value Type Description String Methods | Improve this Doc View Source ProvideFilters(ICurrentApiInformation, IEndPointMethodConfigurationReadOnly) Provide a list of filters Declaration public IEnumerable<Func<RequestExecutionContext, IRequestFilter>> ProvideFilters(ICurrentApiInformation currentApi, IEndPointMethodConfigurationReadOnly configurationReadOnly) Parameters Type Name Description ICurrentApiInformation currentApi IEndPointMethodConfigurationReadOnly configurationReadOnly Returns Type Description IEnumerable < Func < RequestExecutionContext , IRequestFilter >> Implements IRequestFilterAttribute IRawContentAttribute"
  },
  "api/EasyRpc.AspNetCore.Views.ViewActionResult.html": {
    "href": "api/EasyRpc.AspNetCore.Views.ViewActionResult.html",
    "title": "Class ViewActionResult | EasyRpc documentation website",
    "keywords": "Class ViewActionResult Action result for views Inheritance Object ViewActionResult Implements IActionResult Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : EasyRpc.AspNetCore.Views Assembly : EasyRpc.AspNetCore.Views.dll Syntax public class ViewActionResult : IActionResult Constructors | Improve this Doc View Source ViewActionResult(ViewExecutor, IModelMetadataProvider, ITempDataProvider, String, Boolean, String, Object, Int32) Default constructor Declaration public ViewActionResult(ViewExecutor executor, IModelMetadataProvider modelMetadataProvider, ITempDataProvider tempDataProvider, string viewName, bool isMainPage, string contentType, object result, int httpResult) Parameters Type Name Description ViewExecutor executor IModelMetadataProvider modelMetadataProvider ITempDataProvider tempDataProvider String viewName Boolean isMainPage String contentType Object result Int32 httpResult Methods | Improve this Doc View Source ExecuteResultAsync(ActionContext) Declaration public Task ExecuteResultAsync(ActionContext context) Parameters Type Name Description ActionContext context Returns Type Description Task Implements Microsoft.AspNetCore.Mvc.IActionResult"
  },
  "api/EasyRpc.AspNetCore.Views.ViewFilter.html": {
    "href": "api/EasyRpc.AspNetCore.Views.ViewFilter.html",
    "title": "Class ViewFilter | EasyRpc documentation website",
    "keywords": "Class ViewFilter Rpc method filter Inheritance Object ViewFilter Implements IRequestExecutionFilter IRequestFilter Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : EasyRpc.AspNetCore.Views Assembly : EasyRpc.AspNetCore.Views.dll Syntax public class ViewFilter : IRequestExecutionFilter, IRequestFilter Constructors | Improve this Doc View Source ViewFilter(String, Boolean, ViewExecutor, IModelMetadataProvider, ITempDataProvider, String) Default constructor Declaration public ViewFilter(string viewName, bool isMainPage, ViewExecutor executor, IModelMetadataProvider modelMetadataProvider, ITempDataProvider tempDataProvider, string contentType) Parameters Type Name Description String viewName Boolean isMainPage ViewExecutor executor IModelMetadataProvider modelMetadataProvider ITempDataProvider tempDataProvider String contentType Methods | Improve this Doc View Source AfterExecute(RequestExecutionContext) Called after the execution Declaration public void AfterExecute(RequestExecutionContext context) Parameters Type Name Description RequestExecutionContext context | Improve this Doc View Source BeforeExecute(RequestExecutionContext) Called before the execution happens. Declaration public void BeforeExecute(RequestExecutionContext context) Parameters Type Name Description RequestExecutionContext context Implements IRequestExecutionFilter IRequestFilter"
  },
  "api/EasyRpc.DynamicClient.CodeGeneration.html": {
    "href": "api/EasyRpc.DynamicClient.CodeGeneration.html",
    "title": "Namespace EasyRpc.DynamicClient.CodeGeneration | EasyRpc documentation website",
    "keywords": "Namespace EasyRpc.DynamicClient.CodeGeneration Classes ILGenerationUtilities IL Generation utilities ImplementationRequest SerializationTypeCreator ServiceImplementationGenerator ServiceImplementationGenerator.GenerationContext ServiceImplementationGenerator.MethodGenerationContext Interfaces IClientSerializationTypeAttributor ISerializationTypeCreator IServiceImplementationGenerator"
  },
  "api/EasyRpc.DynamicClient.CodeGeneration.IClientSerializationTypeAttributor.html": {
    "href": "api/EasyRpc.DynamicClient.CodeGeneration.IClientSerializationTypeAttributor.html",
    "title": "Interface IClientSerializationTypeAttributor | EasyRpc documentation website",
    "keywords": "Interface IClientSerializationTypeAttributor Namespace : EasyRpc.DynamicClient.CodeGeneration Assembly : EasyRpc.DynamicClient.dll Syntax public interface IClientSerializationTypeAttributor Methods | Improve this Doc View Source AttributeProperty(PropertyBuilder, Int32) Declaration void AttributeProperty(PropertyBuilder propertyBuilder, int index) Parameters Type Name Description PropertyBuilder propertyBuilder Int32 index | Improve this Doc View Source AttributeType(TypeBuilder) Declaration void AttributeType(TypeBuilder typeBuilder) Parameters Type Name Description TypeBuilder typeBuilder"
  },
  "api/EasyRpc.DynamicClient.CodeGeneration.ILGenerationUtilities.html": {
    "href": "api/EasyRpc.DynamicClient.CodeGeneration.ILGenerationUtilities.html",
    "title": "Class ILGenerationUtilities | EasyRpc documentation website",
    "keywords": "Class ILGenerationUtilities IL Generation utilities Inheritance Object ILGenerationUtilities Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : EasyRpc.DynamicClient.CodeGeneration Assembly : EasyRpc.DynamicClient.dll Syntax public static class ILGenerationUtilities Methods | Improve this Doc View Source EmitBoolean(ILGenerator, Boolean) Declaration public static void EmitBoolean(this ILGenerator generator, bool boolValue) Parameters Type Name Description ILGenerator generator Boolean boolValue | Improve this Doc View Source EmitInt(ILGenerator, Int32) Emit int value Declaration public static void EmitInt(this ILGenerator generator, int intValue) Parameters Type Name Description ILGenerator generator generator Int32 intValue value to emit | Improve this Doc View Source EmitLoadArg(ILGenerator, Int32) Emit il for loading arg Declaration public static void EmitLoadArg(this ILGenerator ilGenerator, int parameterIndex) Parameters Type Name Description ILGenerator ilGenerator Int32 parameterIndex | Improve this Doc View Source EmitMethodCall(ILGenerator, MethodInfo) Emit method call Declaration public static void EmitMethodCall(this ILGenerator generator, MethodInfo method) Parameters Type Name Description ILGenerator generator MethodInfo method"
  },
  "api/EasyRpc.DynamicClient.CodeGeneration.ImplementationRequest.html": {
    "href": "api/EasyRpc.DynamicClient.CodeGeneration.ImplementationRequest.html",
    "title": "Class ImplementationRequest | EasyRpc documentation website",
    "keywords": "Class ImplementationRequest Inheritance Object ImplementationRequest Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : EasyRpc.DynamicClient.CodeGeneration Assembly : EasyRpc.DynamicClient.dll Syntax public class ImplementationRequest Properties | Improve this Doc View Source BasePath Declaration public string BasePath { get; set; } Property Value Type Description String | Improve this Doc View Source ClientProvider Declaration public IRpcHttpClientProvider ClientProvider { get; set; } Property Value Type Description IRpcHttpClientProvider | Improve this Doc View Source DefaultSerializer Declaration public IClientSerializer DefaultSerializer { get; set; } Property Value Type Description IClientSerializer | Improve this Doc View Source ExposeDefaultMethod Declaration public ExposeDefaultMethod ExposeDefaultMethod { get; set; } Property Value Type Description ExposeDefaultMethod | Improve this Doc View Source InterfaceType Declaration public Type InterfaceType { get; set; } Property Value Type Description Type | Improve this Doc View Source NamingConventionService Declaration public INamingConventionService NamingConventionService { get; set; } Property Value Type Description INamingConventionService | Improve this Doc View Source SingleParameterToBody Declaration public bool SingleParameterToBody { get; set; } Property Value Type Description Boolean"
  },
  "api/EasyRpc.DynamicClient.CodeGeneration.ISerializationTypeCreator.html": {
    "href": "api/EasyRpc.DynamicClient.CodeGeneration.ISerializationTypeCreator.html",
    "title": "Interface ISerializationTypeCreator | EasyRpc documentation website",
    "keywords": "Interface ISerializationTypeCreator Namespace : EasyRpc.DynamicClient.CodeGeneration Assembly : EasyRpc.DynamicClient.dll Syntax public interface ISerializationTypeCreator Methods | Improve this Doc View Source CreateSerializationTypeForMethod(List<ParameterInfo>) Declaration Type CreateSerializationTypeForMethod(List<ParameterInfo> parameters) Parameters Type Name Description List < ParameterInfo > parameters Returns Type Description Type"
  },
  "api/EasyRpc.DynamicClient.CodeGeneration.IServiceImplementationGenerator.html": {
    "href": "api/EasyRpc.DynamicClient.CodeGeneration.IServiceImplementationGenerator.html",
    "title": "Interface IServiceImplementationGenerator | EasyRpc documentation website",
    "keywords": "Interface IServiceImplementationGenerator Namespace : EasyRpc.DynamicClient.CodeGeneration Assembly : EasyRpc.DynamicClient.dll Syntax public interface IServiceImplementationGenerator Methods | Improve this Doc View Source GenerateImplementationForInterface(ImplementationRequest) Declaration Type GenerateImplementationForInterface(ImplementationRequest request) Parameters Type Name Description ImplementationRequest request Returns Type Description Type"
  },
  "api/EasyRpc.DynamicClient.CodeGeneration.SerializationTypeCreator.html": {
    "href": "api/EasyRpc.DynamicClient.CodeGeneration.SerializationTypeCreator.html",
    "title": "Class SerializationTypeCreator | EasyRpc documentation website",
    "keywords": "Class SerializationTypeCreator Inheritance Object SerializationTypeCreator Implements ISerializationTypeCreator Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : EasyRpc.DynamicClient.CodeGeneration Assembly : EasyRpc.DynamicClient.dll Syntax public class SerializationTypeCreator : ISerializationTypeCreator Constructors | Improve this Doc View Source SerializationTypeCreator(IEnumerable<IClientSerializationTypeAttributor>) Declaration public SerializationTypeCreator(IEnumerable<IClientSerializationTypeAttributor> serializationTypeAttributors) Parameters Type Name Description IEnumerable < IClientSerializationTypeAttributor > serializationTypeAttributors Methods | Improve this Doc View Source CreateSerializationTypeForMethod(List<ParameterInfo>) Declaration public Type CreateSerializationTypeForMethod(List<ParameterInfo> parameters) Parameters Type Name Description List < ParameterInfo > parameters Returns Type Description Type Implements ISerializationTypeCreator"
  },
  "api/EasyRpc.DynamicClient.CodeGeneration.ServiceImplementationGenerator.GenerationContext.html": {
    "href": "api/EasyRpc.DynamicClient.CodeGeneration.ServiceImplementationGenerator.GenerationContext.html",
    "title": "Class ServiceImplementationGenerator.GenerationContext | EasyRpc documentation website",
    "keywords": "Class ServiceImplementationGenerator.GenerationContext Inheritance Object ServiceImplementationGenerator.GenerationContext Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : EasyRpc.DynamicClient.CodeGeneration Assembly : EasyRpc.DynamicClient.dll Syntax public class GenerationContext Properties | Improve this Doc View Source FinalizeTypeActions Declaration public List<Action<Type>> FinalizeTypeActions { get; } Property Value Type Description List < Action < Type >> | Improve this Doc View Source RpcExecutionServiceField Declaration public FieldBuilder RpcExecutionServiceField { get; set; } Property Value Type Description FieldBuilder"
  },
  "api/EasyRpc.DynamicClient.CodeGeneration.ServiceImplementationGenerator.html": {
    "href": "api/EasyRpc.DynamicClient.CodeGeneration.ServiceImplementationGenerator.html",
    "title": "Class ServiceImplementationGenerator | EasyRpc documentation website",
    "keywords": "Class ServiceImplementationGenerator Inheritance Object ServiceImplementationGenerator Implements IServiceImplementationGenerator Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : EasyRpc.DynamicClient.CodeGeneration Assembly : EasyRpc.DynamicClient.dll Syntax public class ServiceImplementationGenerator : IServiceImplementationGenerator Constructors | Improve this Doc View Source ServiceImplementationGenerator(ISerializationTypeCreator) Declaration public ServiceImplementationGenerator(ISerializationTypeCreator serializationTypeCreator) Parameters Type Name Description ISerializationTypeCreator serializationTypeCreator Methods | Improve this Doc View Source CreateTypeBuilder(ImplementationRequest, ServiceImplementationGenerator.GenerationContext) Declaration protected virtual TypeBuilder CreateTypeBuilder(ImplementationRequest request, ServiceImplementationGenerator.GenerationContext generationContext) Parameters Type Name Description ImplementationRequest request ServiceImplementationGenerator.GenerationContext generationContext Returns Type Description TypeBuilder | Improve this Doc View Source GenerateImplementationForInterface(ImplementationRequest) Declaration public Type GenerateImplementationForInterface(ImplementationRequest request) Parameters Type Name Description ImplementationRequest request Returns Type Description Type Implements IServiceImplementationGenerator"
  },
  "api/EasyRpc.DynamicClient.CodeGeneration.ServiceImplementationGenerator.MethodGenerationContext.html": {
    "href": "api/EasyRpc.DynamicClient.CodeGeneration.ServiceImplementationGenerator.MethodGenerationContext.html",
    "title": "Class ServiceImplementationGenerator.MethodGenerationContext | EasyRpc documentation website",
    "keywords": "Class ServiceImplementationGenerator.MethodGenerationContext Inheritance Object ServiceImplementationGenerator.MethodGenerationContext Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : EasyRpc.DynamicClient.CodeGeneration Assembly : EasyRpc.DynamicClient.dll Syntax public class MethodGenerationContext Constructors | Improve this Doc View Source MethodGenerationContext(ServiceImplementationGenerator.GenerationContext) Declaration public MethodGenerationContext(ServiceImplementationGenerator.GenerationContext generationContext) Parameters Type Name Description ServiceImplementationGenerator.GenerationContext generationContext Properties | Improve this Doc View Source BodyParameters Declaration public List<ParameterInfo> BodyParameters { get; set; } Property Value Type Description List < ParameterInfo > | Improve this Doc View Source BodyVariable Declaration public LocalBuilder BodyVariable { get; set; } Property Value Type Description LocalBuilder | Improve this Doc View Source CancellationTokenParameter Declaration public ParameterInfo CancellationTokenParameter { get; set; } Property Value Type Description ParameterInfo | Improve this Doc View Source ExecuteInformation Declaration public RpcExecuteInformation ExecuteInformation { get; set; } Property Value Type Description RpcExecuteInformation | Improve this Doc View Source ExecutionInfoField Declaration public FieldBuilder ExecutionInfoField { get; set; } Property Value Type Description FieldBuilder | Improve this Doc View Source GenerationContext Declaration public ServiceImplementationGenerator.GenerationContext GenerationContext { get; } Property Value Type Description ServiceImplementationGenerator.GenerationContext | Improve this Doc View Source PathTemplate Declaration public string PathTemplate { get; set; } Property Value Type Description String | Improve this Doc View Source PathVariable Declaration public LocalBuilder PathVariable { get; set; } Property Value Type Description LocalBuilder | Improve this Doc View Source UrlParameters Declaration public List<ParameterInfo> UrlParameters { get; set; } Property Value Type Description List < ParameterInfo >"
  },
  "api/EasyRpc.DynamicClient.ExecutionService.html": {
    "href": "api/EasyRpc.DynamicClient.ExecutionService.html",
    "title": "Namespace EasyRpc.DynamicClient.ExecutionService | EasyRpc documentation website",
    "keywords": "Namespace EasyRpc.DynamicClient.ExecutionService Classes RpcExecuteInformation RpcExecutionService RpcHttpClient RpcHttpClientProvider Interfaces IRpcExecutionService IRpcHttpClient IRpcHttpClientProvider"
  },
  "api/EasyRpc.DynamicClient.ExecutionService.IRpcExecutionService.html": {
    "href": "api/EasyRpc.DynamicClient.ExecutionService.IRpcExecutionService.html",
    "title": "Interface IRpcExecutionService | EasyRpc documentation website",
    "keywords": "Interface IRpcExecutionService Namespace : EasyRpc.DynamicClient.ExecutionService Assembly : EasyRpc.DynamicClient.dll Syntax public interface IRpcExecutionService Methods | Improve this Doc View Source ExecuteMethod(RpcExecuteInformation, String, Object, Nullable<CancellationToken>) Declaration Task ExecuteMethod(RpcExecuteInformation executeInformation, string path, object bodyParameters, CancellationToken? cancellationToken) Parameters Type Name Description RpcExecuteInformation executeInformation String path Object bodyParameters Nullable < CancellationToken > cancellationToken Returns Type Description Task | Improve this Doc View Source ExecuteMethodWithValue<T>(RpcExecuteInformation, String, Object, Nullable<CancellationToken>) Declaration Task<T> ExecuteMethodWithValue<T>(RpcExecuteInformation executeInformation, string path, object bodyParameters, CancellationToken? cancellationToken) Parameters Type Name Description RpcExecuteInformation executeInformation String path Object bodyParameters Nullable < CancellationToken > cancellationToken Returns Type Description Task <T> Type Parameters Name Description T"
  },
  "api/EasyRpc.DynamicClient.ExecutionService.IRpcHttpClient.html": {
    "href": "api/EasyRpc.DynamicClient.ExecutionService.IRpcHttpClient.html",
    "title": "Interface IRpcHttpClient | EasyRpc documentation website",
    "keywords": "Interface IRpcHttpClient Namespace : EasyRpc.DynamicClient.ExecutionService Assembly : EasyRpc.DynamicClient.dll Syntax public interface IRpcHttpClient Methods | Improve this Doc View Source SendAsync(HttpRequestMessage, CancellationToken) Declaration Task<HttpResponseMessage> SendAsync(HttpRequestMessage message, CancellationToken cancellationToken) Parameters Type Name Description HttpRequestMessage message CancellationToken cancellationToken Returns Type Description Task < HttpResponseMessage >"
  },
  "api/EasyRpc.DynamicClient.ExecutionService.IRpcHttpClientProvider.html": {
    "href": "api/EasyRpc.DynamicClient.ExecutionService.IRpcHttpClientProvider.html",
    "title": "Interface IRpcHttpClientProvider | EasyRpc documentation website",
    "keywords": "Interface IRpcHttpClientProvider Namespace : EasyRpc.DynamicClient.ExecutionService Assembly : EasyRpc.DynamicClient.dll Syntax public interface IRpcHttpClientProvider Methods | Improve this Doc View Source ProvideClient() Declaration IRpcHttpClient ProvideClient() Returns Type Description IRpcHttpClient"
  },
  "api/EasyRpc.DynamicClient.ExecutionService.RpcExecuteInformation.html": {
    "href": "api/EasyRpc.DynamicClient.ExecutionService.RpcExecuteInformation.html",
    "title": "Class RpcExecuteInformation | EasyRpc documentation website",
    "keywords": "Class RpcExecuteInformation Inheritance Object RpcExecuteInformation Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : EasyRpc.DynamicClient.ExecutionService Assembly : EasyRpc.DynamicClient.dll Syntax public class RpcExecuteInformation Properties | Improve this Doc View Source ClientProvider Declaration public IRpcHttpClientProvider ClientProvider { get; set; } Property Value Type Description IRpcHttpClientProvider | Improve this Doc View Source CompressBody Declaration public bool CompressBody { get; set; } Property Value Type Description Boolean | Improve this Doc View Source Method Declaration public HttpMethod Method { get; set; } Property Value Type Description HttpMethod | Improve this Doc View Source Serializer Declaration public IClientSerializer Serializer { get; set; } Property Value Type Description IClientSerializer"
  },
  "api/EasyRpc.DynamicClient.ExecutionService.RpcExecutionService.html": {
    "href": "api/EasyRpc.DynamicClient.ExecutionService.RpcExecutionService.html",
    "title": "Class RpcExecutionService | EasyRpc documentation website",
    "keywords": "Class RpcExecutionService Inheritance Object RpcExecutionService Implements IRpcExecutionService Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : EasyRpc.DynamicClient.ExecutionService Assembly : EasyRpc.DynamicClient.dll Syntax public class RpcExecutionService : IRpcExecutionService Methods | Improve this Doc View Source ExecuteMethod(RpcExecuteInformation, String, Object, Nullable<CancellationToken>) Declaration public Task ExecuteMethod(RpcExecuteInformation executeInformation, string path, object bodyParameters, CancellationToken? cancellationToken) Parameters Type Name Description RpcExecuteInformation executeInformation String path Object bodyParameters Nullable < CancellationToken > cancellationToken Returns Type Description Task | Improve this Doc View Source ExecuteMethod<T>(RpcExecuteInformation, String, Object, Nullable<CancellationToken>) Declaration public Task<T> ExecuteMethod<T>(RpcExecuteInformation executeInformation, string path, object bodyParameters, CancellationToken? cancellationToken) Parameters Type Name Description RpcExecuteInformation executeInformation String path Object bodyParameters Nullable < CancellationToken > cancellationToken Returns Type Description Task <T> Type Parameters Name Description T | Improve this Doc View Source ExecuteMethodWithValue<T>(RpcExecuteInformation, String, Object, Nullable<CancellationToken>) Declaration public Task<T> ExecuteMethodWithValue<T>(RpcExecuteInformation executeInformation, string path, object bodyParameters, CancellationToken? cancellationToken) Parameters Type Name Description RpcExecuteInformation executeInformation String path Object bodyParameters Nullable < CancellationToken > cancellationToken Returns Type Description Task <T> Type Parameters Name Description T Implements IRpcExecutionService"
  },
  "api/EasyRpc.DynamicClient.ExecutionService.RpcHttpClient.html": {
    "href": "api/EasyRpc.DynamicClient.ExecutionService.RpcHttpClient.html",
    "title": "Class RpcHttpClient | EasyRpc documentation website",
    "keywords": "Class RpcHttpClient Inheritance Object RpcHttpClient Implements IRpcHttpClient Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : EasyRpc.DynamicClient.ExecutionService Assembly : EasyRpc.DynamicClient.dll Syntax public class RpcHttpClient : IRpcHttpClient Constructors | Improve this Doc View Source RpcHttpClient(HttpClient) Declaration public RpcHttpClient(HttpClient httpClient) Parameters Type Name Description HttpClient httpClient Methods | Improve this Doc View Source SendAsync(HttpRequestMessage, CancellationToken) Declaration public Task<HttpResponseMessage> SendAsync(HttpRequestMessage message, CancellationToken cancellationToken) Parameters Type Name Description HttpRequestMessage message CancellationToken cancellationToken Returns Type Description Task < HttpResponseMessage > Implements IRpcHttpClient"
  },
  "api/EasyRpc.DynamicClient.ExecutionService.RpcHttpClientProvider.html": {
    "href": "api/EasyRpc.DynamicClient.ExecutionService.RpcHttpClientProvider.html",
    "title": "Class RpcHttpClientProvider | EasyRpc documentation website",
    "keywords": "Class RpcHttpClientProvider Inheritance Object RpcHttpClientProvider Implements IRpcHttpClientProvider Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : EasyRpc.DynamicClient.ExecutionService Assembly : EasyRpc.DynamicClient.dll Syntax public class RpcHttpClientProvider : IRpcHttpClientProvider Constructors | Improve this Doc View Source RpcHttpClientProvider(HttpClient) Declaration public RpcHttpClientProvider(HttpClient client) Parameters Type Name Description HttpClient client Methods | Improve this Doc View Source ProvideClient() Declaration public IRpcHttpClient ProvideClient() Returns Type Description IRpcHttpClient Implements IRpcHttpClientProvider"
  },
  "api/EasyRpc.DynamicClient.Grace.html": {
    "href": "api/EasyRpc.DynamicClient.Grace.html",
    "title": "Namespace EasyRpc.DynamicClient.Grace | EasyRpc documentation website",
    "keywords": "Namespace EasyRpc.DynamicClient.Grace Classes LanguageExtensions ProxyNamespaceConfig"
  },
  "api/EasyRpc.DynamicClient.Grace.Impl.html": {
    "href": "api/EasyRpc.DynamicClient.Grace.Impl.html",
    "title": "Namespace EasyRpc.DynamicClient.Grace.Impl | EasyRpc documentation website",
    "keywords": "Namespace EasyRpc.DynamicClient.Grace.Impl Classes ProxyStrategyProvider"
  },
  "api/EasyRpc.DynamicClient.Grace.Impl.ProxyStrategyProvider.html": {
    "href": "api/EasyRpc.DynamicClient.Grace.Impl.ProxyStrategyProvider.html",
    "title": "Class ProxyStrategyProvider | EasyRpc documentation website",
    "keywords": "Class ProxyStrategyProvider Inheritance Object ProxyStrategyProvider Implements Grace.DependencyInjection.IMissingExportStrategyProvider IDisposable Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : EasyRpc.DynamicClient.Grace.Impl Assembly : EasyRpc.DynamicClient.Grace.dll Syntax public class ProxyStrategyProvider : IMissingExportStrategyProvider, IDisposable Constructors | Improve this Doc View Source ProxyStrategyProvider(ProxyNamespaceConfig) Declaration public ProxyStrategyProvider(ProxyNamespaceConfig namespaceConfig) Parameters Type Name Description ProxyNamespaceConfig namespaceConfig Methods | Improve this Doc View Source CanLocate(IInjectionScope, IActivationExpressionRequest) Declaration public bool CanLocate(IInjectionScope scope, IActivationExpressionRequest request) Parameters Type Name Description Grace.DependencyInjection.IInjectionScope scope Grace.DependencyInjection.IActivationExpressionRequest request Returns Type Description Boolean | Improve this Doc View Source Dispose() Declaration public void Dispose() | Improve this Doc View Source ProvideExports(IInjectionScope, IActivationExpressionRequest) Declaration public IEnumerable<IActivationStrategy> ProvideExports(IInjectionScope scope, IActivationExpressionRequest request) Parameters Type Name Description Grace.DependencyInjection.IInjectionScope scope Grace.DependencyInjection.IActivationExpressionRequest request Returns Type Description IEnumerable < Grace.DependencyInjection.IActivationStrategy > Implements Grace.DependencyInjection.IMissingExportStrategyProvider System.IDisposable"
  },
  "api/EasyRpc.DynamicClient.Grace.LanguageExtensions.html": {
    "href": "api/EasyRpc.DynamicClient.Grace.LanguageExtensions.html",
    "title": "Class LanguageExtensions | EasyRpc documentation website",
    "keywords": "Class LanguageExtensions Inheritance Object LanguageExtensions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : EasyRpc.DynamicClient.Grace Assembly : EasyRpc.DynamicClient.Grace.dll Syntax public static class LanguageExtensions Methods | Improve this Doc View Source ProxyNamespace(IExportRegistrationBlock, ProxyNamespaceConfig) Proxy a namespace with a specific config Declaration public static void ProxyNamespace(this IExportRegistrationBlock block, ProxyNamespaceConfig config) Parameters Type Name Description Grace.DependencyInjection.IExportRegistrationBlock block ProxyNamespaceConfig config | Improve this Doc View Source ProxyNamespace(IExportRegistrationBlock, String, Boolean, IClientSerializer, INamingConventionService, String[]) Proxy a namespace Declaration public static void ProxyNamespace(this IExportRegistrationBlock block, string url = null, bool useDataContext = false, IClientSerializer serializer = null, INamingConventionService namingConvention = null, params string[] namespaces) Parameters Type Name Description Grace.DependencyInjection.IExportRegistrationBlock block String url Boolean useDataContext IClientSerializer serializer INamingConventionService namingConvention String [] namespaces"
  },
  "api/EasyRpc.DynamicClient.Grace.ProxyNamespaceConfig.html": {
    "href": "api/EasyRpc.DynamicClient.Grace.ProxyNamespaceConfig.html",
    "title": "Class ProxyNamespaceConfig | EasyRpc documentation website",
    "keywords": "Class ProxyNamespaceConfig Inheritance Object ProxyNamespaceConfig Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : EasyRpc.DynamicClient.Grace Assembly : EasyRpc.DynamicClient.Grace.dll Syntax public class ProxyNamespaceConfig Properties | Improve this Doc View Source CompressRequest Declaration public Func<MethodInfo, bool> CompressRequest { get; set; } Property Value Type Description Func < MethodInfo , Boolean > | Improve this Doc View Source CompressResponse Declaration public Func<MethodInfo, bool> CompressResponse { get; set; } Property Value Type Description Func < MethodInfo , Boolean > | Improve this Doc View Source CreateClient Declaration public Func<string, HttpClient> CreateClient { get; set; } Property Value Type Description Func < String , HttpClient > | Improve this Doc View Source Namespaces Declaration public string[] Namespaces { get; set; } Property Value Type Description String [] | Improve this Doc View Source NamingConvention Declaration public INamingConventionService NamingConvention { get; set; } Property Value Type Description INamingConventionService | Improve this Doc View Source Serializer Declaration public IClientSerializer Serializer { get; set; } Property Value Type Description IClientSerializer | Improve this Doc View Source Url Declaration public string Url { get; set; } Property Value Type Description String | Improve this Doc View Source UseDataContext Declaration public bool UseDataContext { get; set; } Property Value Type Description Boolean"
  },
  "api/EasyRpc.DynamicClient.html": {
    "href": "api/EasyRpc.DynamicClient.html",
    "title": "Namespace EasyRpc.DynamicClient | EasyRpc documentation website",
    "keywords": "Namespace EasyRpc.DynamicClient Interfaces IHeaderProcessor INamingConventionService Naming convention provider"
  },
  "api/EasyRpc.DynamicClient.IHeaderProcessor.html": {
    "href": "api/EasyRpc.DynamicClient.IHeaderProcessor.html",
    "title": "Interface IHeaderProcessor | EasyRpc documentation website",
    "keywords": "Interface IHeaderProcessor Namespace : EasyRpc.DynamicClient Assembly : EasyRpc.DynamicClient.dll Syntax public interface IHeaderProcessor Methods | Improve this Doc View Source ProcessRequestHeader(HttpRequestMessage) Declaration void ProcessRequestHeader(HttpRequestMessage message) Parameters Type Name Description HttpRequestMessage message | Improve this Doc View Source ProcessResponseHeader(HttpResponseMessage) Declaration void ProcessResponseHeader(HttpResponseMessage message) Parameters Type Name Description HttpResponseMessage message"
  },
  "api/EasyRpc.DynamicClient.INamingConventionService.html": {
    "href": "api/EasyRpc.DynamicClient.INamingConventionService.html",
    "title": "Interface INamingConventionService | EasyRpc documentation website",
    "keywords": "Interface INamingConventionService Naming convention provider Namespace : EasyRpc.DynamicClient Assembly : EasyRpc.DynamicClient.dll Syntax public interface INamingConventionService Methods | Improve this Doc View Source GetMethodName(MethodInfo) Get method name Declaration string GetMethodName(MethodInfo method) Parameters Type Name Description MethodInfo method Returns Type Description String | Improve this Doc View Source GetNameForType(Type) Get name for type Declaration string GetNameForType(Type type) Parameters Type Name Description Type type Returns Type Description String"
  },
  "api/EasyRpc.DynamicClient.MessagePack.html": {
    "href": "api/EasyRpc.DynamicClient.MessagePack.html",
    "title": "Namespace EasyRpc.DynamicClient.MessagePack | EasyRpc documentation website",
    "keywords": "Namespace EasyRpc.DynamicClient.MessagePack Classes MessagePackClientSerializationTypeAttributor MessagePackClientSerializer"
  },
  "api/EasyRpc.DynamicClient.MessagePack.MessagePackClientSerializationTypeAttributor.html": {
    "href": "api/EasyRpc.DynamicClient.MessagePack.MessagePackClientSerializationTypeAttributor.html",
    "title": "Class MessagePackClientSerializationTypeAttributor | EasyRpc documentation website",
    "keywords": "Class MessagePackClientSerializationTypeAttributor Inheritance Object MessagePackClientSerializationTypeAttributor Implements IClientSerializationTypeAttributor Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : EasyRpc.DynamicClient.MessagePack Assembly : EasyRpc.DynamicClient.MessagePack.dll Syntax public class MessagePackClientSerializationTypeAttributor : IClientSerializationTypeAttributor Constructors | Improve this Doc View Source MessagePackClientSerializationTypeAttributor(Boolean) Declaration public MessagePackClientSerializationTypeAttributor(bool useNameAsKey = false) Parameters Type Name Description Boolean useNameAsKey Methods | Improve this Doc View Source AttributeProperty(PropertyBuilder, Int32) Declaration public void AttributeProperty(PropertyBuilder propertyBuilder, int index) Parameters Type Name Description PropertyBuilder propertyBuilder Int32 index | Improve this Doc View Source AttributeType(TypeBuilder) Declaration public void AttributeType(TypeBuilder typeBuilder) Parameters Type Name Description TypeBuilder typeBuilder Implements IClientSerializationTypeAttributor"
  },
  "api/EasyRpc.DynamicClient.MessagePack.MessagePackClientSerializer.html": {
    "href": "api/EasyRpc.DynamicClient.MessagePack.MessagePackClientSerializer.html",
    "title": "Class MessagePackClientSerializer | EasyRpc documentation website",
    "keywords": "Class MessagePackClientSerializer Inheritance Object MessagePackClientSerializer Implements IClientSerializer Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : EasyRpc.DynamicClient.MessagePack Assembly : EasyRpc.DynamicClient.MessagePack.dll Syntax public class MessagePackClientSerializer : IClientSerializer Properties | Improve this Doc View Source ContentType Content type of serializer Declaration public string ContentType { get; } Property Value Type Description String Methods | Improve this Doc View Source Deserialize<T>(Byte[]) Deserialize from bytes Declaration public Task<T> Deserialize<T>(byte[] bytes) Parameters Type Name Description Byte [] bytes Returns Type Description Task <T> Type Parameters Name Description T | Improve this Doc View Source DeserializeFromResponse<T>(HttpResponseMessage) Deserialize response body Declaration public Task<T> DeserializeFromResponse<T>(HttpResponseMessage responseMessage) Parameters Type Name Description HttpResponseMessage responseMessage Returns Type Description Task <T> Type Parameters Name Description T | Improve this Doc View Source Serialize(Object) Serialize object Declaration public Task<byte[]> Serialize(object value) Parameters Type Name Description Object value Returns Type Description Task < Byte []> | Improve this Doc View Source SerializeToRequest(Object, HttpRequestMessage, Boolean) Serialize body to request Declaration public Task SerializeToRequest(object body, HttpRequestMessage request, bool compressBody) Parameters Type Name Description Object body HttpRequestMessage request Boolean compressBody Returns Type Description Task Implements IClientSerializer"
  },
  "api/EasyRpc.DynamicClient.Newtonsoft.html": {
    "href": "api/EasyRpc.DynamicClient.Newtonsoft.html",
    "title": "Namespace EasyRpc.DynamicClient.Newtonsoft | EasyRpc documentation website",
    "keywords": "Namespace EasyRpc.DynamicClient.Newtonsoft Classes NewtonsoftClientSerializer"
  },
  "api/EasyRpc.DynamicClient.Newtonsoft.NewtonsoftClientSerializer.html": {
    "href": "api/EasyRpc.DynamicClient.Newtonsoft.NewtonsoftClientSerializer.html",
    "title": "Class NewtonsoftClientSerializer | EasyRpc documentation website",
    "keywords": "Class NewtonsoftClientSerializer Inheritance Object NewtonsoftClientSerializer Implements IClientSerializer Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : EasyRpc.DynamicClient.Newtonsoft Assembly : EasyRpc.DynamicClient.Newtonsoft.dll Syntax public class NewtonsoftClientSerializer : IClientSerializer Constructors | Improve this Doc View Source NewtonsoftClientSerializer() Declaration public NewtonsoftClientSerializer() | Improve this Doc View Source NewtonsoftClientSerializer(JsonSerializer) Declaration public NewtonsoftClientSerializer(JsonSerializer serializer) Parameters Type Name Description Newtonsoft.Json.JsonSerializer serializer Fields | Improve this Doc View Source DefaultSerializer Declaration public static readonly NewtonsoftClientSerializer DefaultSerializer Field Value Type Description NewtonsoftClientSerializer Properties | Improve this Doc View Source ContentType Content type of serializer Declaration public string ContentType { get; set; } Property Value Type Description String | Improve this Doc View Source JsonSerializer Declaration public JsonSerializer JsonSerializer { get; set; } Property Value Type Description Newtonsoft.Json.JsonSerializer Methods | Improve this Doc View Source Deserialize<T>(Byte[]) Deserialize from bytes Declaration public Task<T> Deserialize<T>(byte[] bytes) Parameters Type Name Description Byte [] bytes Returns Type Description Task <T> Type Parameters Name Description T | Improve this Doc View Source DeserializeFromResponse<T>(HttpResponseMessage) Deserialize response body Declaration public Task<T> DeserializeFromResponse<T>(HttpResponseMessage responseMessage) Parameters Type Name Description HttpResponseMessage responseMessage Returns Type Description Task <T> Type Parameters Name Description T | Improve this Doc View Source Serialize(Object) Serialize object Declaration public Task<byte[]> Serialize(object value) Parameters Type Name Description Object value Returns Type Description Task < Byte []> | Improve this Doc View Source SerializeToRequest(Object, HttpRequestMessage, Boolean) Serialize body to request Declaration public Task SerializeToRequest(object body, HttpRequestMessage request, bool compressBody) Parameters Type Name Description Object body HttpRequestMessage request Boolean compressBody Returns Type Description Task Implements IClientSerializer"
  },
  "api/EasyRpc.DynamicClient.Serializers.html": {
    "href": "api/EasyRpc.DynamicClient.Serializers.html",
    "title": "Namespace EasyRpc.DynamicClient.Serializers | EasyRpc documentation website",
    "keywords": "Namespace EasyRpc.DynamicClient.Serializers Interfaces IClientSerializer Serializer"
  },
  "api/EasyRpc.DynamicClient.Serializers.IClientSerializer.html": {
    "href": "api/EasyRpc.DynamicClient.Serializers.IClientSerializer.html",
    "title": "Interface IClientSerializer | EasyRpc documentation website",
    "keywords": "Interface IClientSerializer Serializer Namespace : EasyRpc.DynamicClient.Serializers Assembly : EasyRpc.DynamicClient.dll Syntax public interface IClientSerializer Properties | Improve this Doc View Source ContentType Content type of serializer Declaration string ContentType { get; } Property Value Type Description String Methods | Improve this Doc View Source Deserialize<T>(Byte[]) Deserialize from bytes Declaration Task<T> Deserialize<T>(byte[] bytes) Parameters Type Name Description Byte [] bytes Returns Type Description Task <T> Type Parameters Name Description T | Improve this Doc View Source DeserializeFromResponse<T>(HttpResponseMessage) Deserialize response body Declaration Task<T> DeserializeFromResponse<T>(HttpResponseMessage responseMessage) Parameters Type Name Description HttpResponseMessage responseMessage Returns Type Description Task <T> Type Parameters Name Description T | Improve this Doc View Source Serialize(Object) Serialize object Declaration Task<byte[]> Serialize(object value) Parameters Type Name Description Object value Returns Type Description Task < Byte []> | Improve this Doc View Source SerializeToRequest(Object, HttpRequestMessage, Boolean) Serialize body to request Declaration Task SerializeToRequest(object body, HttpRequestMessage request, bool compressBody) Parameters Type Name Description Object body HttpRequestMessage request Boolean compressBody Returns Type Description Task"
  },
  "index.html": {
    "href": "index.html",
    "title": "EasyRpc - test service | EasyRpc documentation website",
    "keywords": "EasyRpc - test service Adds rpc service support to AspNetCore public void ConfigureServices(IServiceCollection services) { services.AddRpcServices(); } public void Configure(IApplicationBuilder app) { app.UseRpcServices(api => { // simple web method at /Status api.GetMethod(\"/Status\", () => new { status = \"Ok\"}); // Expose methods at /IntMath api.Expose<IntMathService>().As(\"IntMath\"); }); } public class IntMathService { // expose web api POST /IntMath/Add expecting {\"a\":int,\"b\":int} public int Add(int a, int b) { return a + b; } } Features EasyRpc allow developers to write business related classes and host them as remote procedure calls. In essence developers focus on writing services that fullfil requirements vs. writing RESTful services that require the developer to think about which verbs they want to use. Performs faster than MVC as seen in these 3rd party benchmarks Services participate in Asp.Net Core dependency injection framework Integrates with Asp.Net Core authorization schemes including Roles & Polices Built in data context idea that can be used to fetch and save data into header Filter support similar to Asp.Net filter (not exactly the same as no controller is ever created) Support for request/response gzip compression, br compression Built in Swagger UI Build"
  }
}